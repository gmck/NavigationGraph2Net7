# The proguard configuration file for the following section is C:\Program Files (x86)\Android\android-sdk\tools\proguard\proguard-android.txt
# This is a configuration file for ProGuard.
# http://proguard.sourceforge.net/index.html#manual/usage.html
#
# This file is no longer maintained and is not used by new (2.2+) versions of the
# Android plugin for Gradle. Instead, the Android plugin for Gradle generates the
# default rules at build time and stores them in the build directory.

-dontusemixedcaseclassnames
-dontskipnonpubliclibraryclasses
-verbose

# Optimization is turned off by default. Dex does not like code run
# through the ProGuard optimize and preverify steps (and performs some
# of these optimizations on its own).
-dontoptimize
-dontpreverify
# Note that if you want to enable optimization, you cannot just
# include optimization flags in your own project configuration file;
# instead you will need to point to the
# "proguard-android-optimize.txt" file instead of this one from your
# project.properties file.

-keepattributes *Annotation*
-keep public class com.google.vending.licensing.ILicensingService
-keep public class com.android.vending.licensing.ILicensingService

# For native methods, see http://proguard.sourceforge.net/manual/examples.html#native
-keepclasseswithmembernames class * {
    native <methods>;
}

# keep setters in Views so that animations can still work.
# see http://proguard.sourceforge.net/manual/examples.html#beans
-keepclassmembers public class * extends android.view.View {
   void set*(***);
   *** get*();
}

# We want to keep methods in Activity that could be used in the XML attribute onClick
-keepclassmembers class * extends android.app.Activity {
   public void *(android.view.View);
}

# For enumeration classes, see http://proguard.sourceforge.net/manual/examples.html#enumerations
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

-keepclassmembers class * implements android.os.Parcelable {
  public static final android.os.Parcelable$Creator CREATOR;
}

-keepclassmembers class **.R$* {
    public static <fields>;
}

# The support library contains references to newer platform versions.
# Don't warn about those in case this app is linking against an older
# platform version.  We know about them, and they are safe.
-dontwarn android.support.**

# Understand the @Keep support annotation.
-keep class android.support.annotation.Keep

-keep @android.support.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @android.support.annotation.Keep <init>(...);
}

# End of content from C:\Program Files (x86)\Android\android-sdk\tools\proguard\proguard-android.txt
# The proguard configuration file for the following section is obj\Release\net7.0-android33.0\proguard\proguard_xamarin.cfg
# This is Xamarin-specific (and enhanced) configuration.

-dontobfuscate

-keep class android.support.multidex.MultiDexApplication { <init>(); }
-keep class com.xamarin.java_interop.** { *; <init>(); }
-keep class mono.MonoRuntimeProvider* { *; <init>(...); }
-keep class mono.MonoPackageManager { *; <init>(...); }
-keep class mono.MonoPackageManager_Resources { *; <init>(...); }
-keep class mono.android.** { *; <init>(...); }
-keep class mono.java.** { *; <init>(...); }
-keep class mono.javax.** { *; <init>(...); }
-keep class opentk.platform.android.AndroidGameView { *; <init>(...); }
-keep class opentk.GameViewBase { *; <init>(...); }
-keep class opentk_1_0.platform.android.AndroidGameView { *; <init>(...); }
-keep class opentk_1_0.GameViewBase { *; <init>(...); }
-keep class com.xamarin.java_interop.ManagedPeer { *; <init>(...); }
-keep class xamarin.android.net.ServerCertificateCustomValidator_TrustManager { *; <init>(...); }
-keep class xamarin.android.net.ServerCertificateCustomValidator_TrustManager_FakeSSLSession { *; <init>(...); }
-keep class xamarin.android.net.ServerCertificateCustomValidator_AlwaysAcceptingHostnameVerifier { *; <init>(...); }

-keep class android.runtime.** { <init>(...); }
-keep class assembly_mono_android.android.runtime.** { <init>(...); }
# hash for android.runtime and assembly_mono_android.android.runtime.
-keep class md52ce486a14f4bcd95899665e9d932190b.** { *; <init>(...); }
-keepclassmembers class md52ce486a14f4bcd95899665e9d932190b.** { *; <init>(...); }

# Android's template misses fluent setters...
-keepclassmembers class * extends android.view.View {
   *** set*(...);
}

# also misses those inflated custom layout stuff from xml...
-keepclassmembers class * extends android.view.View {
   <init>(android.content.Context,android.util.AttributeSet);
   <init>(android.content.Context,android.util.AttributeSet,int);
}
-ignorewarnings
-keepattributes SourceFile
-keepattributes LineNumberTable
-printmapping "C:\ProjectsVS2022Preview\NavigationGraph2Net7\bin\Release\net7.0-android33.0\mapping.txt"

# End of content from obj\Release\net7.0-android33.0\proguard\proguard_xamarin.cfg
# The proguard configuration file for the following section is obj\Release\net7.0-android33.0\android-arm64\proguard\proguard_project_references.cfg
# ACW for NavigationGraph2Net7
# ACW for Xamarin.Jetbrains.Annotations
-keep class org.jetbrains.annotations.ApiStatus$AvailableSince
-keepclassmembers class org.jetbrains.annotations.ApiStatus$AvailableSince {
}

-keep class org.jetbrains.annotations.ApiStatus$Experimental
-keepclassmembers class org.jetbrains.annotations.ApiStatus$Experimental {
}

-keep class org.jetbrains.annotations.ApiStatus$Internal
-keepclassmembers class org.jetbrains.annotations.ApiStatus$Internal {
}

-keep class org.jetbrains.annotations.ApiStatus$NonExtendable
-keepclassmembers class org.jetbrains.annotations.ApiStatus$NonExtendable {
}

-keep class org.jetbrains.annotations.ApiStatus$OverrideOnly
-keepclassmembers class org.jetbrains.annotations.ApiStatus$OverrideOnly {
}

-keep class org.jetbrains.annotations.ApiStatus$ScheduledForRemoval
-keepclassmembers class org.jetbrains.annotations.ApiStatus$ScheduledForRemoval {
}

-keep class org.jetbrains.annotations.ApiStatus
-keepclassmembers class org.jetbrains.annotations.ApiStatus {
}

-keep class org.jetbrains.annotations.Async$Execute
-keepclassmembers class org.jetbrains.annotations.Async$Execute {
}

-keep class org.jetbrains.annotations.Async$Schedule
-keepclassmembers class org.jetbrains.annotations.Async$Schedule {
}

-keep class org.jetbrains.annotations.Async
-keepclassmembers class org.jetbrains.annotations.Async {
}

-keep class org.jetbrains.annotations.Debug$Renderer
-keepclassmembers class org.jetbrains.annotations.Debug$Renderer {
}

-keep class org.jetbrains.annotations.Debug
-keepclassmembers class org.jetbrains.annotations.Debug {
}

-keep class org.jetbrains.annotations.Blocking
-keepclassmembers class org.jetbrains.annotations.Blocking {
}

-keep class org.jetbrains.annotations.BlockingExecutor
-keepclassmembers class org.jetbrains.annotations.BlockingExecutor {
}

-keep class org.jetbrains.annotations.Contract
-keepclassmembers class org.jetbrains.annotations.Contract {
}

-keep class org.jetbrains.annotations.MustBeInvokedByOverriders
-keepclassmembers class org.jetbrains.annotations.MustBeInvokedByOverriders {
}

-keep class org.jetbrains.annotations.Nls$Capitalization
-keepclassmembers class org.jetbrains.annotations.Nls$Capitalization {
   *** valueOf(...);
   *** values(...);
}

-keep class org.jetbrains.annotations.Nls
-keepclassmembers class org.jetbrains.annotations.Nls {
}

-keep class org.jetbrains.annotations.NonBlocking
-keepclassmembers class org.jetbrains.annotations.NonBlocking {
}

-keep class org.jetbrains.annotations.NonBlockingExecutor
-keepclassmembers class org.jetbrains.annotations.NonBlockingExecutor {
}

-keep class org.jetbrains.annotations.NonNls
-keepclassmembers class org.jetbrains.annotations.NonNls {
}

-keep class org.jetbrains.annotations.NotNull
-keepclassmembers class org.jetbrains.annotations.NotNull {
}

-keep class org.jetbrains.annotations.Nullable
-keepclassmembers class org.jetbrains.annotations.Nullable {
}

-keep class org.jetbrains.annotations.PropertyKey
-keepclassmembers class org.jetbrains.annotations.PropertyKey {
}

-keep class org.jetbrains.annotations.Range
-keepclassmembers class org.jetbrains.annotations.Range {
}

-keep class org.jetbrains.annotations.TestOnly
-keepclassmembers class org.jetbrains.annotations.TestOnly {
}

-keep class org.jetbrains.annotations.UnknownNullability
-keepclassmembers class org.jetbrains.annotations.UnknownNullability {
}

-keep class org.jetbrains.annotations.Unmodifiable
-keepclassmembers class org.jetbrains.annotations.Unmodifiable {
}

-keep class org.jetbrains.annotations.UnmodifiableView
-keepclassmembers class org.jetbrains.annotations.UnmodifiableView {
}

-keep class org.jetbrains.annotations.VisibleForTesting
-keepclassmembers class org.jetbrains.annotations.VisibleForTesting {
}

-keep class org.intellij.lang.annotations.Flow
-keepclassmembers class org.intellij.lang.annotations.Flow {
}

-keep class org.intellij.lang.annotations.Flow
-keepclassmembers class org.intellij.lang.annotations.Flow {
}

-keep class org.intellij.lang.annotations.Flow
-keepclassmembers class org.intellij.lang.annotations.Flow {
}

-keep class org.intellij.lang.annotations.Identifier
-keepclassmembers class org.intellij.lang.annotations.Identifier {
}

-keep class org.intellij.lang.annotations.Language
-keepclassmembers class org.intellij.lang.annotations.Language {
}

-keep class org.intellij.lang.annotations.MagicConstant
-keepclassmembers class org.intellij.lang.annotations.MagicConstant {
}

-keep class org.intellij.lang.annotations.Pattern
-keepclassmembers class org.intellij.lang.annotations.Pattern {
}

-keep class org.intellij.lang.annotations.PrintFormat
-keepclassmembers class org.intellij.lang.annotations.PrintFormat {
}

-keep class org.intellij.lang.annotations.RegExp
-keepclassmembers class org.intellij.lang.annotations.RegExp {
}

-keep class org.intellij.lang.annotations.Subst
-keepclassmembers class org.intellij.lang.annotations.Subst {
}

-keep class org.intellij.lang.annotations.JdkConstants$AdjustableOrientation
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$AdjustableOrientation {
}

-keep class org.intellij.lang.annotations.JdkConstants$BoxLayoutAxis
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$BoxLayoutAxis {
}

-keep class org.intellij.lang.annotations.JdkConstants$CalendarMonth
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$CalendarMonth {
}

-keep class org.intellij.lang.annotations.JdkConstants$CursorType
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$CursorType {
}

-keep class org.intellij.lang.annotations.JdkConstants$FlowLayoutAlignment
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$FlowLayoutAlignment {
}

-keep class org.intellij.lang.annotations.JdkConstants$FontStyle
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$FontStyle {
}

-keep class org.intellij.lang.annotations.JdkConstants$HorizontalAlignment
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$HorizontalAlignment {
}

-keep class org.intellij.lang.annotations.JdkConstants$HorizontalScrollBarPolicy
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$HorizontalScrollBarPolicy {
}

-keep class org.intellij.lang.annotations.JdkConstants$InputEventMask
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$InputEventMask {
}

-keep class org.intellij.lang.annotations.JdkConstants$ListSelectionMode
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$ListSelectionMode {
}

-keep class org.intellij.lang.annotations.JdkConstants$PatternFlags
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$PatternFlags {
}

-keep class org.intellij.lang.annotations.JdkConstants$TabLayoutPolicy
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TabLayoutPolicy {
}

-keep class org.intellij.lang.annotations.JdkConstants$TabPlacement
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TabPlacement {
}

-keep class org.intellij.lang.annotations.JdkConstants$TitledBorderJustification
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TitledBorderJustification {
}

-keep class org.intellij.lang.annotations.JdkConstants$TitledBorderTitlePosition
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TitledBorderTitlePosition {
}

-keep class org.intellij.lang.annotations.JdkConstants$TreeSelectionMode
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$TreeSelectionMode {
}

-keep class org.intellij.lang.annotations.JdkConstants$VerticalScrollBarPolicy
-keepclassmembers class org.intellij.lang.annotations.JdkConstants$VerticalScrollBarPolicy {
}

-keep class org.intellij.lang.annotations.JdkConstants
-keepclassmembers class org.intellij.lang.annotations.JdkConstants {
}

# ACW for Xamarin.Kotlin.StdLib
-keep class kotlin.Function
-keepclassmembers class kotlin.Function {
}

-keep class kotlin.text.MatchGroupCollection
-keepclassmembers class kotlin.text.MatchGroupCollection {
}

-keep class kotlin.text.MatchGroup
-keepclassmembers class kotlin.text.MatchGroup {
   <init>(...);
   *** getRange(...);
   *** getValue(...);
   *** component1(...);
   *** component2(...);
   *** copy(...);
}

-keep class kotlin.sequences.Sequence
-keepclassmembers class kotlin.sequences.Sequence {
}

-keep class kotlin.jvm.internal.DefaultConstructorMarker
-keepclassmembers class kotlin.jvm.internal.DefaultConstructorMarker {
}

-keep class kotlin.jvm.internal.markers.KMappedMarker
-keepclassmembers class kotlin.jvm.internal.markers.KMappedMarker {
}

-keep class kotlin.jvm.functions.Function0
-keepclassmembers class kotlin.jvm.functions.Function0 {
}

-keep class kotlin.jvm.functions.Function1
-keepclassmembers class kotlin.jvm.functions.Function1 {
}

-keep class kotlin.jvm.functions.Function2
-keepclassmembers class kotlin.jvm.functions.Function2 {
}

-keep class kotlin.jvm.functions.Function3
-keepclassmembers class kotlin.jvm.functions.Function3 {
}

-keep class kotlin.jvm.functions.Function4
-keepclassmembers class kotlin.jvm.functions.Function4 {
}

-keep class kotlin.jvm.functions.Function5
-keepclassmembers class kotlin.jvm.functions.Function5 {
}

-keep class kotlin.jvm.functions.Function6
-keepclassmembers class kotlin.jvm.functions.Function6 {
}

-keep class kotlin.jvm.functions.Function7
-keepclassmembers class kotlin.jvm.functions.Function7 {
}

-keep class kotlin.coroutines.AbstractCoroutineContextElement
-keepclassmembers class kotlin.coroutines.AbstractCoroutineContextElement {
   <init>(...);
   *** getKey(...);
   *** fold(...);
   *** get(...);
   *** minusKey(...);
   *** plus(...);
}

-keep class kotlin.coroutines.AbstractCoroutineContextElement
-keepclassmembers class kotlin.coroutines.AbstractCoroutineContextElement {
}

-keep class kotlin.coroutines.Continuation
-keepclassmembers class kotlin.coroutines.Continuation {
}

-keep class kotlin.coroutines.ContinuationInterceptor
-keepclassmembers class kotlin.coroutines.ContinuationInterceptor {
}

-keep class kotlin.coroutines.CoroutineContext$Element
-keepclassmembers class kotlin.coroutines.CoroutineContext$Element {
}

-keep class kotlin.coroutines.CoroutineContext$Key
-keepclassmembers class kotlin.coroutines.CoroutineContext$Key {
}

-keep class kotlin.coroutines.CoroutineContext
-keepclassmembers class kotlin.coroutines.CoroutineContext {
}

-keep class kotlin.ranges.ClosedRange
-keepclassmembers class kotlin.ranges.ClosedRange {
}

-keep class kotlin.ranges.IntProgression$Companion
-keepclassmembers class kotlin.ranges.IntProgression$Companion {
   <init>(...);
   *** fromClosedRange(...);
}

-keep class kotlin.ranges.IntProgression
-keepclassmembers class kotlin.ranges.IntProgression {
   *** getFirst(...);
   *** isEmpty(...);
   *** getLast(...);
   *** getStep(...);
   *** iterator(...);
}

-keep class kotlin.ranges.IntRange$Companion
-keepclassmembers class kotlin.ranges.IntRange$Companion {
   <init>(...);
   *** getEMPTY(...);
}

-keep class kotlin.ranges.IntRange
-keepclassmembers class kotlin.ranges.IntRange {
   <init>(...);
   *** getEndExclusive(...);
   *** getEndInclusive(...);
   *** getStart(...);
   *** contains(...);
   *** getEndInclusive(...);
   *** getStart(...);
   *** getEndExclusive(...);
   *** getStart(...);
}

-keep class kotlin.ranges.OpenEndRange
-keepclassmembers class kotlin.ranges.OpenEndRange {
}

-keep class kotlin.ranges.LongProgression$Companion
-keepclassmembers class kotlin.ranges.LongProgression$Companion {
   <init>(...);
   *** fromClosedRange(...);
}

-keep class kotlin.ranges.LongProgression
-keepclassmembers class kotlin.ranges.LongProgression {
   *** getFirst(...);
   *** isEmpty(...);
   *** getLast(...);
   *** getStep(...);
   *** iterator(...);
}

-keep class kotlin.ranges.LongRange$Companion
-keepclassmembers class kotlin.ranges.LongRange$Companion {
   <init>(...);
   *** getEMPTY(...);
}

-keep class kotlin.ranges.LongRange
-keepclassmembers class kotlin.ranges.LongRange {
   <init>(...);
   *** getEndExclusive(...);
   *** getEndInclusive(...);
   *** getStart(...);
   *** contains(...);
   *** getEndInclusive(...);
   *** getStart(...);
   *** getEndExclusive(...);
   *** getStart(...);
}

# ACW for Xamarin.Kotlin.StdLib.Common
# ACW for Xamarin.Kotlin.StdLib.Jdk7
-keep class kotlin.jdk7.AutoCloseableKt
-keepclassmembers class kotlin.jdk7.AutoCloseableKt {
   *** closeFinally(...);
}

-keep class kotlin.io.path.ExperimentalPathApi
-keepclassmembers class kotlin.io.path.ExperimentalPathApi {
}

-keep class kotlin.io.path.PathsKt
-keepclassmembers class kotlin.io.path.PathsKt {
   *** createTempDirectory(...);
   *** createTempFile(...);
   *** fileAttributeViewNotAvailable(...);
   *** getExtension(...);
   *** getInvariantSeparatorsPathString(...);
   *** getName(...);
   *** getNameWithoutExtension(...);
   *** listDirectoryEntries(...);
   *** relativeTo(...);
   *** relativeToOrNull(...);
   *** relativeToOrSelf(...);
   *** appendText(...);
   *** readText(...);
   *** writeText(...);
}

# ACW for Xamarin.Kotlin.StdLib.Jdk8
-keep class kotlin.time.jdk8.DurationConversionsJDK8Kt
-keepclassmembers class kotlin.time.jdk8.DurationConversionsJDK8Kt {
}

-keep class kotlin.text.jdk8.RegexExtensionsJDK8Kt
-keepclassmembers class kotlin.text.jdk8.RegexExtensionsJDK8Kt {
   *** get(...);
}

-keep class kotlin.streams.jdk8.StreamsKt
-keepclassmembers class kotlin.streams.jdk8.StreamsKt {
}

-keep class kotlin.jvm.jdk8.JvmRepeatableKt
-keepclassmembers class kotlin.jvm.jdk8.JvmRepeatableKt {
}

-keep class kotlin.collections.jdk8.CollectionsJDK8Kt
-keepclassmembers class kotlin.collections.jdk8.CollectionsJDK8Kt {
}

# ACW for Xamarin.KotlinX.Coroutines.Android
-keep class kotlinx.coroutines.android.HandlerDispatcher
-keepclassmembers class kotlinx.coroutines.android.HandlerDispatcher {
   <init>(...);
   *** delay(...);
   *** invokeOnTimeout(...);
   *** scheduleResumeAfterDelay(...);
}

-keep class kotlinx.coroutines.android.HandlerDispatcher
-keepclassmembers class kotlinx.coroutines.android.HandlerDispatcher {
   *** getImmediate(...);
   *** scheduleResumeAfterDelay(...);
   *** dispatch(...);
}

-keep class kotlinx.coroutines.android.HandlerDispatcherKt
-keepclassmembers class kotlinx.coroutines.android.HandlerDispatcherKt {
   *** asHandler(...);
   *** awaitFrame(...);
   *** from(...);
   *** from(...);
}

# ACW for Xamarin.KotlinX.Coroutines.Core.Jvm
-keep class kotlinx.coroutines.AbstractTimeSourceKt
-keepclassmembers class kotlinx.coroutines.AbstractTimeSourceKt {
}

-keep class kotlinx.coroutines.AwaitKt
-keepclassmembers class kotlinx.coroutines.AwaitKt {
}

-keep class kotlinx.coroutines.BuildersKt
-keepclassmembers class kotlinx.coroutines.BuildersKt {
   *** invoke(...);
   *** runBlocking(...);
   *** withContext(...);
}

-keep class kotlinx.coroutines.CancellableContinuationImplKt
-keepclassmembers class kotlinx.coroutines.CancellableContinuationImplKt {
}

-keep class kotlinx.coroutines.CancellableContinuationKt
-keepclassmembers class kotlinx.coroutines.CancellableContinuationKt {
   *** disposeOnCancellation(...);
   *** suspendCancellableCoroutine(...);
}

-keep class kotlinx.coroutines.CompletableDeferredKt
-keepclassmembers class kotlinx.coroutines.CompletableDeferredKt {
}

-keep class kotlinx.coroutines.CompletionHandlerException
-keepclassmembers class kotlinx.coroutines.CompletionHandlerException {
   <init>(...);
}

-keep class kotlinx.coroutines.CompletionHandlerKt
-keepclassmembers class kotlinx.coroutines.CompletionHandlerKt {
   *** getAsHandler(...);
   *** invokeIt(...);
}

-keep class kotlinx.coroutines.CompletionHandler_commonKt
-keepclassmembers class kotlinx.coroutines.CompletionHandler_commonKt {
}

-keep class kotlinx.coroutines.CompletionStateKt
-keepclassmembers class kotlinx.coroutines.CompletionStateKt {
   *** toState(...);
   *** toState(...);
}

-keep class kotlinx.coroutines.CoroutineContextKt
-keepclassmembers class kotlinx.coroutines.CoroutineContextKt {
   *** getCoroutineName(...);
   *** newCoroutineContext(...);
}

-keep class kotlinx.coroutines.CoroutineDispatcher
-keepclassmembers class kotlinx.coroutines.CoroutineDispatcher {
   <init>(...);
   *** dispatch(...);
   *** dispatchYield(...);
   *** get(...);
   *** interceptContinuation(...);
   *** isDispatchNeeded(...);
   *** limitedParallelism(...);
   *** minusKey(...);
   *** plus(...);
   *** releaseInterceptedContinuation(...);
}

-keep class kotlinx.coroutines.CoroutineDispatcher
-keepclassmembers class kotlinx.coroutines.CoroutineDispatcher {
   *** dispatch(...);
}

-keep class kotlinx.coroutines.CoroutineExceptionHandlerImplKt
-keepclassmembers class kotlinx.coroutines.CoroutineExceptionHandlerImplKt {
}

-keep class kotlinx.coroutines.CoroutineExceptionHandlerKt
-keepclassmembers class kotlinx.coroutines.CoroutineExceptionHandlerKt {
   *** CoroutineExceptionHandler(...);
   *** handleCoroutineException(...);
}

-keep class kotlinx.coroutines.CoroutineName$Key
-keepclassmembers class kotlinx.coroutines.CoroutineName$Key {
   <init>(...);
}

-keep class kotlinx.coroutines.CoroutineName
-keepclassmembers class kotlinx.coroutines.CoroutineName {
   <init>(...);
   *** getName(...);
   *** component1(...);
   *** copy(...);
}

-keep class kotlinx.coroutines.CoroutineScopeKt
-keepclassmembers class kotlinx.coroutines.CoroutineScopeKt {
   *** CoroutineScope(...);
   *** MainScope(...);
   *** cancel(...);
   *** cancel(...);
   *** coroutineScope(...);
   *** currentCoroutineContext(...);
   *** ensureActive(...);
   *** isActive(...);
   *** plus(...);
}

-keep class kotlinx.coroutines.CoroutineStart$WhenMappings
-keepclassmembers class kotlinx.coroutines.CoroutineStart$WhenMappings {
}

-keep class kotlinx.coroutines.CoroutineStart
-keepclassmembers class kotlinx.coroutines.CoroutineStart {
   *** isLazy(...);
   *** invoke(...);
   *** invoke(...);
   *** valueOf(...);
   *** values(...);
}

-keep class kotlinx.coroutines.DebugKt
-keepclassmembers class kotlinx.coroutines.DebugKt {
}

-keep class kotlinx.coroutines.DebugStringsKt
-keepclassmembers class kotlinx.coroutines.DebugStringsKt {
   *** getClassSimpleName(...);
   *** getHexAddress(...);
   *** toDebugString(...);
}

-keep class kotlinx.coroutines.DefaultExecutorKt
-keepclassmembers class kotlinx.coroutines.DefaultExecutorKt {
}

-keep class kotlinx.coroutines.DelayKt
-keepclassmembers class kotlinx.coroutines.DelayKt {
   *** awaitCancellation(...);
   *** delay(...);
   *** getDelay(...);
   *** toDelayMillis-LRDsOJo(...);
}

-keep class kotlinx.coroutines.DispatchedTaskKt
-keepclassmembers class kotlinx.coroutines.DispatchedTaskKt {
   *** dispatch(...);
   *** isCancellableMode(...);
   *** isReusableMode(...);
   *** resume(...);
   *** resumeWithStackTrace(...);
   *** runUnconfinedEventLoop(...);
}

-keep class kotlinx.coroutines.Dispatchers
-keepclassmembers class kotlinx.coroutines.Dispatchers {
   *** getDefault(...);
   *** getIO(...);
   *** getMain(...);
   *** getUnconfined(...);
   *** shutdown(...);
}

-keep class kotlinx.coroutines.DispatchersKt
-keepclassmembers class kotlinx.coroutines.DispatchersKt {
}

-keep class kotlinx.coroutines.EventLoopKt
-keepclassmembers class kotlinx.coroutines.EventLoopKt {
   *** processNextEventInCurrentThread(...);
}

-keep class kotlinx.coroutines.EventLoop_commonKt
-keepclassmembers class kotlinx.coroutines.EventLoop_commonKt {
}

-keep class kotlinx.coroutines.ExceptionsKt
-keepclassmembers class kotlinx.coroutines.ExceptionsKt {
   *** CancellationException(...);
   *** addSuppressedThrowable(...);
}

-keep class kotlinx.coroutines.ExecutorCoroutineDispatcher
-keepclassmembers class kotlinx.coroutines.ExecutorCoroutineDispatcher {
   <init>(...);
   *** getExecutor(...);
   *** close(...);
}

-keep class kotlinx.coroutines.ExecutorCoroutineDispatcher
-keepclassmembers class kotlinx.coroutines.ExecutorCoroutineDispatcher {
   *** getExecutor(...);
   *** close(...);
   *** dispatch(...);
}

-keep class kotlinx.coroutines.ExecutorsKt
-keepclassmembers class kotlinx.coroutines.ExecutorsKt {
   *** asExecutor(...);
   *** from(...);
   *** from(...);
}

-keep class kotlinx.coroutines.GlobalScope
-keepclassmembers class kotlinx.coroutines.GlobalScope {
   *** getCoroutineContext(...);
}

-keep class kotlinx.coroutines.CancellableContinuation$DefaultImpls
-keepclassmembers class kotlinx.coroutines.CancellableContinuation$DefaultImpls {
}

-keep class kotlinx.coroutines.CancellableContinuation
-keepclassmembers class kotlinx.coroutines.CancellableContinuation {
}

-keep class kotlinx.coroutines.CopyableThreadContextElement$DefaultImpls
-keepclassmembers class kotlinx.coroutines.CopyableThreadContextElement$DefaultImpls {
   *** fold(...);
   *** get(...);
   *** minusKey(...);
   *** plus(...);
}

-keep class kotlinx.coroutines.CopyableThreadContextElement
-keepclassmembers class kotlinx.coroutines.CopyableThreadContextElement {
}

-keep class kotlinx.coroutines.CopyableThrowable
-keepclassmembers class kotlinx.coroutines.CopyableThrowable {
}

-keep class kotlinx.coroutines.CoroutineExceptionHandler$DefaultImpls
-keepclassmembers class kotlinx.coroutines.CoroutineExceptionHandler$DefaultImpls {
   *** fold(...);
   *** get(...);
   *** minusKey(...);
   *** plus(...);
}

-keep class kotlinx.coroutines.CoroutineExceptionHandler$Key
-keepclassmembers class kotlinx.coroutines.CoroutineExceptionHandler$Key {
}

-keep class kotlinx.coroutines.CoroutineExceptionHandler
-keepclassmembers class kotlinx.coroutines.CoroutineExceptionHandler {
}

-keep class kotlinx.coroutines.CoroutineExceptionHandler
-keepclassmembers class kotlinx.coroutines.CoroutineExceptionHandler {
}

-keep class kotlinx.coroutines.CoroutineExceptionHandler
-keepclassmembers class kotlinx.coroutines.CoroutineExceptionHandler {
}

-keep class kotlinx.coroutines.CoroutineScope
-keepclassmembers class kotlinx.coroutines.CoroutineScope {
}

-keep class kotlinx.coroutines.Delay$DefaultImpls
-keepclassmembers class kotlinx.coroutines.Delay$DefaultImpls {
   *** delay(...);
   *** invokeOnTimeout(...);
}

-keep class kotlinx.coroutines.Delay
-keepclassmembers class kotlinx.coroutines.Delay {
}

-keep class kotlinx.coroutines.DelicateCoroutinesApi
-keepclassmembers class kotlinx.coroutines.DelicateCoroutinesApi {
}

-keep class kotlinx.coroutines.DisposableHandle
-keepclassmembers class kotlinx.coroutines.DisposableHandle {
}

-keep class kotlinx.coroutines.ExperimentalCoroutinesApi
-keepclassmembers class kotlinx.coroutines.ExperimentalCoroutinesApi {
}

-keep class kotlinx.coroutines.FlowPreview
-keepclassmembers class kotlinx.coroutines.FlowPreview {
}

-keep class kotlinx.coroutines.InternalCoroutinesApi
-keepclassmembers class kotlinx.coroutines.InternalCoroutinesApi {
}

-keep class kotlinx.coroutines.InterruptibleKt
-keepclassmembers class kotlinx.coroutines.InterruptibleKt {
   *** runInterruptible(...);
}

-keep class kotlinx.coroutines.ObsoleteCoroutinesApi
-keepclassmembers class kotlinx.coroutines.ObsoleteCoroutinesApi {
}

-keep class kotlinx.coroutines.ThreadContextElement$DefaultImpls
-keepclassmembers class kotlinx.coroutines.ThreadContextElement$DefaultImpls {
   *** fold(...);
   *** get(...);
   *** minusKey(...);
   *** plus(...);
}

-keep class kotlinx.coroutines.ThreadContextElement
-keepclassmembers class kotlinx.coroutines.ThreadContextElement {
}

-keep class kotlinx.coroutines.JobKt
-keepclassmembers class kotlinx.coroutines.JobKt {
   *** cancel(...);
   *** cancelChildren(...);
   *** cancelFutureOnCancellation(...);
   *** ensureActive(...);
   *** isActive(...);
}

-keep class kotlinx.coroutines.JobSupport
-keepclassmembers class kotlinx.coroutines.JobSupport {
   <init>(...);
   *** getCancellationException(...);
   *** getChildJobCancellationCause(...);
   *** getChildren(...);
   *** getCompletionCause(...);
   *** getCompletionCauseHandled(...);
   *** getCompletionExceptionOrNull(...);
   *** isActive(...);
   *** isCancelled(...);
   *** isCompleted(...);
   *** isCompletedExceptionally(...);
   *** isScopedCoroutine(...);
   *** getKey(...);
   *** afterCompletion(...);
   *** cancel(...);
   *** cancelCoroutine(...);
   *** cancelInternal(...);
   *** cancellationExceptionMessage(...);
   *** childCancelled(...);
   *** fold(...);
   *** get(...);
   *** handleJobException(...);
   *** invokeOnCompletion(...);
   *** invokeOnCompletion(...);
   *** join(...);
   *** minusKey(...);
   *** onCancelling(...);
   *** onCompletionInternal(...);
   *** onStart(...);
   *** plus(...);
   *** start(...);
   *** toCancellationException(...);
   *** toDebugString(...);
}

-keep class kotlinx.coroutines.JobSupportKt
-keepclassmembers class kotlinx.coroutines.JobSupportKt {
   *** boxIncomplete(...);
   *** unboxState(...);
}

-keep class kotlinx.coroutines.MainCoroutineDispatcher
-keepclassmembers class kotlinx.coroutines.MainCoroutineDispatcher {
   <init>(...);
   *** getImmediate(...);
   *** toStringInternalImpl(...);
}

-keep class kotlinx.coroutines.MainCoroutineDispatcher
-keepclassmembers class kotlinx.coroutines.MainCoroutineDispatcher {
   *** getImmediate(...);
   *** dispatch(...);
}

-keep class kotlinx.coroutines.NonCancellable
-keepclassmembers class kotlinx.coroutines.NonCancellable {
   *** getCancellationException(...);
   *** getChildren(...);
   *** isActive(...);
   *** isCancelled(...);
   *** isCompleted(...);
   *** cancel(...);
   *** invokeOnCompletion(...);
   *** invokeOnCompletion(...);
   *** join(...);
   *** start(...);
}

-keep class kotlinx.coroutines.NonDisposableHandle
-keepclassmembers class kotlinx.coroutines.NonDisposableHandle {
   *** childCancelled(...);
   *** dispose(...);
}

-keep class kotlinx.coroutines.RunnableKt
-keepclassmembers class kotlinx.coroutines.RunnableKt {
   *** Runnable(...);
}

-keep class kotlinx.coroutines.SchedulerTaskKt
-keepclassmembers class kotlinx.coroutines.SchedulerTaskKt {
   *** getTaskContext(...);
}

-keep class kotlinx.coroutines.SupervisorKt
-keepclassmembers class kotlinx.coroutines.SupervisorKt {
   *** supervisorScope(...);
}

-keep class kotlinx.coroutines.ThreadContextElementKt
-keepclassmembers class kotlinx.coroutines.ThreadContextElementKt {
   *** asContextElement(...);
   *** ensurePresent(...);
   *** isPresent(...);
}

-keep class kotlinx.coroutines.ThreadPoolDispatcherKt
-keepclassmembers class kotlinx.coroutines.ThreadPoolDispatcherKt {
   *** newFixedThreadPoolContext(...);
   *** newSingleThreadContext(...);
}

-keep class kotlinx.coroutines.TimeoutCancellationException
-keepclassmembers class kotlinx.coroutines.TimeoutCancellationException {
   *** createCopy(...);
}

-keep class kotlinx.coroutines.TimeoutKt
-keepclassmembers class kotlinx.coroutines.TimeoutKt {
   *** withTimeout(...);
   *** withTimeoutOrNull(...);
}

-keep class kotlinx.coroutines.YieldKt
-keepclassmembers class kotlinx.coroutines.YieldKt {
   *** yield(...);
}

-keep class kotlinx.coroutines.test.TestCoroutineContext
-keepclassmembers class kotlinx.coroutines.test.TestCoroutineContext {
   <init>(...);
   <init>(...);
   *** getExceptions(...);
   *** advanceTimeBy(...);
   *** advanceTimeTo(...);
   *** assertAllUnhandledExceptions(...);
   *** assertAnyUnhandledException(...);
   *** assertExceptions(...);
   *** assertUnhandledException(...);
   *** cancelAllActions(...);
   *** fold(...);
   *** get(...);
   *** minusKey(...);
   *** now(...);
   *** plus(...);
   *** triggerActions(...);
}

-keep class kotlinx.coroutines.test.TestCoroutineContextKt
-keepclassmembers class kotlinx.coroutines.test.TestCoroutineContextKt {
   *** withTestContext(...);
}

-keep class kotlinx.coroutines.sync.Semaphore
-keepclassmembers class kotlinx.coroutines.sync.Semaphore {
}

-keep class kotlinx.coroutines.sync.MutexKt
-keepclassmembers class kotlinx.coroutines.sync.MutexKt {
}

-keep class kotlinx.coroutines.sync.SemaphoreKt
-keepclassmembers class kotlinx.coroutines.sync.SemaphoreKt {
   *** Semaphore(...);
   *** withPermit(...);
}

-keep class kotlinx.coroutines.selects.SelectKt
-keepclassmembers class kotlinx.coroutines.selects.SelectKt {
   *** select(...);
}

-keep class kotlinx.coroutines.selects.SelectUnbiasedKt
-keepclassmembers class kotlinx.coroutines.selects.SelectUnbiasedKt {
   *** selectUnbiased(...);
}

-keep class kotlinx.coroutines.selects.WhileSelectKt
-keepclassmembers class kotlinx.coroutines.selects.WhileSelectKt {
   *** whileSelect(...);
}

-keep class kotlinx.coroutines.scheduling.CoroutineSchedulerKt
-keepclassmembers class kotlinx.coroutines.scheduling.CoroutineSchedulerKt {
}

-keep class kotlinx.coroutines.scheduling.TasksKt
-keepclassmembers class kotlinx.coroutines.scheduling.TasksKt {
   *** isBlocking(...);
}

-keep class kotlinx.coroutines.scheduling.WorkQueueKt
-keepclassmembers class kotlinx.coroutines.scheduling.WorkQueueKt {
}

-keep class kotlinx.coroutines.intrinsics.CancellableKt
-keepclassmembers class kotlinx.coroutines.intrinsics.CancellableKt {
   *** startCoroutineCancellable(...);
   *** startCoroutineCancellable(...);
   *** startCoroutineCancellable(...);
}

-keep class kotlinx.coroutines.intrinsics.UndispatchedKt
-keepclassmembers class kotlinx.coroutines.intrinsics.UndispatchedKt {
   *** startCoroutineUndispatched(...);
   *** startCoroutineUndispatched(...);
   *** startCoroutineUnintercepted(...);
   *** startCoroutineUnintercepted(...);
}

-keep class kotlinx.coroutines.flow.FlowKt
-keepclassmembers class kotlinx.coroutines.flow.FlowKt {
   *** getDEFAULT_CONCURRENCY(...);
   *** asFlow(...);
   *** asFlow(...);
   *** asFlow(...);
   *** asFlow(...);
   *** asFlow(...);
   *** asFlow(...);
   *** asFlow(...);
   *** asFlow(...);
   *** asFlow(...);
   *** asFlow(...);
   *** asSharedFlow(...);
   *** asStateFlow(...);
   *** buffer(...);
   *** cache(...);
   *** callbackFlow(...);
   *** cancellable(...);
   *** catch(...);
   *** catchImpl(...);
   *** channelFlow(...);
   *** collect(...);
   *** collectIndexed(...);
   *** collectLatest(...);
   *** collectWhile(...);
   *** combine(...);
   *** combine(...);
   *** combine(...);
   *** combine(...);
   *** combineLatest(...);
   *** combineLatest(...);
   *** combineLatest(...);
   *** combineLatest(...);
   *** combineTransform(...);
   *** combineTransform(...);
   *** combineTransform(...);
   *** combineTransform(...);
   *** compose(...);
   *** concatMap(...);
   *** concatWith(...);
   *** concatWith(...);
   *** conflate(...);
   *** count(...);
   *** count(...);
   *** debounce(...);
   *** debounce(...);
   *** debounceDuration(...);
   *** delayEach(...);
   *** delayFlow(...);
   *** distinctUntilChanged(...);
   *** distinctUntilChanged(...);
   *** distinctUntilChangedBy(...);
   *** drop(...);
   *** dropWhile(...);
   *** emitAll(...);
   *** emptyFlow(...);
   *** ensureActive(...);
   *** filter(...);
   *** filterNot(...);
   *** filterNotNull(...);
   *** first(...);
   *** first(...);
   *** firstOrNull(...);
   *** firstOrNull(...);
   *** flatMap(...);
   *** flatMapConcat(...);
   *** flatMapLatest(...);
   *** flatMapMerge(...);
   *** flatten(...);
   *** flattenConcat(...);
   *** flattenMerge(...);
   *** flow(...);
   *** flowCombine(...);
   *** flowCombineTransform(...);
   *** flowOf(...);
   *** flowOf(...);
   *** flowOn(...);
   *** fold(...);
   *** forEach(...);
   *** last(...);
   *** lastOrNull(...);
   *** map(...);
   *** mapLatest(...);
   *** mapNotNull(...);
   *** merge(...);
   *** merge(...);
   *** merge(...);
   *** noImpl(...);
   *** observeOn(...);
   *** onCompletion(...);
   *** onEach(...);
   *** onEmpty(...);
   *** onErrorResume(...);
   *** onErrorResumeNext(...);
   *** onErrorReturn(...);
   *** onErrorReturn(...);
   *** onStart(...);
   *** onSubscription(...);
   *** publish(...);
   *** publish(...);
   *** publishOn(...);
   *** reduce(...);
   *** replay(...);
   *** replay(...);
   *** retry(...);
   *** retryWhen(...);
   *** runningFold(...);
   *** runningReduce(...);
   *** sample(...);
   *** scan(...);
   *** scanFold(...);
   *** scanReduce(...);
   *** shareIn(...);
   *** single(...);
   *** singleOrNull(...);
   *** skip(...);
   *** startWith(...);
   *** startWith(...);
   *** stateIn(...);
   *** stateIn(...);
   *** subscribe(...);
   *** subscribe(...);
   *** subscribe(...);
   *** subscribeOn(...);
   *** switchMap(...);
   *** take(...);
   *** takeWhile(...);
   *** toCollection(...);
   *** toList(...);
   *** toSet(...);
   *** transform(...);
   *** transformLatest(...);
   *** transformWhile(...);
   *** unsafeTransform(...);
   *** withIndex(...);
   *** zip(...);
}

-keep class kotlinx.coroutines.flow.Flow
-keepclassmembers class kotlinx.coroutines.flow.Flow {
}

-keep class kotlinx.coroutines.flow.FlowCollector
-keepclassmembers class kotlinx.coroutines.flow.FlowCollector {
}

-keep class kotlinx.coroutines.flow.MutableSharedFlow
-keepclassmembers class kotlinx.coroutines.flow.MutableSharedFlow {
}

-keep class kotlinx.coroutines.flow.MutableStateFlow
-keepclassmembers class kotlinx.coroutines.flow.MutableStateFlow {
}

-keep class kotlinx.coroutines.flow.SharedFlow
-keepclassmembers class kotlinx.coroutines.flow.SharedFlow {
}

-keep class kotlinx.coroutines.flow.SharingStarted$Companion
-keepclassmembers class kotlinx.coroutines.flow.SharingStarted$Companion {
   *** getEagerly(...);
   *** getLazily(...);
   *** WhileSubscribed(...);
}

-keep class kotlinx.coroutines.flow.SharingStarted
-keepclassmembers class kotlinx.coroutines.flow.SharingStarted {
}

-keep class kotlinx.coroutines.flow.SharingStarted
-keepclassmembers class kotlinx.coroutines.flow.SharingStarted {
}

-keep class kotlinx.coroutines.flow.SharingStarted
-keepclassmembers class kotlinx.coroutines.flow.SharingStarted {
}

-keep class kotlinx.coroutines.flow.StateFlow
-keepclassmembers class kotlinx.coroutines.flow.StateFlow {
}

-keep class kotlinx.coroutines.flow.LintKt
-keepclassmembers class kotlinx.coroutines.flow.LintKt {
   *** cancel(...);
   *** cancellable(...);
   *** conflate(...);
   *** distinctUntilChanged(...);
   *** flowOn(...);
   *** getCoroutineContext(...);
   *** isActive(...);
}

-keep class kotlinx.coroutines.flow.SharedFlowKt
-keepclassmembers class kotlinx.coroutines.flow.SharedFlowKt {
   *** MutableSharedFlow(...);
   *** fuseSharedFlow(...);
}

-keep class kotlinx.coroutines.flow.SharingCommand
-keepclassmembers class kotlinx.coroutines.flow.SharingCommand {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlinx.coroutines.flow.SharingStartedKt
-keepclassmembers class kotlinx.coroutines.flow.SharingStartedKt {
   *** WhileSubscribed-5qebJ5I(...);
}

-keep class kotlinx.coroutines.flow.StateFlowKt
-keepclassmembers class kotlinx.coroutines.flow.StateFlowKt {
   *** MutableStateFlow(...);
   *** fuseStateFlow(...);
   *** getAndUpdate(...);
   *** update(...);
   *** updateAndGet(...);
}

-keep class kotlinx.coroutines.channels.AbstractChannelKt
-keepclassmembers class kotlinx.coroutines.channels.AbstractChannelKt {
}

-keep class kotlinx.coroutines.channels.ActorKt
-keepclassmembers class kotlinx.coroutines.channels.ActorKt {
}

-keep class kotlinx.coroutines.channels.BroadcastChannelKt
-keepclassmembers class kotlinx.coroutines.channels.BroadcastChannelKt {
}

-keep class kotlinx.coroutines.channels.BroadcastKt
-keepclassmembers class kotlinx.coroutines.channels.BroadcastKt {
}

-keep class kotlinx.coroutines.channels.BufferOverflow
-keepclassmembers class kotlinx.coroutines.channels.BufferOverflow {
   *** valueOf(...);
   *** values(...);
}

-keep class kotlinx.coroutines.channels.ChannelKt
-keepclassmembers class kotlinx.coroutines.channels.ChannelKt {
   *** getOrElse-WpGqRn0(...);
   *** onClosed-WpGqRn0(...);
   *** onFailure-WpGqRn0(...);
   *** onSuccess-WpGqRn0(...);
}

-keep class kotlinx.coroutines.channels.ChannelResult$Companion
-keepclassmembers class kotlinx.coroutines.channels.ChannelResult$Companion {
   <init>(...);
   *** closed-JP2dKIU(...);
   *** failure-PtdJZtk(...);
   *** success-JP2dKIU(...);
}

-keep class kotlinx.coroutines.channels.ChannelResult
-keepclassmembers class kotlinx.coroutines.channels.ChannelResult {
}

-keep class kotlinx.coroutines.channels.ChannelsKt
-keepclassmembers class kotlinx.coroutines.channels.ChannelsKt {
}

-keep class kotlinx.coroutines.channels.ClosedReceiveChannelException
-keepclassmembers class kotlinx.coroutines.channels.ClosedReceiveChannelException {
   <init>(...);
}

-keep class kotlinx.coroutines.channels.ClosedSendChannelException
-keepclassmembers class kotlinx.coroutines.channels.ClosedSendChannelException {
   <init>(...);
}

-keep class kotlinx.coroutines.channels.ConflatedBroadcastChannel
-keepclassmembers class kotlinx.coroutines.channels.ConflatedBroadcastChannel {
   <init>(...);
   <init>(...);
   *** isClosedForSend(...);
   *** getValue(...);
   *** getValueOrNull(...);
   *** cancel(...);
   *** close(...);
   *** invokeOnClose(...);
   *** offer(...);
   *** send(...);
   *** trySend-JP2dKIU(...);
}

-keep class kotlinx.coroutines.channels.ChannelIterator$DefaultImpls
-keepclassmembers class kotlinx.coroutines.channels.ChannelIterator$DefaultImpls {
}

-keep class kotlinx.coroutines.channels.ChannelIterator
-keepclassmembers class kotlinx.coroutines.channels.ChannelIterator {
}

-keep class kotlinx.coroutines.channels.ProduceKt
-keepclassmembers class kotlinx.coroutines.channels.ProduceKt {
}

-keep class kotlinx.coroutines.channels.TickerChannelsKt
-keepclassmembers class kotlinx.coroutines.channels.TickerChannelsKt {
}

-keep class kotlinx.coroutines.channels.TickerMode
-keepclassmembers class kotlinx.coroutines.channels.TickerMode {
   *** valueOf(...);
   *** values(...);
}

# ACW for Mono.Android.Export
# ACW for Xamarin.AndroidX.AppCompat
-keep class androidx.appcompat.graphics.drawable.DrawerArrowDrawable
-keepclassmembers class androidx.appcompat.graphics.drawable.DrawerArrowDrawable {
   <init>(...);
   *** getArrowHeadLength(...);
   *** setArrowHeadLength(...);
   *** getArrowShaftLength(...);
   *** setArrowShaftLength(...);
   *** getBarLength(...);
   *** setBarLength(...);
   *** getBarThickness(...);
   *** setBarThickness(...);
   *** getColor(...);
   *** setColor(...);
   *** getDirection(...);
   *** setDirection(...);
   *** getGapSize(...);
   *** setGapSize(...);
   *** getOpacity(...);
   *** getPaint(...);
   *** getProgress(...);
   *** setProgress(...);
   *** isSpinEnabled(...);
   *** setSpinEnabled(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setVerticalMirror(...);
}

-keep class androidx.appcompat.app.ActionBar$LayoutParams
-keepclassmembers class androidx.appcompat.app.ActionBar$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.appcompat.app.ActionBar$OnMenuVisibilityListener
-keepclassmembers class androidx.appcompat.app.ActionBar$OnMenuVisibilityListener {
}

-keep class mono.androidx.appcompat.app.ActionBar_OnMenuVisibilityListenerImplementor
-keepclassmembers class mono.androidx.appcompat.app.ActionBar_OnMenuVisibilityListenerImplementor {
}

-keep class androidx.appcompat.app.ActionBar$OnNavigationListener
-keepclassmembers class androidx.appcompat.app.ActionBar$OnNavigationListener {
}

-keep class androidx.appcompat.app.ActionBar$Tab
-keepclassmembers class androidx.appcompat.app.ActionBar$Tab {
   <init>(...);
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class androidx.appcompat.app.ActionBar$Tab
-keepclassmembers class androidx.appcompat.app.ActionBar$Tab {
   *** getContentDescription(...);
   *** getCustomView(...);
   *** getIcon(...);
   *** getPosition(...);
   *** getTag(...);
   *** getText(...);
   *** select(...);
   *** setContentDescription(...);
   *** setContentDescription(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setTabListener(...);
   *** setTag(...);
   *** setText(...);
   *** setText(...);
}

-keep class androidx.appcompat.app.ActionBar$TabListener
-keepclassmembers class androidx.appcompat.app.ActionBar$TabListener {
}

-keep class androidx.appcompat.app.ActionBar
-keepclassmembers class androidx.appcompat.app.ActionBar {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getElevation(...);
   *** setElevation(...);
   *** getHeight(...);
   *** getHideOffset(...);
   *** setHideOffset(...);
   *** isHideOnContentScrollEnabled(...);
   *** setHideOnContentScrollEnabled(...);
   *** isShowing(...);
   *** isTitleTruncated(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getThemedContext(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** closeOptionsMenu(...);
   *** collapseActionView(...);
   *** dispatchMenuVisibilityChanged(...);
   *** getTabAt(...);
   *** hide(...);
   *** invalidateOptionsMenu(...);
   *** newTab(...);
   *** onConfigurationChanged(...);
   *** onKeyShortcut(...);
   *** onMenuKeyEvent(...);
   *** openOptionsMenu(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDefaultDisplayHomeAsUpEnabled(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setHomeActionContentDescription(...);
   *** setHomeActionContentDescription(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeButtonEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setShowHideAnimationEnabled(...);
   *** setSplitBackgroundDrawable(...);
   *** setStackedBackgroundDrawable(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** setWindowTitle(...);
   *** show(...);
   *** startActionMode(...);
}

-keep class androidx.appcompat.app.ActionBar
-keepclassmembers class androidx.appcompat.app.ActionBar {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getDisplayOptions(...);
   *** setDisplayOptions(...);
   *** getHeight(...);
   *** isShowing(...);
   *** getNavigationItemCount(...);
   *** getNavigationMode(...);
   *** setNavigationMode(...);
   *** getSelectedNavigationIndex(...);
   *** getSelectedTab(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTabCount(...);
   *** getTitle(...);
   *** setTitle(...);
   *** addOnMenuVisibilityListener(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** addTab(...);
   *** getTabAt(...);
   *** hide(...);
   *** newTab(...);
   *** removeAllTabs(...);
   *** removeOnMenuVisibilityListener(...);
   *** removeTab(...);
   *** removeTabAt(...);
   *** selectTab(...);
   *** setBackgroundDrawable(...);
   *** setCustomView(...);
   *** setCustomView(...);
   *** setDisplayHomeAsUpEnabled(...);
   *** setDisplayOptions(...);
   *** setDisplayShowCustomEnabled(...);
   *** setDisplayShowHomeEnabled(...);
   *** setDisplayShowTitleEnabled(...);
   *** setDisplayUseLogoEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setListNavigationCallbacks(...);
   *** setLogo(...);
   *** setLogo(...);
   *** setSelectedNavigationItem(...);
   *** setSubtitle(...);
   *** setTitle(...);
   *** show(...);
}

-keep class androidx.appcompat.app.ActionBarDrawerToggle$Delegate
-keepclassmembers class androidx.appcompat.app.ActionBarDrawerToggle$Delegate {
}

-keep class androidx.appcompat.app.ActionBarDrawerToggle
-keepclassmembers class androidx.appcompat.app.ActionBarDrawerToggle {
   <init>(...);
   <init>(...);
   *** getDrawerArrowDrawable(...);
   *** setDrawerArrowDrawable(...);
   *** isDrawerIndicatorEnabled(...);
   *** setDrawerIndicatorEnabled(...);
   *** isDrawerSlideAnimationEnabled(...);
   *** setDrawerSlideAnimationEnabled(...);
   *** getToolbarNavigationClickListener(...);
   *** setToolbarNavigationClickListener(...);
   *** onConfigurationChanged(...);
   *** onDrawerClosed(...);
   *** onDrawerOpened(...);
   *** onDrawerSlide(...);
   *** onDrawerStateChanged(...);
   *** onOptionsItemSelected(...);
   *** setHomeAsUpIndicator(...);
   *** setHomeAsUpIndicator(...);
   *** syncState(...);
}

-keep class androidx.appcompat.app.AppCompatActivity
-keepclassmembers class androidx.appcompat.app.AppCompatActivity {
   <init>(...);
   <init>(...);
   *** getDelegate(...);
   *** getDrawerToggleDelegate(...);
   *** getSupportActionBar(...);
   *** getSupportParentActivityIntent(...);
   *** onCreateSupportNavigateUpTaskStack(...);
   *** onMenuItemSelected(...);
   *** onNightModeChanged(...);
   *** onPrepareSupportNavigateUpTaskStack(...);
   *** onSupportActionModeFinished(...);
   *** onSupportActionModeStarted(...);
   *** onSupportContentChanged(...);
   *** onSupportNavigateUp(...);
   *** onWindowStartingSupportActionMode(...);
   *** setSupportActionBar(...);
   *** setSupportProgress(...);
   *** setSupportProgressBarIndeterminate(...);
   *** setSupportProgressBarIndeterminateVisibility(...);
   *** setSupportProgressBarVisibility(...);
   *** startSupportActionMode(...);
   *** supportNavigateUpTo(...);
   *** supportRequestWindowFeature(...);
   *** supportShouldUpRecreateTask(...);
}

-keep class androidx.appcompat.app.AppCompatDelegate
-keepclassmembers class androidx.appcompat.app.AppCompatDelegate {
   *** isCompatVectorFromResourcesEnabled(...);
   *** setCompatVectorFromResourcesEnabled(...);
   *** getDefaultNightMode(...);
   *** setDefaultNightMode(...);
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getLocalNightMode(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** attachBaseContext(...);
   *** attachBaseContext2(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** create(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setSupportActionBar(...);
   *** setTheme(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class androidx.appcompat.app.AppCompatDelegate
-keepclassmembers class androidx.appcompat.app.AppCompatDelegate {
   *** getDrawerToggleDelegate(...);
   *** isHandleNativeActionModesEnabled(...);
   *** setHandleNativeActionModesEnabled(...);
   *** getMenuInflater(...);
   *** getSupportActionBar(...);
   *** addContentView(...);
   *** applyDayNight(...);
   *** createView(...);
   *** findViewById(...);
   *** hasWindowFeature(...);
   *** installViewFactory(...);
   *** invalidateOptionsMenu(...);
   *** onConfigurationChanged(...);
   *** onCreate(...);
   *** onDestroy(...);
   *** onPostCreate(...);
   *** onPostResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** requestWindowFeature(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setContentView(...);
   *** setLocalNightMode(...);
   *** setSupportActionBar(...);
   *** setTitle(...);
   *** startSupportActionMode(...);
}

-keep class androidx.appcompat.app.AppCompatCallback
-keepclassmembers class androidx.appcompat.app.AppCompatCallback {
}

-keep class androidx.appcompat.widget.Toolbar$OnMenuItemClickListener
-keepclassmembers class androidx.appcompat.widget.Toolbar$OnMenuItemClickListener {
}

-keep class mono.androidx.appcompat.widget.Toolbar_OnMenuItemClickListenerImplementor
-keepclassmembers class mono.androidx.appcompat.widget.Toolbar_OnMenuItemClickListenerImplementor {
}

-keep class androidx.appcompat.widget.Toolbar
-keepclassmembers class androidx.appcompat.widget.Toolbar {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCollapseContentDescription(...);
   *** setCollapseContentDescription(...);
   *** getCollapseIcon(...);
   *** setCollapseIcon(...);
   *** getContentInsetEnd(...);
   *** getContentInsetEndWithActions(...);
   *** setContentInsetEndWithActions(...);
   *** getContentInsetLeft(...);
   *** getContentInsetRight(...);
   *** getContentInsetStart(...);
   *** getContentInsetStartWithNavigation(...);
   *** setContentInsetStartWithNavigation(...);
   *** getCurrentContentInsetEnd(...);
   *** getCurrentContentInsetLeft(...);
   *** getCurrentContentInsetRight(...);
   *** getCurrentContentInsetStart(...);
   *** hasExpandedActionView(...);
   *** isOverflowMenuShowPending(...);
   *** isOverflowMenuShowing(...);
   *** isTitleTruncated(...);
   *** getLogo(...);
   *** setLogo(...);
   *** getLogoDescription(...);
   *** setLogoDescription(...);
   *** getMenu(...);
   *** getNavigationContentDescription(...);
   *** setNavigationContentDescription(...);
   *** getNavigationIcon(...);
   *** setNavigationIcon(...);
   *** getOverflowIcon(...);
   *** setOverflowIcon(...);
   *** getPopupTheme(...);
   *** setPopupTheme(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleMarginBottom(...);
   *** setTitleMarginBottom(...);
   *** getTitleMarginEnd(...);
   *** setTitleMarginEnd(...);
   *** getTitleMarginStart(...);
   *** setTitleMarginStart(...);
   *** getTitleMarginTop(...);
   *** setTitleMarginTop(...);
   *** getWrapper(...);
   *** addMenuProvider(...);
   *** addMenuProvider(...);
   *** addMenuProvider(...);
   *** canShowOverflowMenu(...);
   *** collapseActionView(...);
   *** dismissPopupMenus(...);
   *** hideOverflowMenu(...);
   *** inflateMenu(...);
   *** invalidateMenu(...);
   *** onLayout(...);
   *** removeMenuProvider(...);
   *** setCollapseContentDescription(...);
   *** setCollapseIcon(...);
   *** setCollapsible(...);
   *** setContentInsetsAbsolute(...);
   *** setContentInsetsRelative(...);
   *** setLogo(...);
   *** setLogoDescription(...);
   *** setMenuCallbacks(...);
   *** setNavigationContentDescription(...);
   *** setNavigationIcon(...);
   *** setNavigationOnClickListener(...);
   *** setOnMenuItemClickListener(...);
   *** setSubtitle(...);
   *** setSubtitleTextAppearance(...);
   *** setSubtitleTextColor(...);
   *** setSubtitleTextColor(...);
   *** setTitle(...);
   *** setTitleMargin(...);
   *** setTitleTextAppearance(...);
   *** setTitleTextColor(...);
   *** setTitleTextColor(...);
   *** showOverflowMenu(...);
}

-keep class androidx.appcompat.widget.DecorToolbar
-keepclassmembers class androidx.appcompat.widget.DecorToolbar {
}

-keep class androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener
-keepclassmembers class androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener {
   <init>(...);
   *** withFinalVisibility(...);
}

-keep class androidx.appcompat.widget.ScrollingTabContainerView
-keepclassmembers class androidx.appcompat.widget.ScrollingTabContainerView {
   <init>(...);
   *** addTab(...);
   *** addTab(...);
   *** animateToTab(...);
   *** animateToVisibility(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onItemSelected(...);
   *** onMeasure(...);
   *** onNothingSelected(...);
   *** removeAllTabs(...);
   *** removeTabAt(...);
   *** setAllowCollapse(...);
   *** setContentHeight(...);
   *** setTabSelected(...);
   *** updateTab(...);
}

-keep class androidx.appcompat.view.ActionMode$Callback
-keepclassmembers class androidx.appcompat.view.ActionMode$Callback {
}

-keep class androidx.appcompat.view.ActionMode
-keepclassmembers class androidx.appcompat.view.ActionMode {
   <init>(...);
   *** getCustomView(...);
   *** setCustomView(...);
   *** isTitleOptional(...);
   *** isUiFocusable(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTag(...);
   *** setTag(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleOptionalHint(...);
   *** setTitleOptionalHint(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class androidx.appcompat.view.ActionMode
-keepclassmembers class androidx.appcompat.view.ActionMode {
   *** getCustomView(...);
   *** setCustomView(...);
   *** getMenu(...);
   *** getMenuInflater(...);
   *** getSubtitle(...);
   *** setSubtitle(...);
   *** getTitle(...);
   *** setTitle(...);
   *** finish(...);
   *** invalidate(...);
   *** setSubtitle(...);
   *** setTitle(...);
}

-keep class androidx.appcompat.view.menu.MenuBuilder$Callback
-keepclassmembers class androidx.appcompat.view.menu.MenuBuilder$Callback {
}

-keep class androidx.appcompat.view.menu.MenuBuilder
-keepclassmembers class androidx.appcompat.view.menu.MenuBuilder {
   <init>(...);
   *** getActionItems(...);
   *** getActionViewStatesKey(...);
   *** getContext(...);
   *** getExpandedItem(...);
   *** isGroupDividerEnabled(...);
   *** setGroupDividerEnabled(...);
   *** hasVisibleItems(...);
   *** getHeaderIcon(...);
   *** getHeaderTitle(...);
   *** getHeaderView(...);
   *** getNonActionItems(...);
   *** getRootMenu(...);
   *** isShortcutsVisible(...);
   *** setShortcutsVisible(...);
   *** getVisibleItems(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addIntentOptions(...);
   *** addInternal(...);
   *** addMenuPresenter(...);
   *** addMenuPresenter(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** addSubMenu(...);
   *** changeMenuMode(...);
   *** clear(...);
   *** clearAll(...);
   *** clearHeader(...);
   *** close(...);
   *** close(...);
   *** collapseItemActionView(...);
   *** expandItemActionView(...);
   *** findGroupIndex(...);
   *** findGroupIndex(...);
   *** findItem(...);
   *** findItemIndex(...);
   *** flagActionItems(...);
   *** getItem(...);
   *** isShortcutKey(...);
   *** onItemsChanged(...);
   *** performIdentifierAction(...);
   *** performItemAction(...);
   *** performItemAction(...);
   *** performShortcut(...);
   *** removeGroup(...);
   *** removeItem(...);
   *** removeItemAt(...);
   *** removeMenuPresenter(...);
   *** restoreActionViewStates(...);
   *** restorePresenterStates(...);
   *** saveActionViewStates(...);
   *** savePresenterStates(...);
   *** setCallback(...);
   *** setCurrentMenuInfo(...);
   *** setDefaultShowAsAction(...);
   *** setGroupCheckable(...);
   *** setGroupEnabled(...);
   *** setGroupVisible(...);
   *** setHeaderIconInt(...);
   *** setHeaderIconInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderTitleInt(...);
   *** setHeaderViewInt(...);
   *** setOptionalIconsVisible(...);
   *** setOverrideVisibleItems(...);
   *** setQwertyMode(...);
   *** size(...);
   *** startDispatchingItemsChanged(...);
   *** stopDispatchingItemsChanged(...);
}

-keep class androidx.appcompat.view.menu.MenuPresenter$Callback
-keepclassmembers class androidx.appcompat.view.menu.MenuPresenter$Callback {
}

-keep class androidx.appcompat.view.menu.MenuPresenter
-keepclassmembers class androidx.appcompat.view.menu.MenuPresenter {
}

-keep class androidx.appcompat.view.menu.MenuView
-keepclassmembers class androidx.appcompat.view.menu.MenuView {
}

-keep class androidx.appcompat.view.menu.MenuItemImpl
-keepclassmembers class androidx.appcompat.view.menu.MenuItemImpl {
   *** getActionProvider(...);
   *** getActionView(...);
   *** getAlphabeticModifiers(...);
   *** getAlphabeticShortcut(...);
   *** getContentDescription(...);
   *** isExclusiveCheckable(...);
   *** setExclusiveCheckable(...);
   *** getGroupId(...);
   *** hasCollapsibleActionView(...);
   *** hasSubMenu(...);
   *** getIcon(...);
   *** getIconTintList(...);
   *** getIconTintMode(...);
   *** getIntent(...);
   *** isActionButton(...);
   *** setIsActionButton(...);
   *** isActionViewExpanded(...);
   *** isCheckable(...);
   *** isChecked(...);
   *** isEnabled(...);
   *** isVisible(...);
   *** getItemId(...);
   *** getMenuInfo(...);
   *** getNumericModifiers(...);
   *** getNumericShortcut(...);
   *** getOrder(...);
   *** getOrdering(...);
   *** getSubMenu(...);
   *** getSupportActionProvider(...);
   *** getTitle(...);
   *** getTitleCondensed(...);
   *** getTooltipText(...);
   *** actionFormatChanged(...);
   *** collapseActionView(...);
   *** expandActionView(...);
   *** invoke(...);
   *** requestsActionButton(...);
   *** requiresActionButton(...);
   *** requiresOverflow(...);
   *** setActionProvider(...);
   *** setActionView(...);
   *** setActionView(...);
   *** setActionViewExpanded(...);
   *** setAlphabeticShortcut(...);
   *** setAlphabeticShortcut(...);
   *** setCallback(...);
   *** setCheckable(...);
   *** setChecked(...);
   *** setContentDescription(...);
   *** setEnabled(...);
   *** setIcon(...);
   *** setIcon(...);
   *** setIconTintList(...);
   *** setIconTintMode(...);
   *** setIntent(...);
   *** setNumericShortcut(...);
   *** setNumericShortcut(...);
   *** setOnActionExpandListener(...);
   *** setOnMenuItemClickListener(...);
   *** setShortcut(...);
   *** setShortcut(...);
   *** setShowAsAction(...);
   *** setShowAsActionFlags(...);
   *** setSubMenu(...);
   *** setSupportActionProvider(...);
   *** setTitle(...);
   *** setTitle(...);
   *** setTitleCondensed(...);
   *** setTooltipText(...);
   *** setVisible(...);
   *** shouldShowIcon(...);
   *** showsTextAsAction(...);
}

-keep class androidx.appcompat.view.menu.SubMenuBuilder
-keepclassmembers class androidx.appcompat.view.menu.SubMenuBuilder {
   <init>(...);
   *** getActionViewStatesKey(...);
   *** isQwertyMode(...);
   *** getItem(...);
   *** getParentMenu(...);
   *** setHeaderIcon(...);
   *** setHeaderIcon(...);
   *** setHeaderTitle(...);
   *** setHeaderTitle(...);
   *** setHeaderView(...);
   *** setIcon(...);
   *** setIcon(...);
}

# ACW for Xamarin.AndroidX.Navigation.Runtime
-keep class androidx.navigation.NavBackStackEntry
-keepclassmembers class androidx.navigation.NavBackStackEntry {
   *** getArguments(...);
   *** getDefaultViewModelProviderFactory(...);
   *** getDestination(...);
   *** getLifecycle(...);
   *** getSavedStateHandle(...);
   *** getSavedStateRegistry(...);
   *** getViewModelStore(...);
}

-keep class androidx.navigation.NavController$OnDestinationChangedListener
-keepclassmembers class androidx.navigation.NavController$OnDestinationChangedListener {
}

-keep class mono.androidx.navigation.NavController_OnDestinationChangedListenerImplementor
-keepclassmembers class mono.androidx.navigation.NavController_OnDestinationChangedListenerImplementor {
}

-keep class androidx.navigation.NavController
-keepclassmembers class androidx.navigation.NavController {
   <init>(...);
   *** getBackStack(...);
   *** getCurrentBackStackEntry(...);
   *** getCurrentDestination(...);
   *** getGraph(...);
   *** setGraph(...);
   *** getNavInflater(...);
   *** getNavigatorProvider(...);
   *** setNavigatorProvider(...);
   *** getPreviousBackStackEntry(...);
   *** addOnDestinationChangedListener(...);
   *** createDeepLink(...);
   *** getBackStackEntry(...);
   *** getViewModelStoreOwner(...);
   *** handleDeepLink(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigate(...);
   *** navigateUp(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** removeOnDestinationChangedListener(...);
   *** restoreState(...);
   *** saveState(...);
   *** setGraph(...);
   *** setGraph(...);
   *** setGraph(...);
}

-keep class androidx.navigation.NavDeepLinkBuilder
-keepclassmembers class androidx.navigation.NavDeepLinkBuilder {
   <init>(...);
   *** createPendingIntent(...);
   *** createTaskStackBuilder(...);
   *** setArguments(...);
   *** setComponentName(...);
   *** setComponentName(...);
   *** setDestination(...);
   *** setGraph(...);
   *** setGraph(...);
}

-keep class androidx.navigation.Navigation
-keepclassmembers class androidx.navigation.Navigation {
   *** createNavigateOnClickListener(...);
   *** createNavigateOnClickListener(...);
   *** createNavigateOnClickListener(...);
   *** findNavController(...);
   *** findNavController(...);
   *** setViewNavController(...);
}

-keep class androidx.navigation.NavInflater
-keepclassmembers class androidx.navigation.NavInflater {
   <init>(...);
   *** inflate(...);
}

# ACW for Xamarin.Google.Android.Material
-keep class com.google.android.material.badge.BadgeDrawable$SavedState
-keepclassmembers class com.google.android.material.badge.BadgeDrawable$SavedState {
   <init>(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class com.google.android.material.badge.BadgeDrawable
-keepclassmembers class com.google.android.material.badge.BadgeDrawable {
   *** getBackgroundColor(...);
   *** setBackgroundColor(...);
   *** getBadgeGravity(...);
   *** setBadgeGravity(...);
   *** getBadgeTextColor(...);
   *** setBadgeTextColor(...);
   *** getContentDescription(...);
   *** getCustomBadgeParent(...);
   *** hasNumber(...);
   *** getHorizontalOffset(...);
   *** setHorizontalOffset(...);
   *** getMaxCharacterCount(...);
   *** setMaxCharacterCount(...);
   *** getNumber(...);
   *** setNumber(...);
   *** getOpacity(...);
   *** getVerticalOffset(...);
   *** setVerticalOffset(...);
   *** clearNumber(...);
   *** create(...);
   *** createFromResource(...);
   *** draw(...);
   *** getSavedState(...);
   *** onStateChange(...);
   *** onTextSizeChange(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setContentDescriptionExceedsMaxBadgeNumberStringResource(...);
   *** setContentDescriptionNumberless(...);
   *** setContentDescriptionQuantityStringsResource(...);
   *** setVisible(...);
   *** updateBadgeCoordinates(...);
   *** updateBadgeCoordinates(...);
   *** updateBadgeCoordinates(...);
}

-keep class com.google.android.material.navigation.NavigationBarView$OnItemReselectedListener
-keepclassmembers class com.google.android.material.navigation.NavigationBarView$OnItemReselectedListener {
}

-keep class mono.com.google.android.material.navigation.NavigationBarView_OnItemReselectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.navigation.NavigationBarView_OnItemReselectedListenerImplementor {
}

-keep class com.google.android.material.navigation.NavigationBarView$OnItemSelectedListener
-keepclassmembers class com.google.android.material.navigation.NavigationBarView$OnItemSelectedListener {
}

-keep class mono.com.google.android.material.navigation.NavigationBarView_OnItemSelectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.navigation.NavigationBarView_OnItemSelectedListenerImplementor {
}

-keep class com.google.android.material.navigation.NavigationBarView
-keepclassmembers class com.google.android.material.navigation.NavigationBarView {
   <init>(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemBackgroundResource(...);
   *** setItemBackgroundResource(...);
   *** getItemIconSize(...);
   *** setItemIconSize(...);
   *** getItemIconTintList(...);
   *** setItemIconTintList(...);
   *** getItemRippleColor(...);
   *** setItemRippleColor(...);
   *** getItemTextAppearanceActive(...);
   *** setItemTextAppearanceActive(...);
   *** getItemTextAppearanceInactive(...);
   *** setItemTextAppearanceInactive(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getLabelVisibilityMode(...);
   *** setLabelVisibilityMode(...);
   *** getMaxItemCount(...);
   *** getMenu(...);
   *** getMenuView(...);
   *** getPresenter(...);
   *** getSelectedItemId(...);
   *** setSelectedItemId(...);
   *** createNavigationBarMenuView(...);
   *** getBadge(...);
   *** getOrCreateBadge(...);
   *** inflateMenu(...);
   *** removeBadge(...);
   *** setItemIconSizeRes(...);
   *** setItemOnTouchListener(...);
   *** setOnItemReselectedListener(...);
   *** setOnItemSelectedListener(...);
}

-keep class com.google.android.material.navigation.NavigationBarItemView
-keepclassmembers class com.google.android.material.navigation.NavigationBarItemView {
   *** setEnabled(...);
   <init>(...);
   *** getBadge(...);
   *** getItemBackgroundResId(...);
   *** getItemData(...);
   *** getItemDefaultMarginResId(...);
   *** getItemLayoutResId(...);
   *** getItemPosition(...);
   *** setItemPosition(...);
   *** initialize(...);
   *** onCreateDrawableState(...);
   *** prefersCondensedTitle(...);
   *** setCheckable(...);
   *** setChecked(...);
   *** setIcon(...);
   *** setIconSize(...);
   *** setIconTintList(...);
   *** setItemBackground(...);
   *** setItemBackground(...);
   *** setLabelVisibilityMode(...);
   *** setShifting(...);
   *** setShortcut(...);
   *** setTextAppearanceActive(...);
   *** setTextAppearanceInactive(...);
   *** setTextColor(...);
   *** setTitle(...);
   *** showsIcon(...);
}

-keep class com.google.android.material.navigation.NavigationBarItemView
-keepclassmembers class com.google.android.material.navigation.NavigationBarItemView {
   *** getItemLayoutResId(...);
}

-keep class com.google.android.material.navigation.NavigationBarMenuView
-keepclassmembers class com.google.android.material.navigation.NavigationBarMenuView {
   <init>(...);
   *** getIconTintList(...);
   *** setIconTintList(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemBackgroundRes(...);
   *** setItemBackgroundRes(...);
   *** getItemIconSize(...);
   *** setItemIconSize(...);
   *** getItemTextAppearanceActive(...);
   *** setItemTextAppearanceActive(...);
   *** getItemTextAppearanceInactive(...);
   *** setItemTextAppearanceInactive(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getLabelVisibilityMode(...);
   *** setLabelVisibilityMode(...);
   *** getMenu(...);
   *** getSelectedItemId(...);
   *** getSelectedItemPosition(...);
   *** getWindowAnimations(...);
   *** buildMenuView(...);
   *** createDefaultColorStateList(...);
   *** createNavigationBarItemView(...);
   *** findItemView(...);
   *** getBadge(...);
   *** initialize(...);
   *** isShifting(...);
   *** setItemOnTouchListener(...);
   *** setPresenter(...);
   *** updateMenuView(...);
}

-keep class com.google.android.material.navigation.NavigationBarMenuView
-keepclassmembers class com.google.android.material.navigation.NavigationBarMenuView {
   *** createNavigationBarItemView(...);
   *** onLayout(...);
}

-keep class com.google.android.material.navigation.NavigationBarPresenter
-keepclassmembers class com.google.android.material.navigation.NavigationBarPresenter {
   <init>(...);
   *** getId(...);
   *** setId(...);
   *** collapseItemActionView(...);
   *** expandItemActionView(...);
   *** flagActionItems(...);
   *** getMenuView(...);
   *** initForMenu(...);
   *** onCloseMenu(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onSubMenuSelected(...);
   *** setCallback(...);
   *** setMenuView(...);
   *** setUpdateSuspended(...);
   *** updateMenuView(...);
}

-keep class com.google.android.material.navigation.NavigationBarView
-keepclassmembers class com.google.android.material.navigation.NavigationBarView {
   *** getMaxItemCount(...);
   *** createNavigationBarMenuView(...);
}

-keep class com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener
-keepclassmembers class com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener {
}

-keep class mono.com.google.android.material.navigation.NavigationView_OnNavigationItemSelectedListenerImplementor
-keepclassmembers class mono.com.google.android.material.navigation.NavigationView_OnNavigationItemSelectedListenerImplementor {
}

-keep class com.google.android.material.navigation.NavigationView
-keepclassmembers class com.google.android.material.navigation.NavigationView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCheckedItem(...);
   *** setCheckedItem(...);
   *** getHeaderCount(...);
   *** getItemBackground(...);
   *** setItemBackground(...);
   *** getItemHorizontalPadding(...);
   *** setItemHorizontalPadding(...);
   *** getItemIconPadding(...);
   *** setItemIconPadding(...);
   *** getItemIconTintList(...);
   *** setItemIconTintList(...);
   *** getItemMaxLines(...);
   *** setItemMaxLines(...);
   *** getItemTextColor(...);
   *** setItemTextColor(...);
   *** getMenu(...);
   *** addHeaderView(...);
   *** getHeaderView(...);
   *** inflateHeaderView(...);
   *** inflateMenu(...);
   *** removeHeaderView(...);
   *** setCheckedItem(...);
   *** setItemBackgroundResource(...);
   *** setItemHorizontalPaddingResource(...);
   *** setItemIconPaddingResource(...);
   *** setItemIconSize(...);
   *** setItemTextAppearance(...);
   *** setNavigationItemSelectedListener(...);
}

-keep class com.google.android.material.internal.ScrimInsetsFrameLayout
-keepclassmembers class com.google.android.material.internal.ScrimInsetsFrameLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** onInsetsChanged(...);
   *** setDrawBottomInsetForeground(...);
   *** setDrawTopInsetForeground(...);
   *** setScrimInsetForeground(...);
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener {
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener {
}

-keep class com.google.android.material.bottomnavigation.BottomNavigationView
-keepclassmembers class com.google.android.material.bottomnavigation.BottomNavigationView {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isItemHorizontalTranslationEnabled(...);
   *** setItemHorizontalTranslationEnabled(...);
   *** getMaxItemCount(...);
   *** createNavigationBarMenuView(...);
   *** setOnNavigationItemReselectedListener(...);
   *** setOnNavigationItemSelectedListener(...);
}

-keep class com.google.android.material.appbar.CollapsingToolbarLayout
-keepclassmembers class com.google.android.material.appbar.CollapsingToolbarLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCollapsedTitleGravity(...);
   *** setCollapsedTitleGravity(...);
   *** getCollapsedTitleTypeface(...);
   *** setCollapsedTitleTypeface(...);
   *** getContentScrim(...);
   *** setContentScrim(...);
   *** getExpandedTitleGravity(...);
   *** setExpandedTitleGravity(...);
   *** getExpandedTitleMarginBottom(...);
   *** setExpandedTitleMarginBottom(...);
   *** getExpandedTitleMarginEnd(...);
   *** setExpandedTitleMarginEnd(...);
   *** getExpandedTitleMarginStart(...);
   *** setExpandedTitleMarginStart(...);
   *** getExpandedTitleMarginTop(...);
   *** setExpandedTitleMarginTop(...);
   *** getExpandedTitleTypeface(...);
   *** setExpandedTitleTypeface(...);
   *** isExtraMultilineHeightEnabled(...);
   *** setExtraMultilineHeightEnabled(...);
   *** isForceApplySystemWindowInsetTop(...);
   *** setForceApplySystemWindowInsetTop(...);
   *** getHyphenationFrequency(...);
   *** setHyphenationFrequency(...);
   *** getLineCount(...);
   *** getLineSpacingAdd(...);
   *** setLineSpacingAdd(...);
   *** getLineSpacingMultiplier(...);
   *** setLineSpacingMultiplier(...);
   *** getMaxLines(...);
   *** setMaxLines(...);
   *** isRtlTextDirectionHeuristicsEnabled(...);
   *** setRtlTextDirectionHeuristicsEnabled(...);
   *** getScrimAnimationDuration(...);
   *** setScrimAnimationDuration(...);
   *** getScrimVisibleHeightTrigger(...);
   *** setScrimVisibleHeightTrigger(...);
   *** getStatusBarScrim(...);
   *** setStatusBarScrim(...);
   *** getTitle(...);
   *** setTitle(...);
   *** getTitleCollapseMode(...);
   *** setTitleCollapseMode(...);
   *** isTitleEnabled(...);
   *** setTitleEnabled(...);
   *** setCollapsedTitleTextAppearance(...);
   *** setCollapsedTitleTextColor(...);
   *** setCollapsedTitleTextColor(...);
   *** setContentScrimColor(...);
   *** setContentScrimResource(...);
   *** setExpandedTitleColor(...);
   *** setExpandedTitleMargin(...);
   *** setExpandedTitleTextAppearance(...);
   *** setExpandedTitleTextColor(...);
   *** setScrimsShown(...);
   *** setScrimsShown(...);
   *** setStatusBarScrimColor(...);
   *** setStatusBarScrimResource(...);
}

# ACW for Xamarin.AndroidX.Navigation.UI
-keep class androidx.navigation.ui.AppBarConfiguration$Builder
-keepclassmembers class androidx.navigation.ui.AppBarConfiguration$Builder {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** build(...);
   *** setDrawerLayout(...);
   *** setFallbackOnNavigateUpListener(...);
   *** setOpenableLayout(...);
}

-keep class androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener
-keepclassmembers class androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener {
}

-keep class androidx.navigation.ui.AppBarConfiguration
-keepclassmembers class androidx.navigation.ui.AppBarConfiguration {
   *** getDrawerLayout(...);
   *** getFallbackOnNavigateUpListener(...);
   *** getOpenableLayout(...);
   *** getTopLevelDestinations(...);
}

-keep class androidx.navigation.ui.NavigationUI
-keepclassmembers class androidx.navigation.ui.NavigationUI {
   *** navigateUp(...);
   *** navigateUp(...);
   *** onNavDestinationSelected(...);
   *** setupActionBarWithNavController(...);
   *** setupActionBarWithNavController(...);
   *** setupActionBarWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
   *** setupWithNavController(...);
}

# ACW for Xamarin.AndroidX.DrawerLayout
-keep class androidx.drawerlayout.widget.DrawerLayout$DrawerListener
-keepclassmembers class androidx.drawerlayout.widget.DrawerLayout$DrawerListener {
}

-keep class mono.androidx.drawerlayout.widget.DrawerLayout_DrawerListenerImplementor
-keepclassmembers class mono.androidx.drawerlayout.widget.DrawerLayout_DrawerListenerImplementor {
}

-keep class androidx.drawerlayout.widget.DrawerLayout
-keepclassmembers class androidx.drawerlayout.widget.DrawerLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDrawerElevation(...);
   *** setDrawerElevation(...);
   *** isOpen(...);
   *** getStatusBarBackgroundDrawable(...);
   *** addDrawerListener(...);
   *** addFocusables(...);
   *** close(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawer(...);
   *** closeDrawers(...);
   *** getDrawerLockMode(...);
   *** getDrawerLockMode(...);
   *** getDrawerTitle(...);
   *** isDrawerOpen(...);
   *** isDrawerOpen(...);
   *** isDrawerVisible(...);
   *** isDrawerVisible(...);
   *** onDraw(...);
   *** onLayout(...);
   *** open(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** openDrawer(...);
   *** removeDrawerListener(...);
   *** setChildInsets(...);
   *** setDrawerListener(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerLockMode(...);
   *** setDrawerShadow(...);
   *** setDrawerShadow(...);
   *** setDrawerTitle(...);
   *** setScrimColor(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** setStatusBarBackgroundColor(...);
}

# ACW for Xamarin.AndroidX.Navigation.Fragment
-keep class androidx.navigation.fragment.NavHostFragment
-keepclassmembers class androidx.navigation.fragment.NavHostFragment {
   <init>(...);
   *** getNavController(...);
   *** create(...);
   *** create(...);
   *** createFragmentNavigator(...);
   *** findNavController(...);
   *** onCreateNavController(...);
}

# ACW for Xamarin.AndroidX.Navigation.Common
-keep class androidx.navigation.NavDirections
-keepclassmembers class androidx.navigation.NavDirections {
}

-keep class androidx.navigation.NavAction
-keepclassmembers class androidx.navigation.NavAction {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDefaultArguments(...);
   *** setDefaultArguments(...);
   *** getDestinationId(...);
   *** getNavOptions(...);
   *** setNavOptions(...);
}

-keep class androidx.navigation.NavArgument
-keepclassmembers class androidx.navigation.NavArgument {
   *** getDefaultValue(...);
   *** isDefaultValuePresent(...);
   *** isNullable(...);
   *** getType(...);
}

-keep class androidx.navigation.NavDeepLink
-keepclassmembers class androidx.navigation.NavDeepLink {
   *** getAction(...);
   *** getMimeType(...);
   *** getUriPattern(...);
}

-keep class androidx.navigation.NavDeepLinkRequest
-keepclassmembers class androidx.navigation.NavDeepLinkRequest {
   *** getAction(...);
   *** getMimeType(...);
   *** getUri(...);
}

-keep class androidx.navigation.NavDestination
-keepclassmembers class androidx.navigation.NavDestination {
   <init>(...);
   <init>(...);
   *** getArguments(...);
   *** getDisplayName(...);
   *** getId(...);
   *** setId(...);
   *** getLabel(...);
   *** setLabel(...);
   *** getNavigatorName(...);
   *** getParent(...);
   *** addArgument(...);
   *** addDeepLink(...);
   *** addDeepLink(...);
   *** getAction(...);
   *** hasDeepLink(...);
   *** hasDeepLink(...);
   *** onInflate(...);
   *** parseClassFromName(...);
   *** putAction(...);
   *** putAction(...);
   *** removeAction(...);
   *** removeArgument(...);
}

-keep class androidx.navigation.NavGraph
-keepclassmembers class androidx.navigation.NavGraph {
   <init>(...);
   *** getStartDestination(...);
   *** setStartDestination(...);
   *** addAll(...);
   *** addDestination(...);
   *** addDestinations(...);
   *** addDestinations(...);
   *** clear(...);
   *** findNode(...);
   *** iterator(...);
   *** remove(...);
}

-keep class androidx.navigation.Navigator$Extras
-keepclassmembers class androidx.navigation.Navigator$Extras {
}

-keep class androidx.navigation.Navigator
-keepclassmembers class androidx.navigation.Navigator {
   <init>(...);
   *** createDestination(...);
   *** navigate(...);
   *** onRestoreState(...);
   *** onSaveState(...);
   *** popBackStack(...);
}

-keep class androidx.navigation.Navigator
-keepclassmembers class androidx.navigation.Navigator {
   *** createDestination(...);
   *** navigate(...);
   *** popBackStack(...);
}

-keep class androidx.navigation.NavigatorProvider
-keepclassmembers class androidx.navigation.NavigatorProvider {
   <init>(...);
   *** addNavigator(...);
   *** addNavigator(...);
   *** getNavigator(...);
   *** getNavigator(...);
}

-keep class androidx.navigation.NavOptions$Builder
-keepclassmembers class androidx.navigation.NavOptions$Builder {
   <init>(...);
   *** build(...);
   *** setEnterAnim(...);
   *** setExitAnim(...);
   *** setLaunchSingleTop(...);
   *** setPopEnterAnim(...);
   *** setPopExitAnim(...);
   *** setPopUpTo(...);
}

-keep class androidx.navigation.NavOptions
-keepclassmembers class androidx.navigation.NavOptions {
   *** getEnterAnim(...);
   *** getExitAnim(...);
   *** isPopUpToInclusive(...);
   *** getPopEnterAnim(...);
   *** getPopExitAnim(...);
   *** getPopUpTo(...);
   *** shouldLaunchSingleTop(...);
}

-keep class androidx.navigation.NavType
-keepclassmembers class androidx.navigation.NavType {
   *** isNullableAllowed(...);
   *** getName(...);
   *** fromArgType(...);
   *** get(...);
   *** parseValue(...);
}

-keep class androidx.navigation.NavType
-keepclassmembers class androidx.navigation.NavType {
   *** getName(...);
   *** get(...);
   *** parseValue(...);
}

# ACW for Xamarin.AndroidX.Activity
-keep class androidx.activity.ComponentActivity
-keepclassmembers class androidx.activity.ComponentActivity {
   <init>(...);
   <init>(...);
   *** getActivityResultRegistry(...);
   *** getDefaultViewModelProviderFactory(...);
   *** getLastCustomNonConfigurationInstance(...);
   *** getOnBackPressedDispatcher(...);
   *** getSavedStateRegistry(...);
   *** getViewModelStore(...);
   *** addMenuProvider(...);
   *** addMenuProvider(...);
   *** addMenuProvider(...);
   *** addOnContextAvailableListener(...);
   *** invalidateMenu(...);
   *** onRetainCustomNonConfigurationInstance(...);
   *** onRetainNonConfigurationInstance(...);
   *** peekAvailableContext(...);
   *** registerForActivityResult(...);
   *** registerForActivityResult(...);
   *** removeMenuProvider(...);
   *** removeOnContextAvailableListener(...);
}

-keep class androidx.activity.OnBackPressedCallback
-keepclassmembers class androidx.activity.OnBackPressedCallback {
   <init>(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** handleOnBackPressed(...);
   *** remove(...);
}

-keep class androidx.activity.OnBackPressedCallback
-keepclassmembers class androidx.activity.OnBackPressedCallback {
   *** handleOnBackPressed(...);
}

-keep class androidx.activity.OnBackPressedDispatcher
-keepclassmembers class androidx.activity.OnBackPressedDispatcher {
   <init>(...);
   <init>(...);
   *** hasEnabledCallbacks(...);
   *** addCallback(...);
   *** addCallback(...);
   *** onBackPressed(...);
}

-keep class androidx.activity.contextaware.OnContextAvailableListener
-keepclassmembers class androidx.activity.contextaware.OnContextAvailableListener {
}

-keep class mono.androidx.activity.contextaware.OnContextAvailableListenerImplementor
-keepclassmembers class mono.androidx.activity.contextaware.OnContextAvailableListenerImplementor {
}

-keep class androidx.activity.result.ActivityResultLauncher
-keepclassmembers class androidx.activity.result.ActivityResultLauncher {
   <init>(...);
   *** getContract(...);
   *** launch(...);
   *** launch(...);
   *** unregister(...);
}

-keep class androidx.activity.result.ActivityResultLauncher
-keepclassmembers class androidx.activity.result.ActivityResultLauncher {
   *** getContract(...);
   *** launch(...);
   *** unregister(...);
}

-keep class androidx.activity.result.ActivityResultRegistry
-keepclassmembers class androidx.activity.result.ActivityResultRegistry {
   <init>(...);
   *** dispatchResult(...);
   *** dispatchResult(...);
   *** onLaunch(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** register(...);
   *** register(...);
}

-keep class androidx.activity.result.ActivityResultRegistry
-keepclassmembers class androidx.activity.result.ActivityResultRegistry {
   *** onLaunch(...);
}

-keep class androidx.activity.result.ActivityResultCallback
-keepclassmembers class androidx.activity.result.ActivityResultCallback {
}

-keep class androidx.activity.result.contract.ActivityResultContract$SynchronousResult
-keepclassmembers class androidx.activity.result.contract.ActivityResultContract$SynchronousResult {
   <init>(...);
   *** getValue(...);
}

-keep class androidx.activity.result.contract.ActivityResultContract
-keepclassmembers class androidx.activity.result.contract.ActivityResultContract {
   <init>(...);
   *** createIntent(...);
   *** getSynchronousResult(...);
   *** parseResult(...);
}

-keep class androidx.activity.result.contract.ActivityResultContract
-keepclassmembers class androidx.activity.result.contract.ActivityResultContract {
   *** createIntent(...);
   *** parseResult(...);
}

# ACW for Xamarin.AndroidX.Fragment
-keep class androidx.fragment.app.FragmentActivity
-keepclassmembers class androidx.fragment.app.FragmentActivity {
   <init>(...);
   <init>(...);
   *** getSupportFragmentManager(...);
   *** getSupportLoaderManager(...);
   *** onAttachFragment(...);
   *** onPrepareOptionsPanel(...);
   *** onResumeFragments(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** startActivityFromFragment(...);
   *** startActivityFromFragment(...);
   *** startIntentSenderFromFragment(...);
   *** supportFinishAfterTransition(...);
   *** supportInvalidateOptionsMenu(...);
   *** supportPostponeEnterTransition(...);
   *** supportStartPostponedEnterTransition(...);
   *** validateRequestPermissionsRequestCode(...);
}

-keep class androidx.fragment.app.Fragment$SavedState
-keepclassmembers class androidx.fragment.app.Fragment$SavedState {
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class androidx.fragment.app.Fragment
-keepclassmembers class androidx.fragment.app.Fragment {
   <init>(...);
   <init>(...);
   *** getActivity(...);
   *** getAllowEnterTransitionOverlap(...);
   *** setAllowEnterTransitionOverlap(...);
   *** getAllowReturnTransitionOverlap(...);
   *** setAllowReturnTransitionOverlap(...);
   *** getArguments(...);
   *** setArguments(...);
   *** getChildFragmentManager(...);
   *** getContext(...);
   *** getDefaultViewModelProviderFactory(...);
   *** getEnterTransition(...);
   *** setEnterTransition(...);
   *** getExitTransition(...);
   *** setExitTransition(...);
   *** getFragmentManager(...);
   *** hasOptionsMenu(...);
   *** setHasOptionsMenu(...);
   *** getHost(...);
   *** getId(...);
   *** isAdded(...);
   *** isDetached(...);
   *** isHidden(...);
   *** isInLayout(...);
   *** isMenuVisible(...);
   *** isRemoving(...);
   *** isResumed(...);
   *** isStateSaved(...);
   *** isVisible(...);
   *** getLayoutInflater(...);
   *** getLifecycle(...);
   *** getLoaderManager(...);
   *** getParentFragment(...);
   *** getParentFragmentManager(...);
   *** getReenterTransition(...);
   *** setReenterTransition(...);
   *** getResources(...);
   *** getRetainInstance(...);
   *** setRetainInstance(...);
   *** getReturnTransition(...);
   *** setReturnTransition(...);
   *** getSavedStateRegistry(...);
   *** getSharedElementEnterTransition(...);
   *** setSharedElementEnterTransition(...);
   *** getSharedElementReturnTransition(...);
   *** setSharedElementReturnTransition(...);
   *** getTag(...);
   *** getTargetFragment(...);
   *** getTargetRequestCode(...);
   *** getUserVisibleHint(...);
   *** setUserVisibleHint(...);
   *** getView(...);
   *** getViewLifecycleOwner(...);
   *** getViewLifecycleOwnerLiveData(...);
   *** getViewModelStore(...);
   *** dump(...);
   *** equals(...);
   *** getLayoutInflater(...);
   *** getString(...);
   *** getString(...);
   *** getText(...);
   *** hashCode(...);
   *** instantiate(...);
   *** instantiate(...);
   *** onActivityCreated(...);
   *** onActivityResult(...);
   *** onAttach(...);
   *** onAttach(...);
   *** onAttachFragment(...);
   *** onConfigurationChanged(...);
   *** onContextItemSelected(...);
   *** onCreate(...);
   *** onCreateAnimation(...);
   *** onCreateAnimator(...);
   *** onCreateContextMenu(...);
   *** onCreateOptionsMenu(...);
   *** onCreateView(...);
   *** onDestroy(...);
   *** onDestroyOptionsMenu(...);
   *** onDestroyView(...);
   *** onDetach(...);
   *** onGetLayoutInflater(...);
   *** onHiddenChanged(...);
   *** onInflate(...);
   *** onInflate(...);
   *** onLowMemory(...);
   *** onMultiWindowModeChanged(...);
   *** onOptionsItemSelected(...);
   *** onOptionsMenuClosed(...);
   *** onPause(...);
   *** onPictureInPictureModeChanged(...);
   *** onPrepareOptionsMenu(...);
   *** onPrimaryNavigationFragmentChanged(...);
   *** onRequestPermissionsResult(...);
   *** onResume(...);
   *** onSaveInstanceState(...);
   *** onStart(...);
   *** onStop(...);
   *** onViewCreated(...);
   *** onViewStateRestored(...);
   *** postponeEnterTransition(...);
   *** postponeEnterTransition(...);
   *** registerForActivityResult(...);
   *** registerForActivityResult(...);
   *** registerForContextMenu(...);
   *** requestPermissions(...);
   *** requireActivity(...);
   *** requireArguments(...);
   *** requireContext(...);
   *** requireFragmentManager(...);
   *** requireHost(...);
   *** requireParentFragment(...);
   *** requireView(...);
   *** setEnterSharedElementCallback(...);
   *** setExitSharedElementCallback(...);
   *** setInitialSavedState(...);
   *** setMenuVisibility(...);
   *** setTargetFragment(...);
   *** shouldShowRequestPermissionRationale(...);
   *** startActivity(...);
   *** startActivity(...);
   *** startActivityForResult(...);
   *** startActivityForResult(...);
   *** startIntentSenderForResult(...);
   *** startPostponedEnterTransition(...);
   *** unregisterForContextMenu(...);
}

-keep class androidx.fragment.app.FragmentContainer
-keepclassmembers class androidx.fragment.app.FragmentContainer {
   <init>(...);
   *** instantiate(...);
   *** onFindViewById(...);
   *** onHasView(...);
}

-keep class androidx.fragment.app.FragmentContainer
-keepclassmembers class androidx.fragment.app.FragmentContainer {
   *** onFindViewById(...);
   *** onHasView(...);
}

-keep class androidx.fragment.app.FragmentFactory
-keepclassmembers class androidx.fragment.app.FragmentFactory {
   <init>(...);
   *** instantiate(...);
   *** loadFragmentClass(...);
}

-keep class androidx.fragment.app.FragmentHostCallback
-keepclassmembers class androidx.fragment.app.FragmentHostCallback {
   <init>(...);
   *** getHandler(...);
   *** onDump(...);
   *** onFindViewById(...);
   *** onGetHost(...);
   *** onGetLayoutInflater(...);
   *** onGetWindowAnimations(...);
   *** onHasView(...);
   *** onHasWindowAnimations(...);
   *** onRequestPermissionsFromFragment(...);
   *** onShouldSaveFragmentState(...);
   *** onShouldShowRequestPermissionRationale(...);
   *** onStartActivityFromFragment(...);
   *** onStartActivityFromFragment(...);
   *** onStartIntentSenderFromFragment(...);
   *** onSupportInvalidateOptionsMenu(...);
}

-keep class androidx.fragment.app.FragmentHostCallback
-keepclassmembers class androidx.fragment.app.FragmentHostCallback {
   *** onGetHost(...);
}

-keep class androidx.fragment.app.FragmentManager$BackStackEntry
-keepclassmembers class androidx.fragment.app.FragmentManager$BackStackEntry {
}

-keep class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks {
   <init>(...);
   *** onFragmentActivityCreated(...);
   *** onFragmentAttached(...);
   *** onFragmentCreated(...);
   *** onFragmentDestroyed(...);
   *** onFragmentDetached(...);
   *** onFragmentPaused(...);
   *** onFragmentPreAttached(...);
   *** onFragmentPreCreated(...);
   *** onFragmentResumed(...);
   *** onFragmentSaveInstanceState(...);
   *** onFragmentStarted(...);
   *** onFragmentStopped(...);
   *** onFragmentViewCreated(...);
   *** onFragmentViewDestroyed(...);
}

-keep class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks
-keepclassmembers class androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks {
}

-keep class androidx.fragment.app.FragmentManager$OnBackStackChangedListener
-keepclassmembers class androidx.fragment.app.FragmentManager$OnBackStackChangedListener {
}

-keep class mono.androidx.fragment.app.FragmentManager_OnBackStackChangedListenerImplementor
-keepclassmembers class mono.androidx.fragment.app.FragmentManager_OnBackStackChangedListenerImplementor {
}

-keep class androidx.fragment.app.FragmentManager
-keepclassmembers class androidx.fragment.app.FragmentManager {
   <init>(...);
   *** getBackStackEntryCount(...);
   *** getFragmentFactory(...);
   *** setFragmentFactory(...);
   *** getFragments(...);
   *** getHost(...);
   *** isDestroyed(...);
   *** isStateSaved(...);
   *** getPrimaryNavigationFragment(...);
   *** getStrictModePolicy(...);
   *** setStrictModePolicy(...);
   *** addFragmentOnAttachListener(...);
   *** addOnBackStackChangedListener(...);
   *** beginTransaction(...);
   *** clearBackStack(...);
   *** clearFragmentResult(...);
   *** clearFragmentResultListener(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** executePendingTransactions(...);
   *** findFragment(...);
   *** findFragmentById(...);
   *** findFragmentByTag(...);
   *** getBackStackEntryAt(...);
   *** getFragment(...);
   *** isLoggingEnabled(...);
   *** openTransaction(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStack(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** popBackStackImmediate(...);
   *** putFragment(...);
   *** registerFragmentLifecycleCallbacks(...);
   *** removeFragmentOnAttachListener(...);
   *** removeOnBackStackChangedListener(...);
   *** restoreBackStack(...);
   *** saveBackStack(...);
   *** saveFragmentInstanceState(...);
   *** setFragmentResult(...);
   *** setFragmentResultListener(...);
   *** unregisterFragmentLifecycleCallbacks(...);
}

-keep class androidx.fragment.app.FragmentManager
-keepclassmembers class androidx.fragment.app.FragmentManager {
}

-keep class androidx.fragment.app.FragmentTransaction
-keepclassmembers class androidx.fragment.app.FragmentTransaction {
   <init>(...);
   *** isAddToBackStackAllowed(...);
   *** isEmpty(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** add(...);
   *** addSharedElement(...);
   *** addToBackStack(...);
   *** attach(...);
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
   *** detach(...);
   *** disallowAddToBackStack(...);
   *** hide(...);
   *** remove(...);
   *** replace(...);
   *** replace(...);
   *** replace(...);
   *** replace(...);
   *** runOnCommit(...);
   *** setAllowOptimization(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbShortTitle(...);
   *** setBreadCrumbTitle(...);
   *** setBreadCrumbTitle(...);
   *** setCustomAnimations(...);
   *** setCustomAnimations(...);
   *** setMaxLifecycle(...);
   *** setPrimaryNavigationFragment(...);
   *** setReorderingAllowed(...);
   *** setTransition(...);
   *** setTransitionStyle(...);
   *** show(...);
}

-keep class androidx.fragment.app.FragmentTransaction
-keepclassmembers class androidx.fragment.app.FragmentTransaction {
   *** commit(...);
   *** commitAllowingStateLoss(...);
   *** commitNow(...);
   *** commitNowAllowingStateLoss(...);
}

-keep class androidx.fragment.app.FragmentOnAttachListener
-keepclassmembers class androidx.fragment.app.FragmentOnAttachListener {
}

-keep class mono.androidx.fragment.app.FragmentOnAttachListenerImplementor
-keepclassmembers class mono.androidx.fragment.app.FragmentOnAttachListenerImplementor {
}

-keep class androidx.fragment.app.FragmentResultListener
-keepclassmembers class androidx.fragment.app.FragmentResultListener {
}

-keep class androidx.fragment.app.strictmode.FragmentStrictMode$Policy
-keepclassmembers class androidx.fragment.app.strictmode.FragmentStrictMode$Policy {
}

-keep class androidx.fragment.app.strictmode.FragmentStrictMode
-keepclassmembers class androidx.fragment.app.strictmode.FragmentStrictMode {
   *** getDefaultPolicy(...);
   *** setDefaultPolicy(...);
   *** onFragmentReuse(...);
   *** onFragmentTagUsage(...);
   *** onGetRetainInstanceUsage(...);
   *** onGetTargetFragmentRequestCodeUsage(...);
   *** onGetTargetFragmentUsage(...);
   *** onPolicyViolation(...);
   *** onSetRetainInstanceUsage(...);
   *** onSetTargetFragmentUsage(...);
   *** onSetUserVisibleHint(...);
   *** onWrongFragmentContainer(...);
}

-keep class androidx.fragment.app.strictmode.Violation
-keepclassmembers class androidx.fragment.app.strictmode.Violation {
   *** getFragment(...);
}

-keep class androidx.fragment.app.strictmode.Violation
-keepclassmembers class androidx.fragment.app.strictmode.Violation {
}

# ACW for Xamarin.AndroidX.Preference
-keep class androidx.preference.Preference$OnPreferenceChangeListener
-keepclassmembers class androidx.preference.Preference$OnPreferenceChangeListener {
}

-keep class mono.androidx.preference.Preference_OnPreferenceChangeListenerImplementor
-keepclassmembers class mono.androidx.preference.Preference_OnPreferenceChangeListenerImplementor {
}

-keep class androidx.preference.Preference$OnPreferenceClickListener
-keepclassmembers class androidx.preference.Preference$OnPreferenceClickListener {
}

-keep class mono.androidx.preference.Preference_OnPreferenceClickListenerImplementor
-keepclassmembers class mono.androidx.preference.Preference_OnPreferenceClickListenerImplementor {
}

-keep class androidx.preference.Preference$SummaryProvider
-keepclassmembers class androidx.preference.Preference$SummaryProvider {
}

-keep class androidx.preference.Preference
-keepclassmembers class androidx.preference.Preference {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getContext(...);
   *** isCopyingEnabled(...);
   *** setCopyingEnabled(...);
   *** getDependency(...);
   *** setDependency(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getExtras(...);
   *** getFragment(...);
   *** setFragment(...);
   *** hasKey(...);
   *** getIcon(...);
   *** setIcon(...);
   *** isIconSpaceReserved(...);
   *** setIconSpaceReserved(...);
   *** getIntent(...);
   *** setIntent(...);
   *** isShown(...);
   *** getKey(...);
   *** setKey(...);
   *** getLayoutResource(...);
   *** setLayoutResource(...);
   *** getOnPreferenceChangeListener(...);
   *** setOnPreferenceChangeListener(...);
   *** getOnPreferenceClickListener(...);
   *** setOnPreferenceClickListener(...);
   *** getOrder(...);
   *** setOrder(...);
   *** getParent(...);
   *** isPersistent(...);
   *** setPersistent(...);
   *** getPreferenceDataStore(...);
   *** setPreferenceDataStore(...);
   *** getPreferenceManager(...);
   *** isSelectable(...);
   *** setSelectable(...);
   *** getSharedPreferences(...);
   *** getShouldDisableView(...);
   *** setShouldDisableView(...);
   *** isSingleLineTitle(...);
   *** setSingleLineTitle(...);
   *** getSummary(...);
   *** setSummary(...);
   *** getSummaryProvider(...);
   *** setSummaryProvider(...);
   *** getTitle(...);
   *** setTitle(...);
   *** isVisible(...);
   *** setVisible(...);
   *** getWidgetLayoutResource(...);
   *** setWidgetLayoutResource(...);
   *** callChangeListener(...);
   *** compareTo(...);
   *** findPreferenceInHierarchy(...);
   *** getPersistedBoolean(...);
   *** getPersistedFloat(...);
   *** getPersistedInt(...);
   *** getPersistedLong(...);
   *** getPersistedString(...);
   *** getPersistedStringSet(...);
   *** notifyChanged(...);
   *** notifyDependencyChange(...);
   *** notifyHierarchyChanged(...);
   *** onAttached(...);
   *** onAttachedToHierarchy(...);
   *** onAttachedToHierarchy(...);
   *** onBindViewHolder(...);
   *** onClick(...);
   *** onDependencyChanged(...);
   *** onDetached(...);
   *** onGetDefaultValue(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onParentChanged(...);
   *** onPrepareForRemoval(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onSetInitialValue(...);
   *** onSetInitialValue(...);
   *** peekExtras(...);
   *** performClick(...);
   *** performClick(...);
   *** persistBoolean(...);
   *** persistFloat(...);
   *** persistInt(...);
   *** persistLong(...);
   *** persistString(...);
   *** persistStringSet(...);
   *** restoreHierarchyState(...);
   *** saveHierarchyState(...);
   *** setDefaultValue(...);
   *** setIcon(...);
   *** setSummary(...);
   *** setTitle(...);
   *** setViewId(...);
   *** shouldDisableDependents(...);
   *** shouldPersist(...);
}

-keep class androidx.preference.PreferenceDataStore
-keepclassmembers class androidx.preference.PreferenceDataStore {
   <init>(...);
   *** getBoolean(...);
   *** getFloat(...);
   *** getInt(...);
   *** getLong(...);
   *** getString(...);
   *** getStringSet(...);
   *** putBoolean(...);
   *** putFloat(...);
   *** putInt(...);
   *** putLong(...);
   *** putString(...);
   *** putStringSet(...);
}

-keep class androidx.preference.PreferenceDataStore
-keepclassmembers class androidx.preference.PreferenceDataStore {
}

-keep class androidx.preference.PreferenceFragmentCompat
-keepclassmembers class androidx.preference.PreferenceFragmentCompat {
   <init>(...);
   *** getCallbackFragment(...);
   *** getListView(...);
   *** getPreferenceManager(...);
   *** getPreferenceScreen(...);
   *** setPreferenceScreen(...);
   *** addPreferencesFromResource(...);
   *** findPreference(...);
   *** onBindPreferences(...);
   *** onCreateAdapter(...);
   *** onCreateLayoutManager(...);
   *** onCreatePreferences(...);
   *** onCreateRecyclerView(...);
   *** onDisplayPreferenceDialog(...);
   *** onNavigateToScreen(...);
   *** onPreferenceTreeClick(...);
   *** onUnbindPreferences(...);
   *** scrollToPreference(...);
   *** scrollToPreference(...);
   *** setDivider(...);
   *** setDividerHeight(...);
   *** setPreferencesFromResource(...);
}

-keep class androidx.preference.PreferenceFragmentCompat
-keepclassmembers class androidx.preference.PreferenceFragmentCompat {
   *** onCreatePreferences(...);
}

-keep class androidx.preference.PreferenceGroup$OnExpandButtonClickListener
-keepclassmembers class androidx.preference.PreferenceGroup$OnExpandButtonClickListener {
}

-keep class mono.androidx.preference.PreferenceGroup_OnExpandButtonClickListenerImplementor
-keepclassmembers class mono.androidx.preference.PreferenceGroup_OnExpandButtonClickListenerImplementor {
}

-keep class androidx.preference.PreferenceGroup
-keepclassmembers class androidx.preference.PreferenceGroup {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getInitialExpandedChildrenCount(...);
   *** setInitialExpandedChildrenCount(...);
   *** isAttached(...);
   *** isOnSameScreenAsChildren(...);
   *** getOnExpandButtonClickListener(...);
   *** setOnExpandButtonClickListener(...);
   *** isOrderingAsAdded(...);
   *** setOrderingAsAdded(...);
   *** getPreferenceCount(...);
   *** addItemFromInflater(...);
   *** addPreference(...);
   *** dispatchRestoreInstanceState(...);
   *** dispatchSaveInstanceState(...);
   *** findPreference(...);
   *** getPreference(...);
   *** onPrepareAddPreference(...);
   *** removeAll(...);
   *** removePreference(...);
   *** removePreferenceRecursively(...);
}

-keep class androidx.preference.PreferenceGroup
-keepclassmembers class androidx.preference.PreferenceGroup {
}

-keep class androidx.preference.PreferenceManager$OnDisplayPreferenceDialogListener
-keepclassmembers class androidx.preference.PreferenceManager$OnDisplayPreferenceDialogListener {
}

-keep class mono.androidx.preference.PreferenceManager_OnDisplayPreferenceDialogListenerImplementor
-keepclassmembers class mono.androidx.preference.PreferenceManager_OnDisplayPreferenceDialogListenerImplementor {
}

-keep class androidx.preference.PreferenceManager$OnNavigateToScreenListener
-keepclassmembers class androidx.preference.PreferenceManager$OnNavigateToScreenListener {
}

-keep class mono.androidx.preference.PreferenceManager_OnNavigateToScreenListenerImplementor
-keepclassmembers class mono.androidx.preference.PreferenceManager_OnNavigateToScreenListenerImplementor {
}

-keep class androidx.preference.PreferenceManager$OnPreferenceTreeClickListener
-keepclassmembers class androidx.preference.PreferenceManager$OnPreferenceTreeClickListener {
}

-keep class mono.androidx.preference.PreferenceManager_OnPreferenceTreeClickListenerImplementor
-keepclassmembers class mono.androidx.preference.PreferenceManager_OnPreferenceTreeClickListenerImplementor {
}

-keep class androidx.preference.PreferenceManager$PreferenceComparisonCallback
-keepclassmembers class androidx.preference.PreferenceManager$PreferenceComparisonCallback {
   <init>(...);
   *** arePreferenceContentsTheSame(...);
   *** arePreferenceItemsTheSame(...);
}

-keep class androidx.preference.PreferenceManager$PreferenceComparisonCallback
-keepclassmembers class androidx.preference.PreferenceManager$PreferenceComparisonCallback {
   *** arePreferenceContentsTheSame(...);
   *** arePreferenceItemsTheSame(...);
}

-keep class androidx.preference.PreferenceManager
-keepclassmembers class androidx.preference.PreferenceManager {
   <init>(...);
   *** getContext(...);
   *** isStorageDefault(...);
   *** isStorageDeviceProtected(...);
   *** getOnDisplayPreferenceDialogListener(...);
   *** setOnDisplayPreferenceDialogListener(...);
   *** getOnNavigateToScreenListener(...);
   *** setOnNavigateToScreenListener(...);
   *** getOnPreferenceTreeClickListener(...);
   *** setOnPreferenceTreeClickListener(...);
   *** getPreferenceDataStore(...);
   *** setPreferenceDataStore(...);
   *** getPreferenceScreen(...);
   *** getSharedPreferences(...);
   *** getSharedPreferencesMode(...);
   *** setSharedPreferencesMode(...);
   *** getSharedPreferencesName(...);
   *** setSharedPreferencesName(...);
   *** createPreferenceScreen(...);
   *** findPreference(...);
   *** getDefaultSharedPreferences(...);
   *** getPreferenceComparisonCallback(...);
   *** inflateFromResource(...);
   *** setDefaultValues(...);
   *** setDefaultValues(...);
   *** setPreferenceComparisonCallback(...);
   *** setPreferences(...);
   *** setStorageDefault(...);
   *** setStorageDeviceProtected(...);
   *** showDialog(...);
}

-keep class androidx.preference.PreferenceScreen
-keepclassmembers class androidx.preference.PreferenceScreen {
   <init>(...);
   *** setShouldUseGeneratedIds(...);
   *** shouldUseGeneratedIds(...);
}

-keep class androidx.preference.PreferenceViewHolder
-keepclassmembers class androidx.preference.PreferenceViewHolder {
   *** isDividerAllowedAbove(...);
   *** setDividerAllowedAbove(...);
   *** isDividerAllowedBelow(...);
   *** setDividerAllowedBelow(...);
   *** createInstanceForTests(...);
   *** findViewById(...);
}

# ACW for Xamarin.AndroidX.Core.SplashScreen
-keep class androidx.core.splashscreen.SplashScreen$KeepOnScreenCondition
-keepclassmembers class androidx.core.splashscreen.SplashScreen$KeepOnScreenCondition {
}

-keep class androidx.core.splashscreen.SplashScreen$OnExitAnimationListener
-keepclassmembers class androidx.core.splashscreen.SplashScreen$OnExitAnimationListener {
}

-keep class mono.androidx.core.splashscreen.SplashScreen_OnExitAnimationListenerImplementor
-keepclassmembers class mono.androidx.core.splashscreen.SplashScreen_OnExitAnimationListenerImplementor {
}

-keep class androidx.core.splashscreen.SplashScreen
-keepclassmembers class androidx.core.splashscreen.SplashScreen {
   <init>(...);
   *** installSplashScreen(...);
   *** setKeepOnScreenCondition(...);
   *** setOnExitAnimationListener(...);
}

-keep class androidx.core.splashscreen.SplashScreenViewProvider
-keepclassmembers class androidx.core.splashscreen.SplashScreenViewProvider {
   *** getIconAnimationDurationMillis(...);
   *** getIconAnimationStartMillis(...);
   *** getIconView(...);
   *** getView(...);
   *** remove(...);
}

# ACW for Xamarin.AndroidX.CustomView
-keep class androidx.customview.widget.Openable
-keepclassmembers class androidx.customview.widget.Openable {
}

# ACW for Xamarin.AndroidX.Lifecycle.Common
-keep class androidx.lifecycle.Lifecycle$State
-keepclassmembers class androidx.lifecycle.Lifecycle$State {
   *** isAtLeast(...);
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.lifecycle.Lifecycle
-keepclassmembers class androidx.lifecycle.Lifecycle {
   <init>(...);
   *** getCurrentState(...);
   *** addObserver(...);
   *** removeObserver(...);
}

-keep class androidx.lifecycle.LifecycleObserver
-keepclassmembers class androidx.lifecycle.LifecycleObserver {
}

-keep class androidx.lifecycle.LifecycleOwner
-keepclassmembers class androidx.lifecycle.LifecycleOwner {
}

-keep class androidx.lifecycle.Lifecycle
-keepclassmembers class androidx.lifecycle.Lifecycle {
   *** getCurrentState(...);
   *** addObserver(...);
   *** removeObserver(...);
}

# ACW for Xamarin.AndroidX.Core
-keep class androidx.core.util.Pair
-keepclassmembers class androidx.core.util.Pair {
   <init>(...);
   *** create(...);
}

-keep class androidx.core.internal.view.SupportMenuItem
-keepclassmembers class androidx.core.internal.view.SupportMenuItem {
}

-keep class androidx.core.graphics.Insets
-keepclassmembers class androidx.core.graphics.Insets {
   *** add(...);
   *** max(...);
   *** min(...);
   *** of(...);
   *** of(...);
   *** subtract(...);
   *** toCompatInsets(...);
   *** toPlatformInsets(...);
   *** wrap(...);
}

-keep class androidx.core.app.ActivityOptionsCompat
-keepclassmembers class androidx.core.app.ActivityOptionsCompat {
   <init>(...);
   *** getLaunchBounds(...);
   *** makeBasic(...);
   *** makeClipRevealAnimation(...);
   *** makeCustomAnimation(...);
   *** makeScaleUpAnimation(...);
   *** makeSceneTransitionAnimation(...);
   *** makeSceneTransitionAnimation(...);
   *** makeTaskLaunchBehind(...);
   *** makeThumbnailScaleUpAnimation(...);
   *** requestUsageTimeReport(...);
   *** setLaunchBounds(...);
   *** toBundle(...);
   *** update(...);
}

-keep class androidx.core.app.ComponentActivity$ExtraData
-keepclassmembers class androidx.core.app.ComponentActivity$ExtraData {
   <init>(...);
}

-keep class androidx.core.app.ComponentActivity
-keepclassmembers class androidx.core.app.ComponentActivity {
   <init>(...);
   *** getLifecycle(...);
   *** getExtraData(...);
   *** putExtraData(...);
   *** superDispatchKeyEvent(...);
}

-keep class androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener
-keepclassmembers class androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener {
}

-keep class androidx.core.app.SharedElementCallback
-keepclassmembers class androidx.core.app.SharedElementCallback {
   <init>(...);
   *** onCaptureSharedElementSnapshot(...);
   *** onCreateSnapshotView(...);
   *** onMapSharedElements(...);
   *** onRejectSharedElements(...);
   *** onSharedElementEnd(...);
   *** onSharedElementStart(...);
   *** onSharedElementsArrived(...);
}

-keep class androidx.core.app.SharedElementCallback
-keepclassmembers class androidx.core.app.SharedElementCallback {
}

-keep class androidx.core.app.TaskStackBuilder
-keepclassmembers class androidx.core.app.TaskStackBuilder {
   *** getIntentCount(...);
   *** addNextIntent(...);
   *** addNextIntentWithParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** addParentStack(...);
   *** create(...);
   *** editIntentAt(...);
   *** from(...);
   *** getIntent(...);
   *** getIntents(...);
   *** getPendingIntent(...);
   *** getPendingIntent(...);
   *** iterator(...);
   *** startActivities(...);
   *** startActivities(...);
}

-keep class androidx.core.view.AccessibilityDelegateCompat
-keepclassmembers class androidx.core.view.AccessibilityDelegateCompat {
   <init>(...);
   <init>(...);
   *** dispatchPopulateAccessibilityEvent(...);
   *** getAccessibilityNodeProvider(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onPopulateAccessibilityEvent(...);
   *** onRequestSendAccessibilityEvent(...);
   *** performAccessibilityAction(...);
   *** sendAccessibilityEvent(...);
   *** sendAccessibilityEventUnchecked(...);
}

-keep class androidx.core.view.ActionProvider$SubUiVisibilityListener
-keepclassmembers class androidx.core.view.ActionProvider$SubUiVisibilityListener {
}

-keep class mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor
-keepclassmembers class mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor {
}

-keep class androidx.core.view.ActionProvider$VisibilityListener
-keepclassmembers class androidx.core.view.ActionProvider$VisibilityListener {
}

-keep class mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor
-keepclassmembers class mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor {
}

-keep class androidx.core.view.ActionProvider
-keepclassmembers class androidx.core.view.ActionProvider {
   <init>(...);
   *** getContext(...);
   *** hasSubMenu(...);
   *** isVisible(...);
   *** onCreateActionView(...);
   *** onCreateActionView(...);
   *** onPerformDefaultAction(...);
   *** onPrepareSubMenu(...);
   *** overridesItemVisibility(...);
   *** refreshVisibility(...);
   *** reset(...);
   *** setSubUiVisibilityListener(...);
   *** setVisibilityListener(...);
   *** subUiVisibilityChanged(...);
}

-keep class androidx.core.view.ActionProvider
-keepclassmembers class androidx.core.view.ActionProvider {
   *** onCreateActionView(...);
}

-keep class androidx.core.view.DisplayCutoutCompat
-keepclassmembers class androidx.core.view.DisplayCutoutCompat {
   <init>(...);
   <init>(...);
   *** getBoundingRects(...);
   *** getSafeInsetBottom(...);
   *** getSafeInsetLeft(...);
   *** getSafeInsetRight(...);
   *** getSafeInsetTop(...);
   *** getWaterfallInsets(...);
}

-keep class androidx.core.view.MenuProvider
-keepclassmembers class androidx.core.view.MenuProvider {
}

-keep class androidx.core.view.ViewPropertyAnimatorListener
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorListener {
}

-keep class androidx.core.view.ViewPropertyAnimatorUpdateListener
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorUpdateListener {
}

-keep class androidx.core.view.ViewPropertyAnimatorCompat
-keepclassmembers class androidx.core.view.ViewPropertyAnimatorCompat {
   *** getDuration(...);
   *** getInterpolator(...);
   *** getStartDelay(...);
   *** alpha(...);
   *** alphaBy(...);
   *** cancel(...);
   *** rotation(...);
   *** rotationBy(...);
   *** rotationX(...);
   *** rotationXBy(...);
   *** rotationY(...);
   *** rotationYBy(...);
   *** scaleX(...);
   *** scaleXBy(...);
   *** scaleY(...);
   *** scaleYBy(...);
   *** setDuration(...);
   *** setInterpolator(...);
   *** setListener(...);
   *** setStartDelay(...);
   *** setUpdateListener(...);
   *** start(...);
   *** translationX(...);
   *** translationXBy(...);
   *** translationY(...);
   *** translationYBy(...);
   *** translationZ(...);
   *** translationZBy(...);
   *** withEndAction(...);
   *** withLayer(...);
   *** withStartAction(...);
   *** x(...);
   *** xBy(...);
   *** y(...);
   *** yBy(...);
   *** z(...);
   *** zBy(...);
}

-keep class androidx.core.view.WindowInsetsCompat
-keepclassmembers class androidx.core.view.WindowInsetsCompat {
   <init>(...);
   *** getDisplayCutout(...);
   *** hasInsets(...);
   *** hasStableInsets(...);
   *** hasSystemWindowInsets(...);
   *** isConsumed(...);
   *** isRound(...);
   *** getMandatorySystemGestureInsets(...);
   *** getStableInsetBottom(...);
   *** getStableInsetLeft(...);
   *** getStableInsetRight(...);
   *** getStableInsetTop(...);
   *** getStableInsets(...);
   *** getSystemGestureInsets(...);
   *** getSystemWindowInsetBottom(...);
   *** getSystemWindowInsetLeft(...);
   *** getSystemWindowInsetRight(...);
   *** getSystemWindowInsetTop(...);
   *** getSystemWindowInsets(...);
   *** getTappableElementInsets(...);
   *** consumeDisplayCutout(...);
   *** consumeStableInsets(...);
   *** consumeSystemWindowInsets(...);
   *** getInsets(...);
   *** getInsetsIgnoringVisibility(...);
   *** inset(...);
   *** inset(...);
   *** isVisible(...);
   *** replaceSystemWindowInsets(...);
   *** replaceSystemWindowInsets(...);
   *** toWindowInsets(...);
   *** toWindowInsetsCompat(...);
   *** toWindowInsetsCompat(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getId(...);
   *** getLabel(...);
   *** createReplacementAction(...);
   *** perform(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat {
   *** getColumnCount(...);
   *** isHierarchical(...);
   *** getRowCount(...);
   *** getSelectionMode(...);
   *** obtain(...);
   *** obtain(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat {
   *** getColumnIndex(...);
   *** getColumnSpan(...);
   *** isHeading(...);
   *** isSelected(...);
   *** getRowIndex(...);
   *** getRowSpan(...);
   *** obtain(...);
   *** obtain(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat {
   *** getCurrent(...);
   *** getMax(...);
   *** getMin(...);
   *** getType(...);
   *** obtain(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat {
   <init>(...);
   *** getRegionCount(...);
   *** getRegionAt(...);
   *** getTargetForRegion(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeInfoCompat {
   <init>(...);
   *** isAccessibilityFocused(...);
   *** setAccessibilityFocused(...);
   *** getActionList(...);
   *** getActions(...);
   *** isCheckable(...);
   *** setCheckable(...);
   *** isChecked(...);
   *** setChecked(...);
   *** getChildCount(...);
   *** getClassName(...);
   *** setClassName(...);
   *** isClickable(...);
   *** setClickable(...);
   *** getCollectionInfo(...);
   *** getCollectionItemInfo(...);
   *** getContentDescription(...);
   *** setContentDescription(...);
   *** isContentInvalid(...);
   *** setContentInvalid(...);
   *** isContextClickable(...);
   *** setContextClickable(...);
   *** isDismissable(...);
   *** setDismissable(...);
   *** getDrawingOrder(...);
   *** setDrawingOrder(...);
   *** isEditable(...);
   *** setEditable(...);
   *** isEnabled(...);
   *** setEnabled(...);
   *** getError(...);
   *** setError(...);
   *** getExtras(...);
   *** isFocusable(...);
   *** setFocusable(...);
   *** isFocused(...);
   *** setFocused(...);
   *** isHeading(...);
   *** setHeading(...);
   *** getHintText(...);
   *** setHintText(...);
   *** isImportantForAccessibility(...);
   *** setImportantForAccessibility(...);
   *** getInfo(...);
   *** getInputType(...);
   *** setInputType(...);
   *** getLabelFor(...);
   *** getLabeledBy(...);
   *** getLiveRegion(...);
   *** setLiveRegion(...);
   *** isLongClickable(...);
   *** setLongClickable(...);
   *** getMaxTextLength(...);
   *** setMaxTextLength(...);
   *** getMovementGranularities(...);
   *** setMovementGranularities(...);
   *** isMultiLine(...);
   *** setMultiLine(...);
   *** getPackageName(...);
   *** setPackageName(...);
   *** getPaneTitle(...);
   *** setPaneTitle(...);
   *** getParent(...);
   *** isPassword(...);
   *** setPassword(...);
   *** getRangeInfo(...);
   *** setRangeInfo(...);
   *** getRoleDescription(...);
   *** setRoleDescription(...);
   *** isScreenReaderFocusable(...);
   *** setScreenReaderFocusable(...);
   *** isScrollable(...);
   *** setScrollable(...);
   *** isSelected(...);
   *** setSelected(...);
   *** isShowingHintText(...);
   *** setShowingHintText(...);
   *** getStateDescription(...);
   *** setStateDescription(...);
   *** getText(...);
   *** setText(...);
   *** isTextEntryKey(...);
   *** setTextEntryKey(...);
   *** getTextSelectionEnd(...);
   *** getTextSelectionStart(...);
   *** getTooltipText(...);
   *** setTooltipText(...);
   *** getTouchDelegateInfo(...);
   *** setTouchDelegateInfo(...);
   *** getTraversalAfter(...);
   *** getTraversalBefore(...);
   *** getViewIdResourceName(...);
   *** setViewIdResourceName(...);
   *** isVisibleToUser(...);
   *** setVisibleToUser(...);
   *** getWindow(...);
   *** getWindowId(...);
   *** addAction(...);
   *** addAction(...);
   *** addChild(...);
   *** addChild(...);
   *** addSpansToExtras(...);
   *** canOpenPopup(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findAccessibilityNodeInfosByViewId(...);
   *** findFocus(...);
   *** focusSearch(...);
   *** getBoundsInParent(...);
   *** getBoundsInScreen(...);
   *** getChild(...);
   *** getClickableSpans(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** obtain(...);
   *** performAction(...);
   *** performAction(...);
   *** recycle(...);
   *** refresh(...);
   *** removeAction(...);
   *** removeChild(...);
   *** removeChild(...);
   *** setBoundsInParent(...);
   *** setBoundsInScreen(...);
   *** setCanOpenPopup(...);
   *** setCollectionInfo(...);
   *** setCollectionItemInfo(...);
   *** setLabelFor(...);
   *** setLabelFor(...);
   *** setLabeledBy(...);
   *** setLabeledBy(...);
   *** setParent(...);
   *** setParent(...);
   *** setSource(...);
   *** setSource(...);
   *** setTextSelection(...);
   *** setTraversalAfter(...);
   *** setTraversalAfter(...);
   *** setTraversalBefore(...);
   *** setTraversalBefore(...);
   *** unwrap(...);
   *** wrap(...);
}

-keep class androidx.core.view.accessibility.AccessibilityNodeProviderCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityNodeProviderCompat {
   <init>(...);
   <init>(...);
   *** getProvider(...);
   *** addExtraDataToAccessibilityNodeInfo(...);
   *** createAccessibilityNodeInfo(...);
   *** findAccessibilityNodeInfosByText(...);
   *** findFocus(...);
   *** performAction(...);
}

-keep class androidx.core.view.accessibility.AccessibilityWindowInfoCompat
-keepclassmembers class androidx.core.view.accessibility.AccessibilityWindowInfoCompat {
   *** getAnchor(...);
   *** getChildCount(...);
   *** getId(...);
   *** isAccessibilityFocused(...);
   *** isActive(...);
   *** isFocused(...);
   *** getLayer(...);
   *** getParent(...);
   *** getRoot(...);
   *** getTitle(...);
   *** getType(...);
   *** getBoundsInScreen(...);
   *** getChild(...);
   *** obtain(...);
   *** obtain(...);
   *** recycle(...);
}

-keep class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments
-keepclassmembers class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments {
   <init>(...);
   *** setBundle(...);
}

-keep class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments
-keepclassmembers class androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments {
}

-keep class androidx.core.view.accessibility.AccessibilityViewCommand
-keepclassmembers class androidx.core.view.accessibility.AccessibilityViewCommand {
}

# ACW for Xamarin.AndroidX.CursorAdapter
-keep class androidx.cursoradapter.widget.CursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.CursorAdapter {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCount(...);
   *** getCursor(...);
   *** getFilter(...);
   *** getFilterQueryProvider(...);
   *** setFilterQueryProvider(...);
   *** bindView(...);
   *** changeCursor(...);
   *** convertToString(...);
   *** getItem(...);
   *** getItemId(...);
   *** getView(...);
   *** init(...);
   *** newDropDownView(...);
   *** newView(...);
   *** onContentChanged(...);
   *** runQueryOnBackgroundThread(...);
   *** swapCursor(...);
}

-keep class androidx.cursoradapter.widget.CursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.CursorAdapter {
   *** bindView(...);
   *** newView(...);
}

-keep class androidx.cursoradapter.widget.CursorFilter
-keepclassmembers class androidx.cursoradapter.widget.CursorFilter {
   *** performFiltering(...);
   *** publishResults(...);
}

-keep class androidx.cursoradapter.widget.ResourceCursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.ResourceCursorAdapter {
   <init>(...);
   <init>(...);
   <init>(...);
   *** newView(...);
   *** setDropDownViewResource(...);
   *** setViewResource(...);
}

-keep class androidx.cursoradapter.widget.ResourceCursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.ResourceCursorAdapter {
   *** bindView(...);
}

-keep class androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter
-keepclassmembers class androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter {
}

-keep class androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder
-keepclassmembers class androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder {
}

-keep class androidx.cursoradapter.widget.SimpleCursorAdapter
-keepclassmembers class androidx.cursoradapter.widget.SimpleCursorAdapter {
   <init>(...);
   <init>(...);
   *** getCursorToStringConverter(...);
   *** setCursorToStringConverter(...);
   *** getStringConversionColumn(...);
   *** setStringConversionColumn(...);
   *** getViewBinder(...);
   *** setViewBinder(...);
   *** bindView(...);
   *** changeCursorAndColumns(...);
   *** setViewImage(...);
   *** setViewText(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.ViewModel
-keep class androidx.lifecycle.ViewModelStoreOwner
-keepclassmembers class androidx.lifecycle.ViewModelStoreOwner {
}

-keep class androidx.lifecycle.ViewModelProvider$Factory
-keepclassmembers class androidx.lifecycle.ViewModelProvider$Factory {
}

-keep class androidx.lifecycle.ViewModelProvider
-keepclassmembers class androidx.lifecycle.ViewModelProvider {
   <init>(...);
   <init>(...);
   <init>(...);
   *** get(...);
   *** get(...);
}

-keep class androidx.lifecycle.ViewModelStore
-keepclassmembers class androidx.lifecycle.ViewModelStore {
   <init>(...);
   *** clear(...);
}

# ACW for Xamarin.AndroidX.SavedState
-keep class androidx.savedstate.SavedStateRegistry$SavedStateProvider
-keepclassmembers class androidx.savedstate.SavedStateRegistry$SavedStateProvider {
}

-keep class androidx.savedstate.SavedStateRegistry
-keepclassmembers class androidx.savedstate.SavedStateRegistry {
   *** isRestored(...);
   *** consumeRestoredStateForKey(...);
   *** registerSavedStateProvider(...);
   *** runOnNextRecreation(...);
   *** unregisterSavedStateProvider(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.ViewModelSavedState
-keep class androidx.lifecycle.SavedStateHandle
-keepclassmembers class androidx.lifecycle.SavedStateHandle {
   <init>(...);
   <init>(...);
   *** clearSavedStateProvider(...);
   *** contains(...);
   *** get(...);
   *** getLiveData(...);
   *** getLiveData(...);
   *** keys(...);
   *** remove(...);
   *** set(...);
   *** setSavedStateProvider(...);
}

# ACW for Xamarin.AndroidX.Transition
-keep class androidx.transition.FragmentTransitionSupport
-keepclassmembers class androidx.transition.FragmentTransitionSupport {
   *** addTargets(...);
   *** scheduleRemoveTargets(...);
   *** swapSharedElementTargets(...);
   *** scheduleHideFragmentView(...);
   *** setSharedElementTargets(...);
   *** replaceTargets(...);
   <init>(...);
   *** addTarget(...);
   *** beginDelayedTransition(...);
   *** canHandle(...);
   *** cloneTransition(...);
   *** mergeTransitionsInSequence(...);
   *** mergeTransitionsTogether(...);
   *** removeTarget(...);
   *** setEpicenter(...);
   *** setEpicenter(...);
   *** wrapTransitionInSet(...);
}

-keep class androidx.transition.ArcMotion
-keepclassmembers class androidx.transition.ArcMotion {
   <init>(...);
   <init>(...);
   *** getMaximumAngle(...);
   *** setMaximumAngle(...);
   *** getMinimumHorizontalAngle(...);
   *** setMinimumHorizontalAngle(...);
   *** getMinimumVerticalAngle(...);
   *** setMinimumVerticalAngle(...);
   *** getPath(...);
}

-keep class androidx.transition.AutoTransition
-keepclassmembers class androidx.transition.AutoTransition {
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.ChangeBounds
-keepclassmembers class androidx.transition.ChangeBounds {
   <init>(...);
   <init>(...);
   *** getResizeClip(...);
   *** setResizeClip(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeClipBounds
-keepclassmembers class androidx.transition.ChangeClipBounds {
   <init>(...);
   <init>(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeImageTransform
-keepclassmembers class androidx.transition.ChangeImageTransform {
   <init>(...);
   <init>(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeScroll
-keepclassmembers class androidx.transition.ChangeScroll {
   <init>(...);
   <init>(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.ChangeTransform
-keepclassmembers class androidx.transition.ChangeTransform {
   <init>(...);
   <init>(...);
   *** getReparent(...);
   *** setReparent(...);
   *** getReparentWithOverlay(...);
   *** setReparentWithOverlay(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.CircularPropagation
-keepclassmembers class androidx.transition.CircularPropagation {
   <init>(...);
   *** getStartDelay(...);
   *** setPropagationSpeed(...);
}

-keep class androidx.transition.Explode
-keepclassmembers class androidx.transition.Explode {
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.Fade
-keepclassmembers class androidx.transition.Fade {
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.PathMotion
-keepclassmembers class androidx.transition.PathMotion {
   <init>(...);
   <init>(...);
   *** getPath(...);
}

-keep class androidx.transition.PathMotion
-keepclassmembers class androidx.transition.PathMotion {
   *** getPath(...);
}

-keep class androidx.transition.PatternPathMotion
-keepclassmembers class androidx.transition.PatternPathMotion {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getPatternPath(...);
   *** setPatternPath(...);
   *** getPath(...);
}

-keep class androidx.transition.Scene
-keepclassmembers class androidx.transition.Scene {
   <init>(...);
   <init>(...);
   *** getSceneRoot(...);
   *** enter(...);
   *** exit(...);
   *** getCurrentScene(...);
   *** getSceneForLayout(...);
   *** setEnterAction(...);
   *** setExitAction(...);
}

-keep class androidx.transition.SidePropagation
-keepclassmembers class androidx.transition.SidePropagation {
   <init>(...);
   *** getStartDelay(...);
   *** setPropagationSpeed(...);
   *** setSide(...);
}

-keep class androidx.transition.Slide$GravityFlag
-keepclassmembers class androidx.transition.Slide$GravityFlag {
}

-keep class androidx.transition.Slide
-keepclassmembers class androidx.transition.Slide {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getSlideEdge(...);
   *** setSlideEdge(...);
}

-keep class androidx.transition.Transition$EpicenterCallback
-keepclassmembers class androidx.transition.Transition$EpicenterCallback {
   <init>(...);
   *** onGetEpicenter(...);
}

-keep class androidx.transition.Transition$EpicenterCallback
-keepclassmembers class androidx.transition.Transition$EpicenterCallback {
   *** onGetEpicenter(...);
}

-keep class androidx.transition.Transition$MatchOrder
-keepclassmembers class androidx.transition.Transition$MatchOrder {
}

-keep class androidx.transition.Transition$TransitionListener
-keepclassmembers class androidx.transition.Transition$TransitionListener {
}

-keep class mono.androidx.transition.Transition_TransitionListenerImplementor
-keepclassmembers class mono.androidx.transition.Transition_TransitionListenerImplementor {
}

-keep class androidx.transition.Transition
-keepclassmembers class androidx.transition.Transition {
   <init>(...);
   <init>(...);
   *** getDuration(...);
   *** getEpicenter(...);
   *** getInterpolator(...);
   *** getName(...);
   *** getPathMotion(...);
   *** setPathMotion(...);
   *** getPropagation(...);
   *** setPropagation(...);
   *** getStartDelay(...);
   *** getTargetIds(...);
   *** getTargetNames(...);
   *** getTargetTypes(...);
   *** getTargets(...);
   *** addListener(...);
   *** addTarget(...);
   *** addTarget(...);
   *** addTarget(...);
   *** addTarget(...);
   *** animate(...);
   *** cancel(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
   *** clone(...);
   *** createAnimator(...);
   *** end(...);
   *** excludeChildren(...);
   *** excludeChildren(...);
   *** excludeChildren(...);
   *** excludeTarget(...);
   *** excludeTarget(...);
   *** excludeTarget(...);
   *** excludeTarget(...);
   *** getEpicenterCallback(...);
   *** getTransitionProperties(...);
   *** getTransitionValues(...);
   *** isTransitionRequired(...);
   *** pause(...);
   *** removeListener(...);
   *** removeTarget(...);
   *** removeTarget(...);
   *** removeTarget(...);
   *** removeTarget(...);
   *** resume(...);
   *** runAnimators(...);
   *** setDuration(...);
   *** setEpicenterCallback(...);
   *** setInterpolator(...);
   *** setMatchOrder(...);
   *** setStartDelay(...);
   *** start(...);
}

-keep class androidx.transition.Transition
-keepclassmembers class androidx.transition.Transition {
   *** captureEndValues(...);
   *** captureStartValues(...);
}

-keep class androidx.transition.TransitionInflater
-keepclassmembers class androidx.transition.TransitionInflater {
   *** from(...);
   *** inflateTransition(...);
   *** inflateTransitionManager(...);
}

-keep class androidx.transition.TransitionListenerAdapter
-keepclassmembers class androidx.transition.TransitionListenerAdapter {
   <init>(...);
   *** onTransitionCancel(...);
   *** onTransitionEnd(...);
   *** onTransitionPause(...);
   *** onTransitionResume(...);
   *** onTransitionStart(...);
}

-keep class androidx.transition.TransitionManager
-keepclassmembers class androidx.transition.TransitionManager {
   <init>(...);
   *** beginDelayedTransition(...);
   *** beginDelayedTransition(...);
   *** endTransitions(...);
   *** go(...);
   *** go(...);
   *** setTransition(...);
   *** setTransition(...);
   *** transitionTo(...);
}

-keep class androidx.transition.TransitionPropagation
-keepclassmembers class androidx.transition.TransitionPropagation {
   <init>(...);
   *** captureValues(...);
   *** getPropagationProperties(...);
   *** getStartDelay(...);
}

-keep class androidx.transition.TransitionPropagation
-keepclassmembers class androidx.transition.TransitionPropagation {
   *** captureValues(...);
   *** getPropagationProperties(...);
   *** getStartDelay(...);
}

-keep class androidx.transition.TransitionSet
-keepclassmembers class androidx.transition.TransitionSet {
   <init>(...);
   <init>(...);
   *** getOrdering(...);
   *** getTransitionCount(...);
   *** addTransition(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
   *** getTransitionAt(...);
   *** removeTransition(...);
   *** setOrdering(...);
}

-keep class androidx.transition.TransitionValues
-keepclassmembers class androidx.transition.TransitionValues {
   <init>(...);
   <init>(...);
}

-keep class androidx.transition.Visibility$Mode
-keepclassmembers class androidx.transition.Visibility$Mode {
}

-keep class androidx.transition.Visibility
-keepclassmembers class androidx.transition.Visibility {
   <init>(...);
   <init>(...);
   *** getMode(...);
   *** setMode(...);
   *** captureEndValues(...);
   *** captureStartValues(...);
   *** isVisible(...);
   *** onAppear(...);
   *** onAppear(...);
   *** onDisappear(...);
   *** onDisappear(...);
}

-keep class androidx.transition.Visibility
-keepclassmembers class androidx.transition.Visibility {
}

-keep class androidx.transition.VisibilityPropagation
-keepclassmembers class androidx.transition.VisibilityPropagation {
   <init>(...);
   *** captureValues(...);
   *** getPropagationProperties(...);
   *** getViewVisibility(...);
   *** getViewX(...);
   *** getViewY(...);
}

-keep class androidx.transition.VisibilityPropagation
-keepclassmembers class androidx.transition.VisibilityPropagation {
   *** getStartDelay(...);
}

# ACW for Xamarin.AndroidX.CoordinatorLayout
-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$AttachedBehavior {
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
   <init>(...);
   <init>(...);
   *** blocksInteractionBelow(...);
   *** getInsetDodgeRect(...);
   *** getScrimColor(...);
   *** getScrimOpacity(...);
   *** getTag(...);
   *** layoutDependsOn(...);
   *** onApplyWindowInsets(...);
   *** onAttachedToLayoutParams(...);
   *** onDependentViewChanged(...);
   *** onDependentViewRemoved(...);
   *** onDetachedFromLayoutParams(...);
   *** onInterceptTouchEvent(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedFling(...);
   *** onNestedPreFling(...);
   *** onNestedPreScroll(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onNestedScrollAccepted(...);
   *** onRequestChildRectangleOnScreen(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onStartNestedScroll(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onStopNestedScroll(...);
   *** onTouchEvent(...);
   *** setTag(...);
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$DefaultBehavior
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$DefaultBehavior {
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$DispatchChangeEvent
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$DispatchChangeEvent {
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAnchorId(...);
   *** setAnchorId(...);
   *** getBehavior(...);
   *** setBehavior(...);
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState {
   <init>(...);
   <init>(...);
}

-keep class androidx.coordinatorlayout.widget.CoordinatorLayout
-keepclassmembers class androidx.coordinatorlayout.widget.CoordinatorLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getLastWindowInsets(...);
   *** getStatusBarBackground(...);
   *** setStatusBarBackground(...);
   *** dispatchDependentViewsChanged(...);
   *** doViewsOverlap(...);
   *** getDependencies(...);
   *** getDependents(...);
   *** isPointInChildBounds(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onLayoutChild(...);
   *** onMeasureChild(...);
   *** onNestedPreScroll(...);
   *** onNestedScroll(...);
   *** onNestedScroll(...);
   *** onNestedScrollAccepted(...);
   *** onStartNestedScroll(...);
   *** onStopNestedScroll(...);
   *** setStatusBarBackgroundColor(...);
   *** setStatusBarBackgroundResource(...);
}

-keep class androidx.coordinatorlayout.widget.DirectedAcyclicGraph
-keepclassmembers class androidx.coordinatorlayout.widget.DirectedAcyclicGraph {
   <init>(...);
   *** getSortedList(...);
   *** addEdge(...);
   *** addNode(...);
   *** clear(...);
   *** contains(...);
   *** getIncomingEdges(...);
   *** getOutgoingEdges(...);
   *** hasOutgoingEdges(...);
}

-keep class androidx.coordinatorlayout.widget.ViewGroupUtils
-keepclassmembers class androidx.coordinatorlayout.widget.ViewGroupUtils {
   *** getDescendantRect(...);
}

# ACW for Xamarin.AndroidX.Collection
-keep class androidx.collection.ArrayMap
-keepclassmembers class androidx.collection.ArrayMap {
   <init>(...);
   <init>(...);
   <init>(...);
   *** containsAll(...);
   *** entrySet(...);
   *** keySet(...);
   *** putAll(...);
   *** removeAll(...);
   *** retainAll(...);
   *** values(...);
}

-keep class androidx.collection.ArraySet
-keepclassmembers class androidx.collection.ArraySet {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** add(...);
   *** addAll(...);
   *** addAll(...);
   *** clear(...);
   *** contains(...);
   *** containsAll(...);
   *** ensureCapacity(...);
   *** indexOf(...);
   *** iterator(...);
   *** remove(...);
   *** removeAll(...);
   *** removeAll(...);
   *** removeAt(...);
   *** retainAll(...);
   *** size(...);
   *** toArray(...);
   *** toArray(...);
   *** valueAt(...);
}

-keep class androidx.collection.CircularArray
-keepclassmembers class androidx.collection.CircularArray {
   <init>(...);
   <init>(...);
   *** getFirst(...);
   *** isEmpty(...);
   *** getLast(...);
   *** addFirst(...);
   *** addLast(...);
   *** clear(...);
   *** get(...);
   *** popFirst(...);
   *** popLast(...);
   *** removeFromEnd(...);
   *** removeFromStart(...);
   *** size(...);
}

-keep class androidx.collection.CircularIntArray
-keepclassmembers class androidx.collection.CircularIntArray {
   <init>(...);
   <init>(...);
   *** getFirst(...);
   *** isEmpty(...);
   *** getLast(...);
   *** addFirst(...);
   *** addLast(...);
   *** clear(...);
   *** get(...);
   *** popFirst(...);
   *** popLast(...);
   *** removeFromEnd(...);
   *** removeFromStart(...);
   *** size(...);
}

-keep class androidx.collection.LongSparseArray
-keepclassmembers class androidx.collection.LongSparseArray {
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** append(...);
   *** clear(...);
   *** clone(...);
   *** containsKey(...);
   *** containsValue(...);
   *** delete(...);
   *** get(...);
   *** get(...);
   *** indexOfKey(...);
   *** indexOfValue(...);
   *** keyAt(...);
   *** put(...);
   *** putAll(...);
   *** putIfAbsent(...);
   *** remove(...);
   *** remove(...);
   *** removeAt(...);
   *** replace(...);
   *** replace(...);
   *** setValueAt(...);
   *** size(...);
   *** valueAt(...);
}

-keep class androidx.collection.LruCache
-keepclassmembers class androidx.collection.LruCache {
   <init>(...);
   *** create(...);
   *** createCount(...);
   *** entryRemoved(...);
   *** evictAll(...);
   *** evictionCount(...);
   *** get(...);
   *** hitCount(...);
   *** maxSize(...);
   *** missCount(...);
   *** put(...);
   *** putCount(...);
   *** remove(...);
   *** resize(...);
   *** size(...);
   *** sizeOf(...);
   *** snapshot(...);
   *** toString(...);
   *** trimToSize(...);
}

-keep class androidx.collection.SimpleArrayMap
-keepclassmembers class androidx.collection.SimpleArrayMap {
   <init>(...);
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** clear(...);
   *** containsKey(...);
   *** containsValue(...);
   *** ensureCapacity(...);
   *** get(...);
   *** getOrDefault(...);
   *** indexOfKey(...);
   *** keyAt(...);
   *** put(...);
   *** putAll(...);
   *** putIfAbsent(...);
   *** remove(...);
   *** remove(...);
   *** removeAt(...);
   *** replace(...);
   *** replace(...);
   *** setValueAt(...);
   *** size(...);
   *** valueAt(...);
}

-keep class androidx.collection.SparseArrayCompat
-keepclassmembers class androidx.collection.SparseArrayCompat {
   <init>(...);
   <init>(...);
   *** isEmpty(...);
   *** append(...);
   *** clear(...);
   *** clone(...);
   *** containsKey(...);
   *** containsValue(...);
   *** delete(...);
   *** get(...);
   *** get(...);
   *** indexOfKey(...);
   *** indexOfValue(...);
   *** keyAt(...);
   *** put(...);
   *** putAll(...);
   *** putIfAbsent(...);
   *** remove(...);
   *** remove(...);
   *** removeAt(...);
   *** removeAtRange(...);
   *** replace(...);
   *** replace(...);
   *** setValueAt(...);
   *** size(...);
   *** valueAt(...);
}

# ACW for Xamarin.AndroidX.AppCompat.AppCompatResources
-keep class androidx.appcompat.widget.DrawableUtils
-keepclassmembers class androidx.appcompat.widget.DrawableUtils {
   *** canSafelyMutateDrawable(...);
   *** getOpticalBounds(...);
   *** parseTintMode(...);
}

-keep class androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate
-keepclassmembers class androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate {
   *** createFromXmlInner(...);
}

-keep class androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks
-keepclassmembers class androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks {
}

-keep class androidx.appcompat.widget.ResourceManagerInternal
-keepclassmembers class androidx.appcompat.widget.ResourceManagerInternal {
   <init>(...);
   *** get(...);
   *** getDrawable(...);
   *** getPorterDuffColorFilter(...);
   *** onConfigurationChanged(...);
   *** setHooks(...);
}

-keep class androidx.appcompat.widget.TintContextWrapper
-keepclassmembers class androidx.appcompat.widget.TintContextWrapper {
   *** wrap(...);
}

-keep class androidx.appcompat.widget.TintInfo
-keepclassmembers class androidx.appcompat.widget.TintInfo {
   <init>(...);
}

-keep class androidx.appcompat.widget.VectorEnabledTintResources
-keepclassmembers class androidx.appcompat.widget.VectorEnabledTintResources {
   <init>(...);
   *** isCompatVectorFromResourcesEnabled(...);
   *** setCompatVectorFromResourcesEnabled(...);
   *** getConfiguration(...);
   *** getDisplayMetrics(...);
   *** getAnimation(...);
   *** getBoolean(...);
   *** getColor(...);
   *** getColorStateList(...);
   *** getDimension(...);
   *** getDimensionPixelOffset(...);
   *** getDimensionPixelSize(...);
   *** getDrawable(...);
   *** getDrawable(...);
   *** getDrawableForDensity(...);
   *** getDrawableForDensity(...);
   *** getFraction(...);
   *** getIdentifier(...);
   *** getIntArray(...);
   *** getInteger(...);
   *** getLayout(...);
   *** getMovie(...);
   *** getQuantityString(...);
   *** getQuantityString(...);
   *** getQuantityText(...);
   *** getResourceEntryName(...);
   *** getResourceName(...);
   *** getResourcePackageName(...);
   *** getResourceTypeName(...);
   *** getString(...);
   *** getString(...);
   *** getStringArray(...);
   *** getText(...);
   *** getText(...);
   *** getTextArray(...);
   *** getValue(...);
   *** getValue(...);
   *** getValueForDensity(...);
   *** getXml(...);
   *** obtainAttributes(...);
   *** obtainTypedArray(...);
   *** openRawResource(...);
   *** openRawResource(...);
   *** openRawResourceFd(...);
   *** parseBundleExtra(...);
   *** parseBundleExtras(...);
   *** shouldBeUsed(...);
   *** updateConfiguration(...);
}

-keep class androidx.appcompat.resources.Compatibility$Api15Impl
-keepclassmembers class androidx.appcompat.resources.Compatibility$Api15Impl {
   *** getValueForDensity(...);
}

-keep class androidx.appcompat.resources.Compatibility
-keepclassmembers class androidx.appcompat.resources.Compatibility {
}

-keep class androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat
-keepclassmembers class androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat {
   <init>(...);
   *** getAlpha(...);
   *** setAlpha(...);
   *** isAutoMirrored(...);
   *** setAutoMirrored(...);
   *** getChangingConfigurations(...);
   *** getCurrent(...);
   *** getIntrinsicHeight(...);
   *** getIntrinsicWidth(...);
   *** isStateful(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getOpacity(...);
   *** addState(...);
   *** addState(...);
   *** addTransition(...);
   *** applyTheme(...);
   *** canApplyTheme(...);
   *** create(...);
   *** createFromXmlInner(...);
   *** draw(...);
   *** getHotspotBounds(...);
   *** getOutline(...);
   *** getPadding(...);
   *** inflate(...);
   *** invalidateDrawable(...);
   *** jumpToCurrentState(...);
   *** mutate(...);
   *** onLayoutDirectionChanged(...);
   *** onStateChange(...);
   *** scheduleDrawable(...);
   *** setColorFilter(...);
   *** setDither(...);
   *** setEnterFadeDuration(...);
   *** setExitFadeDuration(...);
   *** setHotspot(...);
   *** setHotspotBounds(...);
   *** setTintList(...);
   *** setTintMode(...);
   *** setVisible(...);
   *** unscheduleDrawable(...);
}

-keep class androidx.appcompat.graphics.drawable.DrawableContainer
-keepclassmembers class androidx.appcompat.graphics.drawable.DrawableContainer {
   *** getOpacity(...);
   *** draw(...);
   *** getConstantState(...);
   *** invalidateDrawable(...);
   *** scheduleDrawable(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setEnterFadeDuration(...);
   *** setExitFadeDuration(...);
   *** unscheduleDrawable(...);
}

-keep class androidx.appcompat.graphics.drawable.DrawableWrapper
-keepclassmembers class androidx.appcompat.graphics.drawable.DrawableWrapper {
   <init>(...);
   *** getOpacity(...);
   *** getWrappedDrawable(...);
   *** setWrappedDrawable(...);
   *** draw(...);
   *** invalidateDrawable(...);
   *** scheduleDrawable(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** unscheduleDrawable(...);
}

-keep class androidx.appcompat.content.res.AppCompatResources
-keepclassmembers class androidx.appcompat.content.res.AppCompatResources {
   *** getColorStateList(...);
   *** getDrawable(...);
}

# ACW for Xamarin.AndroidX.VectorDrawable.Animated
-keep class androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat {
   *** isRunning(...);
   *** getOpacity(...);
   *** clearAnimationCallbacks(...);
   *** clearAnimationCallbacks(...);
   *** create(...);
   *** createFromXmlInner(...);
   *** draw(...);
   *** registerAnimationCallback(...);
   *** registerAnimationCallback(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** start(...);
   *** stop(...);
   *** unregisterAnimationCallback(...);
   *** unregisterAnimationCallback(...);
}

-keep class androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat {
   *** loadInterpolator(...);
}

-keep class androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat {
   *** loadAnimator(...);
   *** loadAnimator(...);
   *** loadAnimator(...);
}

-keep class androidx.vectordrawable.graphics.drawable.ArgbEvaluator
-keepclassmembers class androidx.vectordrawable.graphics.drawable.ArgbEvaluator {
   <init>(...);
   *** getInstance(...);
   *** evaluate(...);
}

-keep class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback
-keepclassmembers class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback {
   <init>(...);
   *** onAnimationEnd(...);
   *** onAnimationStart(...);
}

-keep class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback
-keepclassmembers class androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback {
}

-keep class androidx.vectordrawable.graphics.drawable.Animatable2Compat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.Animatable2Compat {
}

-keep class androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat {
   <init>(...);
   <init>(...);
   *** getInterpolation(...);
}

# ACW for Xamarin.AndroidX.CardView
-keep class androidx.cardview.widget.CardView
-keepclassmembers class androidx.cardview.widget.CardView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCardBackgroundColor(...);
   *** setCardBackgroundColor(...);
   *** getCardElevation(...);
   *** setCardElevation(...);
   *** getContentPaddingBottom(...);
   *** getContentPaddingLeft(...);
   *** getContentPaddingRight(...);
   *** getContentPaddingTop(...);
   *** getMaxCardElevation(...);
   *** setMaxCardElevation(...);
   *** getPreventCornerOverlap(...);
   *** setPreventCornerOverlap(...);
   *** getRadius(...);
   *** setRadius(...);
   *** getUseCompatPadding(...);
   *** setUseCompatPadding(...);
   *** setCardBackgroundColor(...);
   *** setContentPadding(...);
}

-keep class androidx.cardview.widget.RoundRectDrawableWithShadow
-keepclassmembers class androidx.cardview.widget.RoundRectDrawableWithShadow {
   *** getOpacity(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
}

# ACW for Xamarin.AndroidX.ViewPager
-keep class androidx.viewpager.widget.PagerAdapter
-keepclassmembers class androidx.viewpager.widget.PagerAdapter {
   <init>(...);
   *** getCount(...);
   *** destroyItem(...);
   *** destroyItem(...);
   *** finishUpdate(...);
   *** finishUpdate(...);
   *** getItemPosition(...);
   *** getPageTitle(...);
   *** getPageWidth(...);
   *** instantiateItem(...);
   *** instantiateItem(...);
   *** isViewFromObject(...);
   *** notifyDataSetChanged(...);
   *** registerDataSetObserver(...);
   *** restoreState(...);
   *** saveState(...);
   *** setPrimaryItem(...);
   *** setPrimaryItem(...);
   *** startUpdate(...);
   *** startUpdate(...);
   *** unregisterDataSetObserver(...);
}

-keep class androidx.viewpager.widget.PagerAdapter
-keepclassmembers class androidx.viewpager.widget.PagerAdapter {
   *** getCount(...);
   *** isViewFromObject(...);
}

-keep class androidx.viewpager.widget.PagerTabStrip
-keepclassmembers class androidx.viewpager.widget.PagerTabStrip {
   <init>(...);
   <init>(...);
   *** getDrawFullUnderline(...);
   *** setDrawFullUnderline(...);
   *** getTabIndicatorColor(...);
   *** setTabIndicatorColor(...);
   *** setTabIndicatorColorResource(...);
}

-keep class androidx.viewpager.widget.PagerTitleStrip
-keepclassmembers class androidx.viewpager.widget.PagerTitleStrip {
   <init>(...);
   <init>(...);
   *** getTextSpacing(...);
   *** setTextSpacing(...);
   *** onLayout(...);
   *** setGravity(...);
   *** setNonPrimaryAlpha(...);
   *** setTextColor(...);
   *** setTextSize(...);
}

-keep class androidx.viewpager.widget.ViewPager$DecorView
-keepclassmembers class androidx.viewpager.widget.ViewPager$DecorView {
}

-keep class androidx.viewpager.widget.ViewPager$LayoutParams
-keepclassmembers class androidx.viewpager.widget.ViewPager$LayoutParams {
   <init>(...);
   <init>(...);
}

-keep class androidx.viewpager.widget.ViewPager$OnAdapterChangeListener
-keepclassmembers class androidx.viewpager.widget.ViewPager$OnAdapterChangeListener {
}

-keep class mono.androidx.viewpager.widget.ViewPager_OnAdapterChangeListenerImplementor
-keepclassmembers class mono.androidx.viewpager.widget.ViewPager_OnAdapterChangeListenerImplementor {
}

-keep class androidx.viewpager.widget.ViewPager$OnPageChangeListener
-keepclassmembers class androidx.viewpager.widget.ViewPager$OnPageChangeListener {
}

-keep class mono.androidx.viewpager.widget.ViewPager_OnPageChangeListenerImplementor
-keepclassmembers class mono.androidx.viewpager.widget.ViewPager_OnPageChangeListenerImplementor {
}

-keep class androidx.viewpager.widget.ViewPager$PageTransformer
-keepclassmembers class androidx.viewpager.widget.ViewPager$PageTransformer {
}

-keep class androidx.viewpager.widget.ViewPager$SavedState
-keepclassmembers class androidx.viewpager.widget.ViewPager$SavedState {
   <init>(...);
}

-keep class androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener
-keepclassmembers class androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener {
   <init>(...);
   *** onPageScrollStateChanged(...);
   *** onPageScrolled(...);
   *** onPageSelected(...);
}

-keep class androidx.viewpager.widget.ViewPager
-keepclassmembers class androidx.viewpager.widget.ViewPager {
   <init>(...);
   <init>(...);
   *** getAdapter(...);
   *** setAdapter(...);
   *** getCurrentItem(...);
   *** setCurrentItem(...);
   *** isFakeDragging(...);
   *** getOffscreenPageLimit(...);
   *** setOffscreenPageLimit(...);
   *** getPageMargin(...);
   *** setPageMargin(...);
   *** addFocusables(...);
   *** addOnAdapterChangeListener(...);
   *** addOnPageChangeListener(...);
   *** addTouchables(...);
   *** arrowScroll(...);
   *** beginFakeDrag(...);
   *** canScroll(...);
   *** clearOnPageChangeListeners(...);
   *** endFakeDrag(...);
   *** executeKeyEvent(...);
   *** fakeDragBy(...);
   *** onLayout(...);
   *** onPageScrolled(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** removeOnAdapterChangeListener(...);
   *** removeOnPageChangeListener(...);
   *** setCurrentItem(...);
   *** setOnPageChangeListener(...);
   *** setPageMarginDrawable(...);
   *** setPageMarginDrawable(...);
   *** setPageTransformer(...);
   *** setPageTransformer(...);
}

# ACW for Xamarin.AndroidX.ViewPager2
-keep class androidx.viewpager2.widget.CompositePageTransformer
-keepclassmembers class androidx.viewpager2.widget.CompositePageTransformer {
   <init>(...);
   *** addTransformer(...);
   *** removeTransformer(...);
   *** transformPage(...);
}

-keep class androidx.viewpager2.widget.MarginPageTransformer
-keepclassmembers class androidx.viewpager2.widget.MarginPageTransformer {
   <init>(...);
   *** transformPage(...);
}

-keep class androidx.viewpager2.widget.ViewPager2$OffscreenPageLimit
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$OffscreenPageLimit {
}

-keep class androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback {
   <init>(...);
   *** onPageScrollStateChanged(...);
   *** onPageScrolled(...);
   *** onPageSelected(...);
}

-keep class androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$OnPageChangeCallback {
}

-keep class androidx.viewpager2.widget.ViewPager2$Orientation
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$Orientation {
}

-keep class androidx.viewpager2.widget.ViewPager2$PageTransformer
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$PageTransformer {
}

-keep class androidx.viewpager2.widget.ViewPager2$ScrollState
-keepclassmembers class androidx.viewpager2.widget.ViewPager2$ScrollState {
}

-keep class androidx.viewpager2.widget.ViewPager2
-keepclassmembers class androidx.viewpager2.widget.ViewPager2 {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAdapter(...);
   *** setAdapter(...);
   *** getCurrentItem(...);
   *** setCurrentItem(...);
   *** isFakeDragging(...);
   *** getItemDecorationCount(...);
   *** getOffscreenPageLimit(...);
   *** setOffscreenPageLimit(...);
   *** getOrientation(...);
   *** setOrientation(...);
   *** getScrollState(...);
   *** isUserInputEnabled(...);
   *** setUserInputEnabled(...);
   *** addItemDecoration(...);
   *** addItemDecoration(...);
   *** beginFakeDrag(...);
   *** dispatchRestoreInstanceState(...);
   *** endFakeDrag(...);
   *** fakeDragBy(...);
   *** getItemDecorationAt(...);
   *** invalidateItemDecorations(...);
   *** onLayout(...);
   *** registerOnPageChangeCallback(...);
   *** removeItemDecoration(...);
   *** removeItemDecorationAt(...);
   *** requestTransform(...);
   *** setCurrentItem(...);
   *** setPageTransformer(...);
   *** unregisterOnPageChangeCallback(...);
}

-keep class androidx.viewpager2.adapter.FragmentStateAdapter
-keepclassmembers class androidx.viewpager2.adapter.FragmentStateAdapter {
   <init>(...);
   <init>(...);
   <init>(...);
   *** containsItem(...);
   *** createFragment(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
   *** onFailedToRecycleView(...);
   *** onViewAttachedToWindow(...);
   *** onViewRecycled(...);
   *** restoreState(...);
   *** saveState(...);
   *** onBindViewHolder(...);
}

-keep class androidx.viewpager2.adapter.FragmentStateAdapter
-keepclassmembers class androidx.viewpager2.adapter.FragmentStateAdapter {
   *** createFragment(...);
   *** getItemCount(...);
   *** onCreateViewHolder(...);
}

-keep class androidx.viewpager2.adapter.FragmentViewHolder
-keepclassmembers class androidx.viewpager2.adapter.FragmentViewHolder {
}

-keep class androidx.viewpager2.adapter.StatefulAdapter
-keepclassmembers class androidx.viewpager2.adapter.StatefulAdapter {
}

# ACW for Xamarin.AndroidX.RecyclerView
-keep class androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Adapter$StateRestorationPolicy {
   *** valueOf(...);
   *** values(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Adapter
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Adapter {
   <init>(...);
   *** hasObservers(...);
   *** hasStableIds(...);
   *** setHasStableIds(...);
   *** getItemCount(...);
   *** bindViewHolder(...);
   *** createViewHolder(...);
   *** findRelativeAdapterPositionIn(...);
   *** getItemId(...);
   *** getItemViewType(...);
   *** getStateRestorationPolicy(...);
   *** notifyDataSetChanged(...);
   *** notifyItemChanged(...);
   *** notifyItemChanged(...);
   *** notifyItemInserted(...);
   *** notifyItemMoved(...);
   *** notifyItemRangeChanged(...);
   *** notifyItemRangeChanged(...);
   *** notifyItemRangeInserted(...);
   *** notifyItemRangeRemoved(...);
   *** notifyItemRemoved(...);
   *** onAttachedToRecyclerView(...);
   *** onBindViewHolder(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
   *** onDetachedFromRecyclerView(...);
   *** onFailedToRecycleView(...);
   *** onViewAttachedToWindow(...);
   *** onViewDetachedFromWindow(...);
   *** onViewRecycled(...);
   *** registerAdapterDataObserver(...);
   *** setStateRestorationPolicy(...);
   *** unregisterAdapterDataObserver(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Adapter
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Adapter {
   *** getItemCount(...);
   *** onBindViewHolder(...);
   *** onCreateViewHolder(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver {
   <init>(...);
   *** onChanged(...);
   *** onItemRangeChanged(...);
   *** onItemRangeChanged(...);
   *** onItemRangeInserted(...);
   *** onItemRangeMoved(...);
   *** onItemRangeRemoved(...);
   *** onStateRestorationPolicyChanged(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$AdapterDataObserver {
}

-keep class androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback {
}

-keep class androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory {
   <init>(...);
   *** createEdgeEffect(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener {
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo {
   <init>(...);
   *** setFrom(...);
   *** setFrom(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator {
   <init>(...);
   *** getAddDuration(...);
   *** setAddDuration(...);
   *** getChangeDuration(...);
   *** setChangeDuration(...);
   *** isRunning(...);
   *** getMoveDuration(...);
   *** setMoveDuration(...);
   *** getRemoveDuration(...);
   *** setRemoveDuration(...);
   *** animateAppearance(...);
   *** animateChange(...);
   *** animateDisappearance(...);
   *** animatePersistence(...);
   *** canReuseUpdatedViewHolder(...);
   *** canReuseUpdatedViewHolder(...);
   *** dispatchAnimationFinished(...);
   *** dispatchAnimationStarted(...);
   *** dispatchAnimationsFinished(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** isRunning(...);
   *** obtainHolderInfo(...);
   *** onAnimationFinished(...);
   *** onAnimationStarted(...);
   *** recordPostLayoutInformation(...);
   *** recordPreLayoutInformation(...);
   *** runPendingAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemAnimator {
   *** isRunning(...);
   *** animateAppearance(...);
   *** animateChange(...);
   *** animateDisappearance(...);
   *** animatePersistence(...);
   *** endAnimation(...);
   *** endAnimations(...);
   *** runPendingAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemDecoration
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemDecoration {
   <init>(...);
   *** getItemOffsets(...);
   *** getItemOffsets(...);
   *** onDraw(...);
   *** onDraw(...);
   *** onDrawOver(...);
   *** onDrawOver(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ItemDecoration
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ItemDecoration {
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry {
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties {
   <init>(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager {
   <init>(...);
   *** isAutoMeasureEnabled(...);
   *** setAutoMeasureEnabled(...);
   *** getBaseline(...);
   *** getChildCount(...);
   *** getClipToPadding(...);
   *** getFocusedChild(...);
   *** hasFocus(...);
   *** getHeight(...);
   *** getHeightMode(...);
   *** isAttachedToWindow(...);
   *** isFocused(...);
   *** isSmoothScrolling(...);
   *** getItemCount(...);
   *** isItemPrefetchEnabled(...);
   *** setItemPrefetchEnabled(...);
   *** getLayoutDirection(...);
   *** isMeasurementCacheEnabled(...);
   *** setMeasurementCacheEnabled(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getPaddingBottom(...);
   *** getPaddingEnd(...);
   *** getPaddingLeft(...);
   *** getPaddingRight(...);
   *** getPaddingStart(...);
   *** getPaddingTop(...);
   *** getWidth(...);
   *** getWidthMode(...);
   *** addDisappearingView(...);
   *** addDisappearingView(...);
   *** addView(...);
   *** addView(...);
   *** assertInLayoutOrScroll(...);
   *** assertNotInLayoutOrScroll(...);
   *** attachView(...);
   *** attachView(...);
   *** attachView(...);
   *** calculateItemDecorationsForChild(...);
   *** canScrollHorizontally(...);
   *** canScrollVertically(...);
   *** checkLayoutParams(...);
   *** chooseSize(...);
   *** collectAdjacentPrefetchPositions(...);
   *** collectInitialPrefetchPositions(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** detachAndScrapAttachedViews(...);
   *** detachAndScrapView(...);
   *** detachAndScrapViewAt(...);
   *** detachView(...);
   *** detachViewAt(...);
   *** endAnimation(...);
   *** findContainingItemView(...);
   *** findViewByPosition(...);
   *** generateDefaultLayoutParams(...);
   *** generateLayoutParams(...);
   *** generateLayoutParams(...);
   *** getBottomDecorationHeight(...);
   *** getChildAt(...);
   *** getChildMeasureSpec(...);
   *** getChildMeasureSpec(...);
   *** getColumnCountForAccessibility(...);
   *** getDecoratedBottom(...);
   *** getDecoratedBoundsWithMargins(...);
   *** getDecoratedLeft(...);
   *** getDecoratedMeasuredHeight(...);
   *** getDecoratedMeasuredWidth(...);
   *** getDecoratedRight(...);
   *** getDecoratedTop(...);
   *** getItemViewType(...);
   *** getLeftDecorationWidth(...);
   *** getPosition(...);
   *** getProperties(...);
   *** getRightDecorationWidth(...);
   *** getRowCountForAccessibility(...);
   *** getSelectionModeForAccessibility(...);
   *** getTopDecorationHeight(...);
   *** getTransformedBoundingBox(...);
   *** ignoreView(...);
   *** isLayoutHierarchical(...);
   *** isViewPartiallyVisible(...);
   *** layoutDecorated(...);
   *** layoutDecoratedWithMargins(...);
   *** measureChild(...);
   *** measureChildWithMargins(...);
   *** moveView(...);
   *** offsetChildrenHorizontal(...);
   *** offsetChildrenVertical(...);
   *** onAdapterChanged(...);
   *** onAddFocusables(...);
   *** onAttachedToWindow(...);
   *** onDetachedFromWindow(...);
   *** onDetachedFromWindow(...);
   *** onFocusSearchFailed(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityEvent(...);
   *** onInitializeAccessibilityNodeInfo(...);
   *** onInitializeAccessibilityNodeInfoForItem(...);
   *** onInterceptFocusSearch(...);
   *** onItemsAdded(...);
   *** onItemsChanged(...);
   *** onItemsMoved(...);
   *** onItemsRemoved(...);
   *** onItemsUpdated(...);
   *** onItemsUpdated(...);
   *** onLayoutChildren(...);
   *** onLayoutCompleted(...);
   *** onMeasure(...);
   *** onRequestChildFocus(...);
   *** onRequestChildFocus(...);
   *** onRestoreInstanceState(...);
   *** onSaveInstanceState(...);
   *** onScrollStateChanged(...);
   *** performAccessibilityAction(...);
   *** performAccessibilityActionForItem(...);
   *** postOnAnimation(...);
   *** removeAllViews(...);
   *** removeAndRecycleAllViews(...);
   *** removeAndRecycleView(...);
   *** removeAndRecycleViewAt(...);
   *** removeCallbacks(...);
   *** removeDetachedView(...);
   *** removeView(...);
   *** removeViewAt(...);
   *** requestChildRectangleOnScreen(...);
   *** requestChildRectangleOnScreen(...);
   *** requestLayout(...);
   *** requestSimpleAnimationsInNextLayout(...);
   *** scrollHorizontallyBy(...);
   *** scrollToPosition(...);
   *** scrollVerticallyBy(...);
   *** setMeasuredDimension(...);
   *** setMeasuredDimension(...);
   *** smoothScrollToPosition(...);
   *** startSmoothScroll(...);
   *** stopIgnoringView(...);
   *** supportsPredictiveItemAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutManager {
   *** generateDefaultLayoutParams(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$LayoutParams
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   *** getAbsoluteAdapterPosition(...);
   *** getBindingAdapterPosition(...);
   *** isItemChanged(...);
   *** isItemRemoved(...);
   *** isViewInvalid(...);
   *** getViewAdapterPosition(...);
   *** getViewLayoutPosition(...);
   *** getViewPosition(...);
   *** viewNeedsUpdate(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$OnFlingListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnFlingListener {
   <init>(...);
   *** onFling(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnFlingListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnFlingListener {
   *** onFling(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnItemTouchListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnItemTouchListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_OnItemTouchListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_OnItemTouchListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$OnScrollListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnScrollListener {
   <init>(...);
   *** onScrollStateChanged(...);
   *** onScrolled(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$OnScrollListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$OnScrollListener {
}

-keep class androidx.recyclerview.widget.RecyclerView$RecycledViewPool
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$RecycledViewPool {
   <init>(...);
   *** clear(...);
   *** getRecycledView(...);
   *** getRecycledViewCount(...);
   *** putRecycledView(...);
   *** setMaxRecycledViews(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$Recycler
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$Recycler {
   <init>(...);
   *** getScrapList(...);
   *** bindViewToPosition(...);
   *** clear(...);
   *** convertPreLayoutPositionToPostLayout(...);
   *** getViewForPosition(...);
   *** recycleView(...);
   *** setViewCacheSize(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$RecyclerListener
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$RecyclerListener {
}

-keep class mono.androidx.recyclerview.widget.RecyclerView_RecyclerListenerImplementor
-keepclassmembers class mono.androidx.recyclerview.widget.RecyclerView_RecyclerListenerImplementor {
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getDuration(...);
   *** setDuration(...);
   *** getDx(...);
   *** setDx(...);
   *** getDy(...);
   *** setDy(...);
   *** getInterpolator(...);
   *** setInterpolator(...);
   *** jumpTo(...);
   *** update(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller {
   <init>(...);
   *** getChildCount(...);
   *** isPendingInitialRun(...);
   *** isRunning(...);
   *** getLayoutManager(...);
   *** getTargetPosition(...);
   *** setTargetPosition(...);
   *** computeScrollVectorForPosition(...);
   *** findViewByPosition(...);
   *** getChildPosition(...);
   *** instantScrollToPosition(...);
   *** normalize(...);
   *** onChildAttachedToWindow(...);
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
   *** stop(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$SmoothScroller
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$SmoothScroller {
   *** onSeekTargetStep(...);
   *** onStart(...);
   *** onStop(...);
   *** onTargetFound(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$State
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$State {
   <init>(...);
   *** hasTargetScrollPosition(...);
   *** isMeasuring(...);
   *** isPreLayout(...);
   *** getItemCount(...);
   *** getRemainingScrollHorizontal(...);
   *** getRemainingScrollVertical(...);
   *** getTargetScrollPosition(...);
   *** didStructureChange(...);
   *** get(...);
   *** put(...);
   *** remove(...);
   *** willRunPredictiveAnimations(...);
   *** willRunSimpleAnimations(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension {
   <init>(...);
   *** getViewForPositionAndType(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewCacheExtension {
   *** getViewForPositionAndType(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewHolder
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewHolder {
   <init>(...);
   *** getAbsoluteAdapterPosition(...);
   *** getAdapterPosition(...);
   *** getBindingAdapter(...);
   *** getBindingAdapterPosition(...);
   *** isRecyclable(...);
   *** setIsRecyclable(...);
   *** getItemId(...);
   *** getItemViewType(...);
   *** getLayoutPosition(...);
   *** getOldPosition(...);
   *** getPosition(...);
}

-keep class androidx.recyclerview.widget.RecyclerView$ViewHolder
-keepclassmembers class androidx.recyclerview.widget.RecyclerView$ViewHolder {
}

-keep class androidx.recyclerview.widget.RecyclerView
-keepclassmembers class androidx.recyclerview.widget.RecyclerView {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCompatAccessibilityDelegate(...);
   *** hasFixedSize(...);
   *** setHasFixedSize(...);
   *** hasPendingAdapterUpdates(...);
   *** isAnimating(...);
   *** isComputingLayout(...);
   *** isLayoutSuppressed(...);
   *** getItemDecorationCount(...);
   *** isLayoutFrozen(...);
   *** setLayoutFrozen(...);
   *** getMaxFlingVelocity(...);
   *** getMinFlingVelocity(...);
   *** getPreserveFocusAfterLayout(...);
   *** setPreserveFocusAfterLayout(...);
   *** getScrollState(...);
   *** addFocusables(...);
   *** addItemDecoration(...);
   *** addItemDecoration(...);
   *** addOnChildAttachStateChangeListener(...);
   *** addOnItemTouchListener(...);
   *** addOnScrollListener(...);
   *** addRecyclerListener(...);
   *** clearOnChildAttachStateChangeListeners(...);
   *** clearOnScrollListeners(...);
   *** computeHorizontalScrollExtent(...);
   *** computeHorizontalScrollOffset(...);
   *** computeHorizontalScrollRange(...);
   *** computeVerticalScrollExtent(...);
   *** computeVerticalScrollOffset(...);
   *** computeVerticalScrollRange(...);
   *** dispatchNestedPreScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchNestedScroll(...);
   *** dispatchRestoreInstanceState(...);
   *** dispatchSaveInstanceState(...);
   *** drawChild(...);
   *** findChildViewUnder(...);
   *** findContainingItemView(...);
   *** findContainingViewHolder(...);
   *** findViewHolderForAdapterPosition(...);
   *** findViewHolderForItemId(...);
   *** findViewHolderForLayoutPosition(...);
   *** findViewHolderForPosition(...);
   *** fling(...);
   *** getAdapter(...);
   *** getChildAdapterPosition(...);
   *** getChildItemId(...);
   *** getChildLayoutPosition(...);
   *** getChildPosition(...);
   *** getChildViewHolder(...);
   *** getDecoratedBoundsWithMargins(...);
   *** getEdgeEffectFactory(...);
   *** getItemAnimator(...);
   *** getItemDecorationAt(...);
   *** getLayoutManager(...);
   *** getOnFlingListener(...);
   *** getRecycledViewPool(...);
   *** hasNestedScrollingParent(...);
   *** invalidateItemDecorations(...);
   *** nestedScrollBy(...);
   *** offsetChildrenHorizontal(...);
   *** offsetChildrenVertical(...);
   *** onChildAttachedToWindow(...);
   *** onChildDetachedFromWindow(...);
   *** onDraw(...);
   *** onLayout(...);
   *** onScrollStateChanged(...);
   *** onScrolled(...);
   *** removeItemDecoration(...);
   *** removeItemDecorationAt(...);
   *** removeOnChildAttachStateChangeListener(...);
   *** removeOnItemTouchListener(...);
   *** removeOnScrollListener(...);
   *** removeRecyclerListener(...);
   *** scrollToPosition(...);
   *** setAccessibilityDelegateCompat(...);
   *** setAdapter(...);
   *** setChildDrawingOrderCallback(...);
   *** setEdgeEffectFactory(...);
   *** setItemAnimator(...);
   *** setItemViewCacheSize(...);
   *** setLayoutManager(...);
   *** setOnFlingListener(...);
   *** setOnScrollListener(...);
   *** setRecycledViewPool(...);
   *** setRecyclerListener(...);
   *** setScrollingTouchSlop(...);
   *** setViewCacheExtension(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollBy(...);
   *** smoothScrollToPosition(...);
   *** startNestedScroll(...);
   *** stopNestedScroll(...);
   *** stopScroll(...);
   *** suppressLayout(...);
   *** swapAdapter(...);
}

-keep class androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate
-keepclassmembers class androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate {
   <init>(...);
   *** getItemDelegate(...);
}

# ACW for Xamarin.AndroidX.Loader
-keep class androidx.loader.content.Loader$OnLoadCanceledListener
-keepclassmembers class androidx.loader.content.Loader$OnLoadCanceledListener {
}

-keep class androidx.loader.content.Loader$OnLoadCompleteListener
-keepclassmembers class androidx.loader.content.Loader$OnLoadCompleteListener {
}

-keep class androidx.loader.content.Loader
-keepclassmembers class androidx.loader.content.Loader {
   <init>(...);
   *** getContext(...);
   *** getId(...);
   *** isAbandoned(...);
   *** isReset(...);
   *** isStarted(...);
   *** abandon(...);
   *** cancelLoad(...);
   *** commitContentChanged(...);
   *** dataToString(...);
   *** deliverCancellation(...);
   *** deliverResult(...);
   *** dump(...);
   *** forceLoad(...);
   *** onAbandon(...);
   *** onCancelLoad(...);
   *** onContentChanged(...);
   *** onForceLoad(...);
   *** onReset(...);
   *** onStartLoading(...);
   *** onStopLoading(...);
   *** registerListener(...);
   *** registerOnLoadCanceledListener(...);
   *** reset(...);
   *** rollbackContentChanged(...);
   *** startLoading(...);
   *** stopLoading(...);
   *** takeContentChanged(...);
   *** unregisterListener(...);
   *** unregisterOnLoadCanceledListener(...);
}

-keep class androidx.loader.app.LoaderManager$LoaderCallbacks
-keepclassmembers class androidx.loader.app.LoaderManager$LoaderCallbacks {
}

-keep class androidx.loader.app.LoaderManager
-keepclassmembers class androidx.loader.app.LoaderManager {
   <init>(...);
   *** hasRunningLoaders(...);
   *** destroyLoader(...);
   *** dump(...);
   *** enableDebugLogging(...);
   *** getInstance(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

-keep class androidx.loader.app.LoaderManager
-keepclassmembers class androidx.loader.app.LoaderManager {
   *** destroyLoader(...);
   *** dump(...);
   *** getLoader(...);
   *** initLoader(...);
   *** markForRedelivery(...);
   *** restartLoader(...);
}

# ACW for Xamarin.AndroidX.Lifecycle.LiveData.Core
-keep class androidx.lifecycle.Observer
-keepclassmembers class androidx.lifecycle.Observer {
}

-keep class androidx.lifecycle.LiveData
-keepclassmembers class androidx.lifecycle.LiveData {
   <init>(...);
   <init>(...);
   *** hasActiveObservers(...);
   *** hasObservers(...);
   *** getValue(...);
   *** observe(...);
   *** observeForever(...);
   *** onActive(...);
   *** onInactive(...);
   *** postValue(...);
   *** removeObserver(...);
   *** removeObservers(...);
   *** setValue(...);
}

-keep class androidx.lifecycle.LiveData
-keepclassmembers class androidx.lifecycle.LiveData {
}

-keep class androidx.lifecycle.MutableLiveData
-keepclassmembers class androidx.lifecycle.MutableLiveData {
   <init>(...);
   <init>(...);
   *** postValue(...);
   *** setValue(...);
}

# ACW for Xamarin.AndroidX.SlidingPaneLayout
-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams {
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
   <init>(...);
}

-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener {
}

-keep class mono.androidx.slidingpanelayout.widget.SlidingPaneLayout_PanelSlideListenerImplementor
-keepclassmembers class mono.androidx.slidingpanelayout.widget.SlidingPaneLayout_PanelSlideListenerImplementor {
}

-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener {
   <init>(...);
   *** onPanelClosed(...);
   *** onPanelOpened(...);
   *** onPanelSlide(...);
}

-keep class androidx.slidingpanelayout.widget.SlidingPaneLayout
-keepclassmembers class androidx.slidingpanelayout.widget.SlidingPaneLayout {
   <init>(...);
   <init>(...);
   <init>(...);
   *** getCoveredFadeColor(...);
   *** setCoveredFadeColor(...);
   *** isOpen(...);
   *** isSlideable(...);
   *** getLockMode(...);
   *** setLockMode(...);
   *** getParallaxDistance(...);
   *** setParallaxDistance(...);
   *** getSliderFadeColor(...);
   *** setSliderFadeColor(...);
   *** canScroll(...);
   *** canSlide(...);
   *** close(...);
   *** closePane(...);
   *** onLayout(...);
   *** open(...);
   *** openPane(...);
   *** setPanelSlideListener(...);
   *** setShadowDrawable(...);
   *** setShadowDrawableLeft(...);
   *** setShadowDrawableRight(...);
   *** setShadowResource(...);
   *** setShadowResourceLeft(...);
   *** setShadowResourceRight(...);
   *** smoothSlideClosed(...);
   *** smoothSlideOpen(...);
}

# ACW for Xamarin.AndroidX.VersionedParcelable
-keep class androidx.versionedparcelable.CustomVersionedParcelable
-keepclassmembers class androidx.versionedparcelable.CustomVersionedParcelable {
   <init>(...);
   *** onPostParceling(...);
   *** onPreParceling(...);
}

-keep class androidx.versionedparcelable.CustomVersionedParcelable
-keepclassmembers class androidx.versionedparcelable.CustomVersionedParcelable {
}

-keep class androidx.versionedparcelable.NonParcelField
-keepclassmembers class androidx.versionedparcelable.NonParcelField {
}

-keep class androidx.versionedparcelable.ParcelField
-keepclassmembers class androidx.versionedparcelable.ParcelField {
}

-keep class androidx.versionedparcelable.VersionedParcelable
-keepclassmembers class androidx.versionedparcelable.VersionedParcelable {
}

-keep class androidx.versionedparcelable.VersionedParcelize
-keepclassmembers class androidx.versionedparcelable.VersionedParcelize {
}

-keep class androidx.versionedparcelable.ParcelImpl
-keepclassmembers class androidx.versionedparcelable.ParcelImpl {
   <init>(...);
   <init>(...);
   *** getVersionedParcel(...);
   *** describeContents(...);
   *** writeToParcel(...);
}

-keep class androidx.versionedparcelable.ParcelUtils
-keepclassmembers class androidx.versionedparcelable.ParcelUtils {
   *** fromInputStream(...);
   *** fromParcelable(...);
   *** getVersionedParcelable(...);
   *** getVersionedParcelableList(...);
   *** putVersionedParcelable(...);
   *** putVersionedParcelableList(...);
   *** toOutputStream(...);
   *** toParcelable(...);
}

-keep class androidx.versionedparcelable.VersionedParcel$ParcelException
-keepclassmembers class androidx.versionedparcelable.VersionedParcel$ParcelException {
   <init>(...);
}

-keep class androidx.versionedparcelable.VersionedParcel
-keepclassmembers class androidx.versionedparcelable.VersionedParcel {
   <init>(...);
   *** isStream(...);
   *** closeField(...);
   *** createSubParcel(...);
   *** getRootCause(...);
   *** readArray(...);
   *** readArray(...);
   *** readBoolean(...);
   *** readBoolean(...);
   *** readBooleanArray(...);
   *** readBooleanArray(...);
   *** readBundle(...);
   *** readBundle(...);
   *** readByte(...);
   *** readByteArray(...);
   *** readByteArray(...);
   *** readCharArray(...);
   *** readCharSequence(...);
   *** readCharSequence(...);
   *** readDouble(...);
   *** readDouble(...);
   *** readDoubleArray(...);
   *** readDoubleArray(...);
   *** readException(...);
   *** readField(...);
   *** readFloat(...);
   *** readFloat(...);
   *** readFloatArray(...);
   *** readFloatArray(...);
   *** readFromParcel(...);
   *** readInt(...);
   *** readInt(...);
   *** readIntArray(...);
   *** readIntArray(...);
   *** readList(...);
   *** readLong(...);
   *** readLong(...);
   *** readLongArray(...);
   *** readLongArray(...);
   *** readMap(...);
   *** readParcelable(...);
   *** readParcelable(...);
   *** readSerializable(...);
   *** readSet(...);
   *** readSize(...);
   *** readSizeF(...);
   *** readSparseBooleanArray(...);
   *** readString(...);
   *** readString(...);
   *** readStrongBinder(...);
   *** readStrongBinder(...);
   *** readVersionedParcelable(...);
   *** readVersionedParcelable(...);
   *** setOutputField(...);
   *** setSerializationFlags(...);
   *** writeArray(...);
   *** writeArray(...);
   *** writeBoolean(...);
   *** writeBoolean(...);
   *** writeBooleanArray(...);
   *** writeBooleanArray(...);
   *** writeBundle(...);
   *** writeBundle(...);
   *** writeByte(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeCharArray(...);
   *** writeCharSequence(...);
   *** writeCharSequence(...);
   *** writeDouble(...);
   *** writeDouble(...);
   *** writeDoubleArray(...);
   *** writeDoubleArray(...);
   *** writeException(...);
   *** writeFloat(...);
   *** writeFloat(...);
   *** writeFloatArray(...);
   *** writeFloatArray(...);
   *** writeInt(...);
   *** writeInt(...);
   *** writeIntArray(...);
   *** writeIntArray(...);
   *** writeList(...);
   *** writeLong(...);
   *** writeLong(...);
   *** writeLongArray(...);
   *** writeLongArray(...);
   *** writeMap(...);
   *** writeNoException(...);
   *** writeParcelable(...);
   *** writeParcelable(...);
   *** writeSerializable(...);
   *** writeSet(...);
   *** writeSize(...);
   *** writeSizeF(...);
   *** writeSparseBooleanArray(...);
   *** writeString(...);
   *** writeString(...);
   *** writeStrongBinder(...);
   *** writeStrongBinder(...);
   *** writeStrongInterface(...);
   *** writeStrongInterface(...);
   *** writeToParcel(...);
   *** writeVersionedParcelable(...);
   *** writeVersionedParcelable(...);
}

-keep class androidx.versionedparcelable.VersionedParcel
-keepclassmembers class androidx.versionedparcelable.VersionedParcel {
   *** closeField(...);
   *** createSubParcel(...);
   *** readBoolean(...);
   *** readBundle(...);
   *** readByteArray(...);
   *** readCharSequence(...);
   *** readDouble(...);
   *** readField(...);
   *** readFloat(...);
   *** readInt(...);
   *** readLong(...);
   *** readParcelable(...);
   *** readString(...);
   *** readStrongBinder(...);
   *** setOutputField(...);
   *** writeBoolean(...);
   *** writeBundle(...);
   *** writeByteArray(...);
   *** writeByteArray(...);
   *** writeCharSequence(...);
   *** writeDouble(...);
   *** writeFloat(...);
   *** writeInt(...);
   *** writeLong(...);
   *** writeParcelable(...);
   *** writeString(...);
   *** writeStrongBinder(...);
   *** writeStrongInterface(...);
}

# ACW for Xamarin.Google.Guava.ListenableFuture
-keep class com.google.common.util.concurrent.ListenableFuture
-keepclassmembers class com.google.common.util.concurrent.ListenableFuture {
}

# ACW for Xamarin.AndroidX.VectorDrawable
-keep class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon {
}

-keep class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCommon {
   *** getOpacity(...);
   *** draw(...);
   *** setAlpha(...);
   *** setColorFilter(...);
}

-keep class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat {
   *** getCurrent(...);
   *** getMinimumHeight(...);
   *** getMinimumWidth(...);
   *** getOpacity(...);
   *** getPixelSize(...);
   *** getTransparentRegion(...);
   *** applyTheme(...);
   *** clearColorFilter(...);
   *** create(...);
   *** createFromXmlInner(...);
   *** draw(...);
   *** getPadding(...);
   *** getState(...);
   *** jumpToCurrentState(...);
   *** onBoundsChange(...);
   *** setAlpha(...);
   *** setColorFilter(...);
   *** setFilterBitmap(...);
   *** setHotspot(...);
   *** setHotspotBounds(...);
   *** setState(...);
}


# End of content from obj\Release\net7.0-android33.0\android-arm64\proguard\proguard_project_references.cfg
# The proguard configuration file for the following section is obj\Release\net7.0-android33.0\proguard\proguard_project_primary.cfg
-keep class androidx.activity.contextaware.OnContextAvailableListener { *; }
-keep class mono.androidx.activity.contextaware.OnContextAvailableListenerImplementor { *; }
-keep class androidx.activity.result.ActivityResultCallback { *; }
-keep class androidx.appcompat.app.ActionBar$OnMenuVisibilityListener { *; }
-keep class mono.androidx.appcompat.app.ActionBar_OnMenuVisibilityListenerImplementor { *; }
-keep class androidx.appcompat.app.ActionBar$OnNavigationListener { *; }
-keep class androidx.appcompat.app.ActionBar$TabListener { *; }
-keep class androidx.appcompat.app.ActionBarDrawerToggle$Delegate { *; }
-keep class androidx.appcompat.app.AppCompatCallback { *; }
-keep class androidx.appcompat.widget.Toolbar_NavigationOnClickEventDispatcher { *; }
-keep class androidx.appcompat.widget.Toolbar$OnMenuItemClickListener { *; }
-keep class mono.androidx.appcompat.widget.Toolbar_OnMenuItemClickListenerImplementor { *; }
-keep class androidx.appcompat.widget.DecorToolbar { *; }
-keep class androidx.appcompat.view.ActionMode$Callback { *; }
-keep class androidx.appcompat.view.menu.MenuBuilder$Callback { *; }
-keep class androidx.appcompat.view.menu.MenuPresenter$Callback { *; }
-keep class androidx.appcompat.view.menu.MenuPresenter { *; }
-keep class androidx.appcompat.view.menu.MenuView { *; }
-keep class androidx.core.internal.view.SupportMenuItem { *; }
-keep class androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener { *; }
-keep class androidx.core.view.ActionProvider$SubUiVisibilityListener { *; }
-keep class mono.androidx.core.view.ActionProvider_SubUiVisibilityListenerImplementor { *; }
-keep class androidx.core.view.ActionProvider$VisibilityListener { *; }
-keep class mono.androidx.core.view.ActionProvider_VisibilityListenerImplementor { *; }
-keep class androidx.core.view.MenuProvider { *; }
-keep class androidx.core.view.ViewPropertyAnimatorListener { *; }
-keep class androidx.core.view.ViewPropertyAnimatorUpdateListener { *; }
-keep class androidx.core.view.accessibility.AccessibilityViewCommand { *; }
-keep class androidx.core.splashscreen.SplashScreen$KeepOnScreenCondition { *; }
-keep class androidx.core.splashscreen.SplashScreen$OnExitAnimationListener { *; }
-keep class mono.androidx.core.splashscreen.SplashScreen_OnExitAnimationListenerImplementor { *; }
-keep class androidx.customview.widget.Openable { *; }
-keep class androidx.drawerlayout.widget.DrawerLayout$DrawerListener { *; }
-keep class mono.androidx.drawerlayout.widget.DrawerLayout_DrawerListenerImplementor { *; }
-keep class androidx.fragment.app.FragmentManager$BackStackEntry { *; }
-keep class androidx.fragment.app.FragmentManager$OnBackStackChangedListener { *; }
-keep class mono.androidx.fragment.app.FragmentManager_OnBackStackChangedListenerImplementor { *; }
-keep class androidx.fragment.app.FragmentOnAttachListener { *; }
-keep class mono.androidx.fragment.app.FragmentOnAttachListenerImplementor { *; }
-keep class androidx.fragment.app.FragmentResultListener { *; }
-keep class androidx.lifecycle.LifecycleObserver { *; }
-keep class androidx.lifecycle.LifecycleOwner { *; }
-keep class androidx.lifecycle.Observer { *; }
-keep class androidx.lifecycle.ViewModelStoreOwner { *; }
-keep class androidx.lifecycle.ViewModelProvider$Factory { *; }
-keep class androidx.loader.content.Loader$OnLoadCanceledListener { *; }
-keep class androidx.loader.content.Loader$OnLoadCompleteListener { *; }
-keep class androidx.loader.app.LoaderManager$LoaderCallbacks { *; }
-keep class androidx.navigation.NavDirections { *; }
-keep class androidx.navigation.Navigator$Extras { *; }
-keep class androidx.navigation.NavController$OnDestinationChangedListener { *; }
-keep class mono.androidx.navigation.NavController_OnDestinationChangedListenerImplementor { *; }
-keep class androidx.navigation.ui.AppBarConfiguration$OnNavigateUpListener { *; }
-keep class androidx.preference.Preference$OnPreferenceChangeListener { *; }
-keep class mono.androidx.preference.Preference_OnPreferenceChangeListenerImplementor { *; }
-keep class androidx.preference.Preference$OnPreferenceClickListener { *; }
-keep class mono.androidx.preference.Preference_OnPreferenceClickListenerImplementor { *; }
-keep class androidx.preference.Preference$SummaryProvider { *; }
-keep class androidx.preference.PreferenceGroup$OnExpandButtonClickListener { *; }
-keep class mono.androidx.preference.PreferenceGroup_OnExpandButtonClickListenerImplementor { *; }
-keep class androidx.preference.PreferenceManager$OnDisplayPreferenceDialogListener { *; }
-keep class mono.androidx.preference.PreferenceManager_OnDisplayPreferenceDialogListenerImplementor { *; }
-keep class androidx.preference.PreferenceManager$OnNavigateToScreenListener { *; }
-keep class mono.androidx.preference.PreferenceManager_OnNavigateToScreenListenerImplementor { *; }
-keep class androidx.preference.PreferenceManager$OnPreferenceTreeClickListener { *; }
-keep class mono.androidx.preference.PreferenceManager_OnPreferenceTreeClickListenerImplementor { *; }
-keep class androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback { *; }
-keep class androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener { *; }
-keep class androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry { *; }
-keep class androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener { *; }
-keep class mono.androidx.recyclerview.widget.RecyclerView_OnChildAttachStateChangeListenerImplementor { *; }
-keep class androidx.recyclerview.widget.RecyclerView$OnItemTouchListener { *; }
-keep class mono.androidx.recyclerview.widget.RecyclerView_OnItemTouchListenerImplementor { *; }
-keep class androidx.recyclerview.widget.RecyclerView$RecyclerListener { *; }
-keep class mono.androidx.recyclerview.widget.RecyclerView_RecyclerListenerImplementor { *; }
-keep class androidx.savedstate.SavedStateRegistry$SavedStateProvider { *; }
-keep class com.google.android.material.navigation.NavigationBarView$OnItemReselectedListener { *; }
-keep class mono.com.google.android.material.navigation.NavigationBarView_OnItemReselectedListenerImplementor { *; }
-keep class com.google.android.material.navigation.NavigationBarView$OnItemSelectedListener { *; }
-keep class mono.com.google.android.material.navigation.NavigationBarView_OnItemSelectedListenerImplementor { *; }
-keep class com.google.android.material.navigation.NavigationView$OnNavigationItemSelectedListener { *; }
-keep class mono.com.google.android.material.navigation.NavigationView_OnNavigationItemSelectedListenerImplementor { *; }
-keep class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemReselectedListener { *; }
-keep class com.google.android.material.bottomnavigation.BottomNavigationView$OnNavigationItemSelectedListener { *; }
-keep class kotlin.Function { *; }
-keep class kotlin.text.MatchGroupCollection { *; }
-keep class kotlin.sequences.Sequence { *; }
-keep class kotlin.jvm.internal.markers.KMappedMarker { *; }
-keep class kotlin.jvm.functions.Function0 { *; }
-keep class kotlin.jvm.functions.Function1 { *; }
-keep class kotlin.jvm.functions.Function2 { *; }
-keep class kotlin.jvm.functions.Function3 { *; }
-keep class kotlin.jvm.functions.Function4 { *; }
-keep class kotlin.jvm.functions.Function5 { *; }
-keep class kotlin.jvm.functions.Function6 { *; }
-keep class kotlin.jvm.functions.Function7 { *; }
-keep class kotlin.coroutines.Continuation { *; }
-keep class kotlin.coroutines.ContinuationInterceptor { *; }
-keep class kotlin.coroutines.CoroutineContext$Element { *; }
-keep class kotlin.coroutines.CoroutineContext$Key { *; }
-keep class kotlin.coroutines.CoroutineContext { *; }
-keep class kotlin.ranges.ClosedRange { *; }
-keep class kotlin.ranges.OpenEndRange { *; }
-keep class kotlin.io.path.ExperimentalPathApi { *; }
-keep class kotlinx.coroutines.CancellableContinuation { *; }
-keep class kotlinx.coroutines.CopyableThreadContextElement { *; }
-keep class kotlinx.coroutines.CopyableThrowable { *; }
-keep class kotlinx.coroutines.CoroutineExceptionHandler { *; }
-keep class kotlinx.coroutines.CoroutineScope { *; }
-keep class kotlinx.coroutines.Delay { *; }
-keep class kotlinx.coroutines.DelicateCoroutinesApi { *; }
-keep class kotlinx.coroutines.DisposableHandle { *; }
-keep class kotlinx.coroutines.ExperimentalCoroutinesApi { *; }
-keep class kotlinx.coroutines.FlowPreview { *; }
-keep class kotlinx.coroutines.InternalCoroutinesApi { *; }
-keep class kotlinx.coroutines.ObsoleteCoroutinesApi { *; }
-keep class kotlinx.coroutines.ThreadContextElement { *; }
-keep class kotlinx.coroutines.sync.Semaphore { *; }
-keep class kotlinx.coroutines.flow.Flow { *; }
-keep class kotlinx.coroutines.flow.FlowCollector { *; }
-keep class kotlinx.coroutines.flow.MutableSharedFlow { *; }
-keep class kotlinx.coroutines.flow.MutableStateFlow { *; }
-keep class kotlinx.coroutines.flow.SharedFlow { *; }
-keep class kotlinx.coroutines.flow.SharingStarted { *; }
-keep class kotlinx.coroutines.flow.StateFlow { *; }
-keep class kotlinx.coroutines.channels.ChannelIterator { *; }
-keep class crc6426d7ca34f35c4cea.MainActivity { *; }
-keep class crc6426d7ca34f35c4cea.NavFragmentOnBackPressedCallback { *; }
-keep class crc64c8219e2dcf1c4273.GalleryFragment { *; }
-keep class crc64c8219e2dcf1c4273.ImportFragment { *; }
-keep class crc64c8219e2dcf1c4273.SettingsFragment { *; }
-keep class crc64c8219e2dcf1c4273.SlideshowFragment { *; }
-keep class crc64c8219e2dcf1c4273.ToolsFragment { *; }

# End of content from obj\Release\net7.0-android33.0\proguard\proguard_project_primary.cfg
# The proguard configuration file for the following section is proguard.cfg
-printconfiguration config_navigation.txt
-printseeds seeds.txt
-printusage usage.txt

#usage.txt - this file contains the code that was removed from the apk
#seeds.txt - this file has a list of classes and class members which were not obfuscated
#mappings.txt - this file provides the translation between the original and the obfuscated classes, methods, field names. Not applicable to xamarin, because we don't obfuscate.

# Added 20/06/2021 To upload a mapping.txt file
#Open the Play Console.
#Select an app.
#On the left menu, select Release > App bundle explorer.
#Select the Downloads tab, and scroll down to the 'Assets' section. Click the upload arrow for the mapping file or the debug symbols as applicable to upload the deobfuscation for the version of your app.

# Added these 3 13/01/2021
-printmapping mapping.txt
-keepattributes SourceFile
-keepattributes LineNumberTable

# remember to change back the build Action in the Properities Window to ProguardConfiguration if you ever exclude the proguard.cfg from the project, 
# as it will come back as none if you do not which means this file wont be read.


# 18/11/2020 Added for Build 120 after completed billing
-keep class androidx.core.app.CoreComponentFactory

# 26/04/2022 This fixed it #6928 xamarin.android github
# java.lang.IllegalArgumentException: No @Navigator.Name annotation found for NavGraphNavigator
-keepattributes RuntimeVisibleAnnotations
-keep class * extends androidx.navigation.Navigator

# Issue Xamarin.Android issue #5304 test if we require
#When uploading a package to the Google Play Store users are seeing
#the following warning.

#This App Bundle contains Java/Kotlin code, which might be obfuscated.
#To fix this users need to provide a mapping.txt file which contains
#the Java class mappings from their plain versions to the ones which
#are obfuscated. By default we do not obfuscate the java code but the
#warning still shows.

#To fix this issue we have a new property $(AndroidProguardMappingFile)
#which defaults to $(OutputPath)mapping.txt. This file will be produced
#as part of the build process. In order for this mapping file to be
#generated the following lines needed to be added to the proguard_xamarin.cfg
#file.

#-keepattributes SourceFile
#-keepattributes LineNumberTable



# End of content from proguard.cfg
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.versionedparcelable\1.1.1.12\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
-keep class * implements androidx.versionedparcelable.VersionedParcelable
-keep public class android.support.**Parcelizer { *; }
-keep public class androidx.**Parcelizer { *; }
-keep public class androidx.versionedparcelable.ParcelImpl

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.versionedparcelable\1.1.1.12\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.lifecycle.runtime\2.4.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
-keepattributes AnnotationDefault,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations

-keepclassmembers enum androidx.lifecycle.Lifecycle$Event {
    <fields>;
}

-keep !interface * implements androidx.lifecycle.LifecycleObserver {
}

-keep class * implements androidx.lifecycle.GeneratedAdapter {
    <init>(...);
}

-keepclassmembers class ** {
    @androidx.lifecycle.OnLifecycleEvent *;
}

# this rule is need to work properly when app is compiled with api 28, see b/142778206
# Also this rule prevents registerIn from being inlined.
-keepclassmembers class androidx.lifecycle.ReportFragment$LifecycleCallbacks { *; }
# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.lifecycle.runtime\2.4.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.annotation.experimental\1.2.0\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Ignore missing Kotlin meta-annotations so that this library can be used
# without adding a compileOnly dependency on the Kotlin standard library.
-dontwarn kotlin.Deprecated
-dontwarn kotlin.Metadata
-dontwarn kotlin.ReplaceWith
-dontwarn kotlin.annotation.AnnotationRetention
-dontwarn kotlin.annotation.AnnotationTarget
-dontwarn kotlin.annotation.Retention
-dontwarn kotlin.annotation.Target

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.annotation.experimental\1.2.0\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.core\1.7.0\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.ViewCompat$Api* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.WindowInsetsCompat$*Impl* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.app.NotificationCompat$*$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.os.UserHandleCompat$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.widget.EdgeEffectCompat$Api*Impl {
  <methods>;
}

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.core\1.7.0\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.savedstate\1.1.0.6\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

-keepclassmembers,allowobfuscation class * implements androidx.savedstate.SavedStateRegistry$AutoRecreated {
    <init>();
}

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.savedstate\1.1.0.6\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.recyclerview\1.2.1.5\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# When layoutManager xml attribute is used, RecyclerView inflates
#LayoutManagers' constructors using reflection.
-keep public class * extends androidx.recyclerview.widget.RecyclerView$LayoutManager {
    public <init>(android.content.Context, android.util.AttributeSet, int, int);
    public <init>();
}

-keepclassmembers class androidx.recyclerview.widget.RecyclerView {
    public void suppressLayout(boolean);
    public boolean isLayoutSuppressed();
}
# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.recyclerview\1.2.1.5\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.lifecycle.viewmodel\2.4.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>();
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application);
}

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.lifecycle.viewmodel\2.4.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.lifecycle.viewmodelsavedstate\2.4.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>(androidx.lifecycle.SavedStateHandle);
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application,androidx.lifecycle.SavedStateHandle);
}

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.lifecycle.viewmodelsavedstate\2.4.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.fragment\1.4.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The default FragmentFactory creates Fragment instances using reflection
-if public class ** extends androidx.fragment.app.Fragment
-keepclasseswithmembers,allowobfuscation public class <1> {
    public <init>();
}

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.fragment\1.4.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.vectordrawable.animated\1.1.0.12\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# keep setters in VectorDrawables so that animations can still work.
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$* {
   void set*(***);
   *** get*();
}

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.vectordrawable.animated\1.1.0.12\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.transition\1.4.1.5\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Copyright (C) 2017 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep a field in transition that is used to keep a reference to weakly-referenced object
-keepclassmembers class androidx.transition.ChangeBounds$* extends android.animation.AnimatorListenerAdapter {
  androidx.transition.ChangeBounds$ViewBounds mViewBounds;
}

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.transition\1.4.1.5\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.startup.startupruntime\1.1.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# It's important that we preserve initializer names, given they are used in the AndroidManifest.xml.
-keepnames class * extends androidx.startup.Initializer

# These Proguard rules ensures that ComponentInitializers are are neither shrunk nor obfuscated,
# and are a part of the primary dex file. This is because they are discovered and instantiated
# during application startup.
-keep class * extends androidx.startup.Initializer {
    # Keep the public no-argument constructor while allowing other methods to be optimized.
    <init>();
}

-assumenosideeffects class androidx.startup.StartupLogger { public static <methods>; }

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.startup.startupruntime\1.1.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.lifecycle.process\2.4.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# this rule is need to work properly when app is compiled with api 28, see b/142778206
-keepclassmembers class * extends androidx.lifecycle.EmptyActivityLifecycleCallbacks { *; }
# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.lifecycle.process\2.4.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.coordinatorlayout\1.1.0.10\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior and ViewPager's DecorView
-keepattributes *Annotation*

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.coordinatorlayout\1.1.0.10\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.appcompat\1.4.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# aapt is not able to read app::actionViewClass and app:actionProviderClass to produce proguard
# keep rules. Add a commonly used SearchView to the keep list until b/109831488 is resolved.
-keep class androidx.appcompat.widget.SearchView { <init>(...); }

# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl* {
  <methods>;
}

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.appcompat\1.4.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.google.android.material\1.4.0.4\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior
-keepattributes RuntimeVisible*Annotation*

# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# AppCompatViewInflater reads the viewInflaterClass theme attribute which then
# reflectively instantiates MaterialComponentsViewInflater using the no-argument
# constructor. We only need to keep this constructor and the class name if
# AppCompatViewInflater is also being kept.
-if class androidx.appcompat.app.AppCompatViewInflater
-keep class com.google.android.material.theme.MaterialComponentsViewInflater {
    <init>();
}


# End of content from C:\Users\gmcke\.nuget\packages\xamarin.google.android.material\1.4.0.4\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.window\1.0.0.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# A rule that will keep classes that implement SidecarInterface$SidecarCallback if Sidecar seems
# be used. See b/157286362 and b/165268619 for details.
# TODO(b/208543178) investigate how to pass header jar to R8 so we don't need this rule
-if class androidx.window.layout.SidecarCompat {
  public setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface);
}
-keep class androidx.window.layout.SidecarCompat$TranslatingCallback,
 androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback {
  public onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState);
  public onWindowLayoutChanged(android.os.IBinder, androidx.window.sidecar.SidecarWindowLayoutInfo);
}
# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.window\1.0.0.1\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.preference\1.2.0\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Preference objects are inflated via reflection
-keep public class androidx.preference.Preference {
    public <init>(android.content.Context, android.util.AttributeSet);
}
-keep public class * extends androidx.preference.Preference {
    public <init>(android.content.Context, android.util.AttributeSet);
}

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.preference\1.2.0\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.navigation.ui\2.3.5.3\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# setProgress is called via an ObjectAnimator in AbstractAppBarOnDestinationChangedListener
-keepclassmembers class androidx.appcompat.graphics.drawable.DrawerArrowDrawable {
    void setProgress(float);
}

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.navigation.ui\2.3.5.3\buildTransitive\net6.0-android31.0\..\..\proguard\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\69\jl\proguard.txt
-keep class * implements androidx.versionedparcelable.VersionedParcelable
-keep public class android.support.**Parcelizer { *; }
-keep public class androidx.**Parcelizer { *; }
-keep public class androidx.versionedparcelable.ParcelImpl

# End of content from C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\69\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\71\jl\proguard.txt
-keepattributes AnnotationDefault,
                RuntimeVisibleAnnotations,
                RuntimeVisibleParameterAnnotations,
                RuntimeVisibleTypeAnnotations

-keepclassmembers enum androidx.lifecycle.Lifecycle$Event {
    <fields>;
}

-keep !interface * implements androidx.lifecycle.LifecycleObserver {
}

-keep class * implements androidx.lifecycle.GeneratedAdapter {
    <init>(...);
}

-keepclassmembers class ** {
    @androidx.lifecycle.OnLifecycleEvent *;
}

# this rule is need to work properly when app is compiled with api 28, see b/142778206
# Also this rule prevents registerIn from being inlined.
-keepclassmembers class androidx.lifecycle.ReportFragment$LifecycleCallbacks { *; }
# End of content from C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\71\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\72\jl\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Ignore missing Kotlin meta-annotations so that this library can be used
# without adding a compileOnly dependency on the Kotlin standard library.
-dontwarn kotlin.Deprecated
-dontwarn kotlin.Metadata
-dontwarn kotlin.ReplaceWith
-dontwarn kotlin.annotation.AnnotationRetention
-dontwarn kotlin.annotation.AnnotationTarget
-dontwarn kotlin.annotation.Retention
-dontwarn kotlin.annotation.Target

# End of content from C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\72\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\73\jl\proguard.txt
# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.ViewCompat$Api* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.view.WindowInsetsCompat$*Impl* {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.app.NotificationCompat$*$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.os.UserHandleCompat$Api*Impl {
  <methods>;
}
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.core.widget.EdgeEffectCompat$Api*Impl {
  <methods>;
}

# End of content from C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\73\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\77\jl\proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

-keepclassmembers,allowobfuscation class * implements androidx.savedstate.SavedStateRegistry$AutoRecreated {
    <init>();
}

# End of content from C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\77\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\78\jl\proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# When layoutManager xml attribute is used, RecyclerView inflates
#LayoutManagers' constructors using reflection.
-keep public class * extends androidx.recyclerview.widget.RecyclerView$LayoutManager {
    public <init>(android.content.Context, android.util.AttributeSet, int, int);
    public <init>();
}

-keepclassmembers class androidx.recyclerview.widget.RecyclerView {
    public void suppressLayout(boolean);
    public boolean isLayoutSuppressed();
}
# End of content from C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\78\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\79\jl\proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>();
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application);
}

# End of content from C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\79\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\82\jl\proguard.txt
-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.ViewModel {
    <init>(androidx.lifecycle.SavedStateHandle);
}

-keepclassmembers,allowobfuscation class * extends androidx.lifecycle.AndroidViewModel {
    <init>(android.app.Application,androidx.lifecycle.SavedStateHandle);
}

# End of content from C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\82\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\85\jl\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The default FragmentFactory creates Fragment instances using reflection
-if public class ** extends androidx.fragment.app.Fragment
-keepclasseswithmembers,allowobfuscation public class <1> {
    public <init>();
}

# End of content from C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\85\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\89\jl\proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# keep setters in VectorDrawables so that animations can still work.
-keepclassmembers class androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$* {
   void set*(***);
   *** get*();
}

# End of content from C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\89\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\90\jl\proguard.txt
# Copyright (C) 2017 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Keep a field in transition that is used to keep a reference to weakly-referenced object
-keepclassmembers class androidx.transition.ChangeBounds$* extends android.animation.AnimatorListenerAdapter {
  androidx.transition.ChangeBounds$ViewBounds mViewBounds;
}

# End of content from C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\90\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\91\jl\proguard.txt
# It's important that we preserve initializer names, given they are used in the AndroidManifest.xml.
-keepnames class * extends androidx.startup.Initializer

# These Proguard rules ensures that ComponentInitializers are are neither shrunk nor obfuscated,
# and are a part of the primary dex file. This is because they are discovered and instantiated
# during application startup.
-keep class * extends androidx.startup.Initializer {
    # Keep the public no-argument constructor while allowing other methods to be optimized.
    <init>();
}

-assumenosideeffects class androidx.startup.StartupLogger { public static <methods>; }

# End of content from C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\91\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\94\jl\proguard.txt
# this rule is need to work properly when app is compiled with api 28, see b/142778206
-keepclassmembers class * extends androidx.lifecycle.EmptyActivityLifecycleCallbacks { *; }
# End of content from C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\94\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\102\jl\proguard.txt
# Copyright (C) 2016 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior and ViewPager's DecorView
-keepattributes *Annotation*

# End of content from C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\102\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\104\jl\proguard.txt
# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# aapt is not able to read app::actionViewClass and app:actionProviderClass to produce proguard
# keep rules. Add a commonly used SearchView to the keep list until b/109831488 is resolved.
-keep class androidx.appcompat.widget.SearchView { <init>(...); }

# Never inline methods, but allow shrinking and obfuscation.
-keepclassmembernames,allowobfuscation,allowshrinking class androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl* {
  <methods>;
}

# End of content from C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\104\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\107\jl\proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# CoordinatorLayout resolves the behaviors of its child components with reflection.
-keep public class * extends androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior {
    public <init>(android.content.Context, android.util.AttributeSet);
    public <init>();
}

# Make sure we keep annotations for CoordinatorLayout's DefaultBehavior
-keepattributes RuntimeVisible*Annotation*

# Copyright (C) 2018 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# AppCompatViewInflater reads the viewInflaterClass theme attribute which then
# reflectively instantiates MaterialComponentsViewInflater using the no-argument
# constructor. We only need to keep this constructor and the class name if
# AppCompatViewInflater is also being kept.
-if class androidx.appcompat.app.AppCompatViewInflater
-keep class com.google.android.material.theme.MaterialComponentsViewInflater {
    <init>();
}


# End of content from C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\107\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\108\jl\proguard.txt
# Copyright (C) 2020 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# A rule that will keep classes that implement SidecarInterface$SidecarCallback if Sidecar seems
# be used. See b/157286362 and b/165268619 for details.
# TODO(b/208543178) investigate how to pass header jar to R8 so we don't need this rule
-if class androidx.window.layout.SidecarCompat {
  public setExtensionCallback(androidx.window.layout.ExtensionInterfaceCompat$ExtensionCallbackInterface);
}
-keep class androidx.window.layout.SidecarCompat$TranslatingCallback,
 androidx.window.layout.SidecarCompat$DistinctSidecarElementCallback {
  public onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState);
  public onWindowLayoutChanged(android.os.IBinder, androidx.window.sidecar.SidecarWindowLayoutInfo);
}
# End of content from C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\108\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\116\jl\proguard.txt
# Copyright (C) 2015 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Preference objects are inflated via reflection
-keep public class androidx.preference.Preference {
    public <init>(android.content.Context, android.util.AttributeSet);
}
-keep public class * extends androidx.preference.Preference {
    public <init>(android.content.Context, android.util.AttributeSet);
}

# End of content from C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\116\jl\proguard.txt
# The proguard configuration file for the following section is C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\119\jl\proguard.txt
# Copyright (C) 2019 The Android Open Source Project
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# setProgress is called via an ObjectAnimator in AbstractAppBarOnDestinationChangedListener
-keepclassmembers class androidx.appcompat.graphics.drawable.DrawerArrowDrawable {
    void setProgress(float);
}

# End of content from C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\lp\119\jl\proguard.txt
# The proguard configuration file for the following section is obj\Release\net7.0-android33.0\aapt_rules.txt
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\android\manifest\AndroidManifest.xml:11
-keep class android.app.Application { <init>(); }
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\android\manifest\AndroidManifest.xml:11
-keep class androidx.core.app.CoreComponentFactory { <init>(); }
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\android\manifest\AndroidManifest.xml:21
-keep class androidx.startup.InitializationProvider { <init>(); }
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\android\manifest\AndroidManifest.xml:12
-keep class crc6426d7ca34f35c4cea.MainActivity { <init>(); }
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\android\manifest\AndroidManifest.xml:18
-keep class mono.MonoRuntimeProvider { <init>(); }
# Referenced at res/layout/abc_alert_dialog_button_bar_material.xml:43
# Referenced at res/layout/abc_alert_dialog_material.xml:52
# Referenced at res/layout/abc_alert_dialog_title_material.xml:57
# Referenced at res/layout/mtrl_alert_dialog.xml:51
# Referenced at res/layout/mtrl_alert_dialog_actions.xml:45
# Referenced at res/layout/mtrl_alert_dialog_title.xml:41
-keep class android.widget.Space { <init>(...); }

# Referenced at res/layout/abc_select_dialog_material.xml:23
-keep class androidx.appcompat.app.AlertController$RecycleListView { <init>(...); }

# Referenced at res/layout/abc_action_menu_item_layout.xml:17
-keep class androidx.appcompat.view.menu.ActionMenuItemView { <init>(...); }

# Referenced at res/layout/abc_expanded_menu_layout.xml:17
-keep class androidx.appcompat.view.menu.ExpandedMenuView { <init>(...); }

# Referenced at res/layout/abc_cascading_menu_item_layout.xml:20
# Referenced at res/layout/abc_list_menu_item_layout.xml:17
# Referenced at res/layout/abc_popup_menu_item_layout.xml:17
-keep class androidx.appcompat.view.menu.ListMenuItemView { <init>(...); }

# Referenced at res/layout/abc_screen_toolbar.xml:27
-keep class androidx.appcompat.widget.ActionBarContainer { <init>(...); }

# Referenced at res/layout/abc_action_mode_bar.xml:19
# Referenced at res/layout/abc_screen_toolbar.xml:43
-keep class androidx.appcompat.widget.ActionBarContextView { <init>(...); }

# Referenced at res/layout/abc_screen_toolbar.xml:17
-keep class androidx.appcompat.widget.ActionBarOverlayLayout { <init>(...); }

# Referenced at res/layout/abc_action_menu_layout.xml:17
-keep class androidx.appcompat.widget.ActionMenuView { <init>(...); }

# Referenced at res/layout/abc_activity_chooser_view.xml:19
-keep class androidx.appcompat.widget.ActivityChooserView$InnerLayout { <init>(...); }

# Referenced at res/layout/abc_alert_dialog_material.xml:18
# Referenced at res/layout/mtrl_alert_dialog.xml:17
-keep class androidx.appcompat.widget.AlertDialogLayout { <init>(...); }

# Referenced at res/layout/abc_alert_dialog_button_bar_material.xml:26
# Referenced at res/layout/mtrl_alert_dialog_actions.xml:26
-keep class androidx.appcompat.widget.ButtonBarLayout { <init>(...); }

# Referenced at res/layout/abc_screen_content_include.xml:19
-keep class androidx.appcompat.widget.ContentFrameLayout { <init>(...); }

# Referenced at res/layout/abc_alert_dialog_title_material.xml:45
# Referenced at res/layout/mtrl_alert_dialog_title.xml:36
-keep class androidx.appcompat.widget.DialogTitle { <init>(...); }

# Referenced at res/layout/abc_screen_simple_overlay_action_mode.xml:23
-keep class androidx.appcompat.widget.FitWindowsFrameLayout { <init>(...); }

# Referenced at res/layout/abc_dialog_title_material.xml:22
# Referenced at res/layout/abc_screen_simple.xml:17
-keep class androidx.appcompat.widget.FitWindowsLinearLayout { <init>(...); }

# Referenced at res/layout/abc_search_view.xml:75
-keep class androidx.appcompat.widget.SearchView$SearchAutoComplete { <init>(...); }

# Referenced at res/layout/preference_widget_switch_compat.xml:20
-keep class androidx.appcompat.widget.SwitchCompat { <init>(...); }

# Referenced at res/layout/abc_screen_toolbar.xml:36
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\res\layout\app_bar_main.xml:1
-keep class androidx.appcompat.widget.Toolbar { <init>(...); }

# Referenced at res/layout/abc_screen_simple.xml:25
# Referenced at res/layout/abc_screen_simple_overlay_action_mode.xml:32
-keep class androidx.appcompat.widget.ViewStubCompat { <init>(...); }

# Referenced at res/layout/material_timepicker_dialog.xml:38
-keep class androidx.constraintlayout.widget.Barrier { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\res\layout\content_main.xml:1
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\res\layout\fragment_gallery.xml:1
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\res\layout\fragment_import.xml:1
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\res\layout\fragment_slideshow.xml:1
# Referenced at C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\res\layout\fragment_tools.xml:1
# Referenced at res/layout/material_timepicker_dialog.xml:18
-keep class androidx.constraintlayout.widget.ConstraintLayout { <init>(...); }

# Referenced at res/layout-land/material_timepicker.xml:23
-keep class androidx.constraintlayout.widget.Guideline { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\res\layout\app_bar_main.xml:1
# Referenced at res/layout/design_bottom_sheet_dialog.xml:26
-keep class androidx.coordinatorlayout.widget.CoordinatorLayout { <init>(...); }

# Referenced at res/layout/abc_alert_dialog_material.xml:41
# Referenced at res/layout/mtrl_alert_dialog.xml:40
-keep class androidx.core.widget.NestedScrollView { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\res\layout\activity_main.xml:1
-keep class androidx.drawerlayout.widget.DrawerLayout { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\res\layout\content_main.xml:1
-keep class androidx.fragment.app.FragmentContainerView { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\res\layout\content_main.xml:1
-keep class androidx.navigation.fragment.NavHostFragment { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\res\xml\preferences.xml:1
-keep class androidx.preference.CheckBoxPreference { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\res\xml\preferences.xml:1
-keep class androidx.preference.PreferenceCategory { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\res\xml\preferences.xml:1
-keep class androidx.preference.PreferenceScreen { <init>(...); }

# Referenced at res/layout/preference_widget_seekbar.xml:70
# Referenced at res/layout/preference_widget_seekbar_material.xml:78
-keep class androidx.preference.UnPressableLinearLayout { <init>(...); }

# Referenced at res/layout/image_frame.xml:33
# Referenced at res/layout/preference.xml:32
# Referenced at res/layout/preference_dropdown.xml:39
-keep class androidx.preference.internal.PreferenceImageView { <init>(...); }

# Referenced at res/layout/mtrl_calendar_horizontal.xml:29
# Referenced at res/layout/mtrl_calendar_months.xml:18
# Referenced at res/layout/preference_recyclerview.xml:18
-keep class androidx.recyclerview.widget.RecyclerView { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\res\layout\app_bar_main.xml:1
-keep class com.google.android.material.appbar.AppBarLayout { <init>(...); }

# Referenced at res/layout/test_toolbar.xml:16
# Referenced at res/layout/test_toolbar_custom_background.xml:16
# Referenced at res/layout/test_toolbar_elevation.xml:16
# Referenced at res/layout/test_toolbar_surface.xml:16
-keep class com.google.android.material.appbar.MaterialToolbar { <init>(...); }

# Referenced at res/layout/material_clock_period_toggle.xml:35
# Referenced at res/layout/material_timepicker_dialog.xml:73
# Referenced at res/layout/mtrl_calendar_month_navigation.xml:32
# Referenced at res/layout/mtrl_picker_header_fullscreen.xml:36
-keep class com.google.android.material.button.MaterialButton { <init>(...); }

# Referenced at res/layout/material_clock_period_toggle.xml:18
# Referenced at res/layout-land/material_clock_period_toggle_land.xml:18
-keep class com.google.android.material.button.MaterialButtonToggleGroup { <init>(...); }

# Referenced at res/layout/material_time_chip.xml:17
# Referenced at res/layout/test_action_chip.xml:17
# Referenced at res/layout/test_chip_zero_corner_radius.xml:17
# Referenced at res/layout/test_reflow_chipgroup.xml:25
-keep class com.google.android.material.chip.Chip { <init>(...); }

# Referenced at res/layout/test_reflow_chipgroup.xml:19
-keep class com.google.android.material.chip.ChipGroup { <init>(...); }

# Referenced at res/layout/mtrl_calendar_month.xml:18
-keep class com.google.android.material.datepicker.MaterialCalendarGridView { <init>(...); }

# Referenced at res/layout/design_bottom_navigation_item.xml:27
# Referenced at res/layout/mtrl_navigation_rail_item.xml:24
# Referenced at res/layout/test_navigation_bar_item_layout.xml:27
-keep class com.google.android.material.internal.BaselineLayout { <init>(...); }

# Referenced at res/layout/design_text_input_end_icon.xml:18
# Referenced at res/layout/design_text_input_start_icon.xml:18
# Referenced at res/layout/mtrl_picker_header_toggle.xml:18
-keep class com.google.android.material.internal.CheckableImageButton { <init>(...); }

# Referenced at res/layout/design_navigation_item.xml:17
-keep class com.google.android.material.internal.NavigationMenuItemView { <init>(...); }

# Referenced at res/layout/design_navigation_menu.xml:17
-keep class com.google.android.material.internal.NavigationMenuView { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\res\layout\activity_main.xml:1
-keep class com.google.android.material.navigation.NavigationView { <init>(...); }

# Referenced at res/layout/design_layout_snackbar.xml:18
# Referenced at res/layout/mtrl_layout_snackbar.xml:18
-keep class com.google.android.material.snackbar.Snackbar$SnackbarLayout { <init>(...); }

# Referenced at res/layout/design_layout_snackbar_include.xml:18
# Referenced at res/layout/mtrl_layout_snackbar_include.xml:18
-keep class com.google.android.material.snackbar.SnackbarContentLayout { <init>(...); }

# Referenced at res/layout/mtrl_picker_text_input_date.xml:31
# Referenced at res/layout/mtrl_picker_text_input_date_range.xml:32
-keep class com.google.android.material.textfield.TextInputEditText { <init>(...); }

# Referenced at res/layout/material_time_input.xml:18
# Referenced at res/layout/mtrl_picker_text_input_date.xml:26
# Referenced at res/layout/mtrl_picker_text_input_date_range.xml:26
-keep class com.google.android.material.textfield.TextInputLayout { <init>(...); }

# Referenced at res/layout/text_view_with_line_height_from_appearance.xml:17
# Referenced at res/layout/text_view_with_line_height_from_layout.xml:17
# Referenced at res/layout/text_view_with_line_height_from_style.xml:17
# Referenced at res/layout/text_view_with_theme_line_height.xml:17
# Referenced at res/layout/text_view_without_line_height.xml:17
-keep class com.google.android.material.textview.MaterialTextView { <init>(...); }

# Referenced at res/layout/material_chip_input_combo.xml:18
-keep class com.google.android.material.timepicker.ChipTextInputComboView { <init>(...); }

# Referenced at res/layout/material_timepicker.xml:31
-keep class com.google.android.material.timepicker.ClockFaceView { <init>(...); }

# Referenced at res/layout/material_clockface_view.xml:25
-keep class com.google.android.material.timepicker.ClockHandView { <init>(...); }

# Referenced at res/layout/material_timepicker_dialog.xml:46
-keep class com.google.android.material.timepicker.TimePickerView { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\res\navigation\nav_graph.xml:1
-keep class crc64c8219e2dcf1c4273.GalleryFragment { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\res\navigation\nav_graph.xml:1
-keep class crc64c8219e2dcf1c4273.ImportFragment { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\res\navigation\nav_graph.xml:1
-keep class crc64c8219e2dcf1c4273.SettingsFragment { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\res\navigation\nav_graph.xml:1
-keep class crc64c8219e2dcf1c4273.SlideshowFragment { <init>(...); }

# Referenced at C:\ProjectsVS2022Preview\NavigationGraph2Net7\obj\Release\net7.0-android33.0\res\navigation\nav_graph.xml:1
-keep class crc64c8219e2dcf1c4273.ToolsFragment { <init>(...); }


# End of content from obj\Release\net7.0-android33.0\aapt_rules.txt
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.kotlinx.coroutines.core.jvm\1.6.0\buildTransitive\net6.0-android31.0\..\..\jar\org.jetbrains.kotlinx.kotlinx-coroutines-core-jvm-1.6.0.jar:META-INF/proguard/coroutines.pro
# When editing this file, update the following files as well:
# - META-INF/com.android.tools/proguard/coroutines.pro
# - META-INF/com.android.tools/r8/coroutines.pro

# ServiceLoader support
-keepnames class kotlinx.coroutines.internal.MainDispatcherFactory {}
-keepnames class kotlinx.coroutines.CoroutineExceptionHandler {}

# Most of volatile fields are updated with AFU and should not be mangled
-keepclassmembers class kotlinx.coroutines.** {
    volatile <fields>;
}

# Same story for the standard library's SafeContinuation that also uses AtomicReferenceFieldUpdater
-keepclassmembers class kotlin.coroutines.SafeContinuation {
    volatile <fields>;
}

# These classes are only required by kotlinx.coroutines.debug.AgentPremain, which is only loaded when
# kotlinx-coroutines-core is used as a Java agent, so these are not needed in contexts where ProGuard is used.
-dontwarn java.lang.instrument.ClassFileTransformer
-dontwarn sun.misc.SignalHandler
-dontwarn java.lang.instrument.Instrumentation
-dontwarn sun.misc.Signal

# Only used in `kotlinx.coroutines.internal.ExceptionsConstructor`.
# The case when it is not available is hidden in a `try`-`catch`, as well as a check for Android.
-dontwarn java.lang.ClassValue

# An annotation used for build tooling, won't be directly accessed.
-dontwarn org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.kotlinx.coroutines.core.jvm\1.6.0\buildTransitive\net6.0-android31.0\..\..\jar\org.jetbrains.kotlinx.kotlinx-coroutines-core-jvm-1.6.0.jar:META-INF/proguard/coroutines.pro
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.kotlinx.coroutines.android\1.6.0\buildTransitive\net6.0-android31.0\..\..\jar\org.jetbrains.kotlinx.kotlinx-coroutines-android-1.6.0.jar:META-INF/proguard/coroutines.pro
# Files in this directory will be ignored starting with Android Gradle Plugin 3.6.0+

# When editing this file, update the following files as well for AGP 3.6.0+:
# - META-INF/com.android.tools/proguard/coroutines.pro
# - META-INF/com.android.tools/r8-upto-1.6.0/coroutines.pro

-keep class kotlinx.coroutines.android.AndroidDispatcherFactory {*;}

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.kotlinx.coroutines.android\1.6.0\buildTransitive\net6.0-android31.0\..\..\jar\org.jetbrains.kotlinx.kotlinx-coroutines-android-1.6.0.jar:META-INF/proguard/coroutines.pro
# The proguard configuration file for the following section is C:\Users\gmcke\.nuget\packages\xamarin.androidx.annotation\1.5.0.1\buildTransitive\net6.0-android31.0\..\..\jar\androidx.annotation.annotation.jar:META-INF/proguard/androidx-annotations.pro
-keep,allowobfuscation @interface androidx.annotation.Keep
-keep @androidx.annotation.Keep class * {*;}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <methods>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <fields>;
}

-keepclasseswithmembers class * {
    @androidx.annotation.Keep <init>(...);
}

-keepclassmembers,allowobfuscation class * {
  @androidx.annotation.DoNotInline <methods>;
}

# End of content from C:\Users\gmcke\.nuget\packages\xamarin.androidx.annotation\1.5.0.1\buildTransitive\net6.0-android31.0\..\..\jar\androidx.annotation.annotation.jar:META-INF/proguard/androidx-annotations.pro